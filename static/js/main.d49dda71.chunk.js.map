{"version":3,"sources":["store/global.ts","helpers/tree.ts","helpers/common.ts","store/editor/varsSlice.ts","store/editor/documentSlice.ts","store/editor/index.ts","store/components.ts","store/pages.ts","store/store.ts","data/pages.ts","data/components.ts","modules/dataStore.ts","procedures/editor/index.ts","procedures/main.ts","jsx/components/css-props-editor/PropsList.tsx","modules/css/css.ts","jsx/components/elements/SubmitableInput.tsx","jsx/components/elements/PopoverInput.tsx","jsx/components/css-props-editor/editor/length.tsx","jsx/components/css-props-editor/editor/lengthPercentage.tsx","jsx/components/css-props-editor/editor/variant.tsx","jsx/components/css-props-editor/editor/index.ts","jsx/components/css-props-editor/editor/color.tsx","jsx/components/css-props-editor/Prop.tsx","jsx/components/editor/right/TagProps.tsx","jsx/components/editor/right/ComponentProps.tsx","jsx/components/editor/right/SlotProps.tsx","jsx/components/editor/right/RightSpace.tsx","jsx/components/HeadStyles.tsx","jsx/components/elements/ContentEditable.tsx","procedures/editor/template.ts","jsx/components/editor/EditArea.tsx","procedures/nodesHandlers.ts","jsx/components/editor/node-context-menu/NodeContextMenu.tsx","jsx/components/editor/Bottom.tsx","jsx/components/editor/Floats.tsx","jsx/components/editor/ContextMenus.tsx","jsx/components/editor/frame/Frame.tsx","jsx/components/editor/select-component/SelectComponent.tsx","jsx/components/editor/Editor.tsx","jsx/views/Components.tsx","jsx/views/Pages.tsx","jsx/views/App.tsx","serviceWorker.ts","index.tsx","jsx/components/editor/Editor.module.css","jsx/components/editor/select-component/SelectComponent.module.css","jsx/components/css-props-editor/Prop.module.css","jsx/views/Components.module.css","jsx/components/editor/Bottom.module.css","jsx/components/editor/Floats.module.css","jsx/views/Pages.module.css","jsx/views/App.module.css","jsx/components/editor/right/RightSpace.module.css","jsx/components/editor/right/TagProps.module.css","jsx/components/css-props-editor/PropsList.module.css","jsx/components/css-props-editor/editor/length.module.css","jsx/components/editor/frame/Frame.module.css"],"names":["globalSlice","createSlice","name","initialState","activity","type","reducers","setActivity","state","payload","activitySelector","global","StopWalkSymbol","Symbol","walkTreeDeep","node","cb","path","slotName","slots","content","len","length","k","filterTree","tree","result","push","getNodeByPath","i","pi","getAllIds","mapTree","n","id","makeNewId","ids","prefix","cur","max","map","parseInt","replace","createShadowNode","width","height","createEmptySlotContent","createTagNode","parentIds","tagId","tag","style","children","createComponentNode","component","componentSlots","template","newComponentId","shadowIds","reduce","newId","slotsEntries","slot","code","Object","fromEntries","props","areValuesEqual","isEqual","areArraysEqual","a1","a2","arePathsEqual","p1","p2","areArraysEqualCb","splitArrLastEl","arr","lm1","slice","MapProxy","Map","this","get","v","set","clear","delete","rectToBox","rect","left","top","right","bottom","createVarsSliceState","documentId","activeNodePath","undefined","activeShadowContent","hoverNode","blinkAreas","mainCoords","iframeCoords","contextMenu","refs","coords","varsSlice","merge","assign","setIframeCoords","setMainCoords","setActiveShadowContent","setActiveNode","setHoverNode","setContextMenu","addBlinkArea","uid","removeBlinkArea","idx","findIndex","b","splice","removeAllBlinkAreas","setCoords","removeCoords","documentSlice","replaceDocument","replaceNode","parentPath","index","insertNode","addIdx","removeNode","setStyleProp","prop","value","setSlotParams","setText","text","addComponentProp","doc","p","setComponentProp","editorSliceReducer","combineReducers","document","reducer","vars","templateRootSelector","editor","activeNodePathNodeSelector","mainCoordsSelector","iframeCoordsSelector","blinkAreasSelector","contextMenuSelector","refStoreSelector","activeShadowContentSelector","componentsSlice","components","setComponents","pagesSlice","pages","setPages","middleware","getDefaultMiddleware","serializableCheck","store","configureStore","padding","backgroundColor","place","display","minWidth","borderWidth","borderStyle","borderColor","dataStore","version","stores","on","forEach","page","add","comp","table","Dexie","loadDocument","a","applyDocument","dispatch","getState","batch","actions","changeActivity","prevActivity","initialDocument","update","omit","loadPages","loadComponents","newVars","find","c","console","log","toArray","PropsList","className","styles","allProps","allCssPropsKeyed","keyBy","defaults","variants","allCssPropsNames","sortBy","keys","SubmitableInput","title","onSubmit","useState","setName","placeholder","autoFocus","onChange","e","target","onKeyDown","key","icon","onClick","PopoverInput","units","LengthBase","num","match","unit","substring","permissionsMenu","menu","curUnit","active","position","Position","BOTTOM_RIGHT","minimal","rightIcon","onValueChange","newNum","rightElement","VariantSelect","Select","ofType","renderItem","handleClick","modifiers","disabled","color","variant","activeItem","items","itemRenderer","onItemSelect","filterable","Prop","propName","label","MenuContent","menuContent","cell","React","createElement","editors","filterItem","search","startsWith","PropSelect","TagProps","useDispatch","usedProps","useMemo","propsToAdd","difference","curComponent","useSelector","isComp","some","newVal","propSelect","itemPredicate","ComponentProps","SlotProps","RightSpace","np","shallowEqual","rightSpace","JSON","stringify","createCssClass","kebabCase","join","getHeadStyle","styleSheets","ss","j","cssRules","cssRule","CSSStyleRule","selectorText","cssText","CSSKeyframesRule","ArrayStyles","memo","s","TreeStyles","tags","filterCb","mapValues","compStyle","adds","componentsSelector","x","ComponentsStyles","filter","ea","HeadStyles","parentStyles","replaceCaret","el","findDocument","parentNode","defaultView","HTMLDocument","isDocument","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","focus","ContentEditable","lastHtml","html","getEl","attrs","ref","current","emitChange","originalEvt","innerHTML","dangerouslySetInnerHTML","__html","onInput","onBlur","onKeyUp","contentEditable","nextProps","Component","activateNode","applyShadowContent","newNode","createSlotNode","addNewShadow","blinkNode","getBoundingClientRect","setTimeout","rootPath","SlotContext","createContext","SlotActiveContext","TemplateActiveContext","EmptyShadowActivator","selected","useContext","EmptyShadowTag","Provider","MKTagBrick","classPrefix","EmptyShadowComponent","componentId","slotActive","MKComponentBrick","SlotContent","paths","sn","templateActive","ctx","MKTemplate","MKSlotBrickActive","bricks","txt","shadow","isMyPath","MKBrickSelector","parentAttrs","useDebugValue","nodeRef","useRef","nodeId","refStore","useLayoutEffect","element","resizeObserver","ResizeObserver","observe","disconnect","useRefStore","activeAttrs","stopPropagation","onNodeClick","onContextMenu","preventDefault","clientX","clientY","onNodeContextMenu","onMouseOver","onNodeOver","onMouseOut","onNodeOut","FrameTree","slotSubmenu","slotChildren","NodeContextMenu","useSelect","useNodeByPath","icons","nodeToString","BreadCrumbWrapper","item","interactionKind","PopoverInteractionKind","CLICK","breadCrumb","renderBreadcrumb","emptyPath","selector","Bottom","getBranch","curPath","breadcrumbRenderer","currentBreadcrumbRenderer","FloatBox","box","FloatsBlinkAreas","selectedUid","area","blinkBox","Floats","selectedBox","ContextMenus","useStore","useEffect","Promise","resolve","then","ContextMenu","show","Frame","createRef","dispatchCoords","handleLoad","getDoc","body","classList","forceUpdate","handleMouseLeave","readyState","addEventListener","removeEventListener","contentDocument","ReactDOM","createPortal","head","cn","frame","onMouseLeave","renderFrameContents","PureComponent","Item","isActive","tooltip","interactive","elevation","itemCard","slotContent","itemInner","stringifyContent","SelectComponent","grid","slidePanelSelector","SlidePanel","slidePanel","editorSelector","Editor","shadowActive","scale","center","frameMini","cursor","Components","Math","round","random","createComponent","iconSize","intent","Pages","SwitchActivity","App","app","Group","Heading","Divider","Boolean","window","location","hostname","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d49dda71.chunk.js","sourcesContent":["import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {TGlobalState} from './store';\nimport {TDocumentIdentifier, TTemplateNode} from '../types';\nimport {TVarsSliceState} from './editor/varsSlice';\n\nexport type TActivityComponents = {type: 'components'};\nexport type TActivityPages = {type: 'pages'};\nexport type TActivityEditor = {\n  type: 'editor';\n  document: TDocumentIdentifier;\n};\n\nexport type TActivity = TActivityComponents | TActivityPages | TActivityEditor;\n\nexport type TTab = {\n  document: TDocumentIdentifier;\n  vars: Partial<TVarsSliceState>;\n  template: TTemplateNode;\n};\n\nexport type TGlobalSliceState = {\n  activity: TActivity;\n};\n\nexport const globalSliceState: TGlobalSliceState = {\n  activity: {\n    type: 'components'\n  },\n}\n\nexport const globalSlice = createSlice({\n  name: 'global',\n  initialState: globalSliceState,\n  reducers: {\n    setActivity(state, {payload}: PayloadAction<TActivity>) {\n      state.activity = payload;\n    },\n  }\n});\n\nexport const activitySelector = (state: TGlobalState): TActivity => state.global.activity;\n","import {max} from 'lodash';\n\nimport {\n  TTemplateNode,\n  TComponentNode,\n  TPath,\n  TSlotContent,\n  TBaseNode,\n  TTagNode,\n  TShadowNode,\n  TComponent, TSlotNode\n} from '../types'\n\nexport const StopWalkSymbol = Symbol();\n\nexport function walkTreeDeep(node: TTemplateNode, cb: (node: TTemplateNode, path: TPath) => any, path: TPath = []) {\n  if (cb(node, path) === StopWalkSymbol) {\n    return;\n  }\n\n  if (node.type === 'component' || node.type === 'tag') {\n    for (const slotName in node.slots) {\n      const content = (node.slots as {[key: string]: TSlotContent<TTemplateNode>})[slotName];\n      const len = content.length;\n      for (let k = 0; k < len; ++k) {\n        walkTreeDeep(content[k], cb, [...path, [slotName, k]]);\n      }\n    }\n  }\n}\n\nexport function mapTree<T extends TBaseNode = TTemplateNode, R = any>(tree: TTemplateNode, cb: (node: TTemplateNode, path: TPath) => R): R[] {\n  const result: R[] = [];\n  walkTreeDeep(tree, (node, path) => result.push(cb(node, path)));\n  return result\n}\n\nexport function filterTree<T extends TBaseNode = TTemplateNode>(tree: TTemplateNode, cb: (node: TTemplateNode, path: TPath) => boolean): T[] {\n  const result: T[] = [];\n  walkTreeDeep(tree, ((node, path) => {\n    if (cb(node, path)) {\n      result.push(node as any);\n    }\n  }));\n  return result\n}\n\nexport function getNodeByPath(node: TTemplateNode, path: TPath): TTemplateNode {\n  for (let i = 0; i < path.length; ++i) {\n    const pi = path[i];\n    node = (node as TComponentNode<TTemplateNode>).slots[pi[0]][pi[1]];\n  }\n  return node;\n}\n\nexport function getAllIds(node: TTemplateNode): string[] {\n  return  mapTree<TTemplateNode, string>(node, n => n.id);\n}\n\nexport function getBranch(node: TTemplateNode, path: TPath): TTemplateNode[] {\n  const result = [node];\n  for (let i = 0; i < path.length; ++i) {\n    const pi = path[i];\n    node = (node as TComponentNode<TTemplateNode>).slots[pi[0]][pi[1]];\n    result.push(node);\n  }\n  return result;\n}\n\nexport function makeNewId(ids: string[], prefix = 'id'): string {\n  const cur = max(ids.map(i => parseInt(i.replace(prefix, '')))) || 0;\n  return `${prefix}${cur + 1}`;\n}\n\nexport function getMakeNewIdFn(ids: string[]): () => string {\n  return () => {\n    const id = makeNewId(ids);\n    ids.push(id);\n    return id;\n  }\n}\n\nexport function createShadowNode(id: string, width: string, height: string): TShadowNode {\n  return {\n    id,\n    type: 'shadow',\n    width,\n    height\n  }\n}\n\nexport function createSlotNode(id: string): TSlotNode {\n  return {\n    id,\n    type: 'slot',\n    code: `code_${id}`,\n    width: '100px',\n    height: '100px'\n  };\n}\n\nexport function createEmptySlotContent(id: string, width: string, height: string): TSlotContent<TTemplateNode> {\n  return [createShadowNode(id, width, height)];\n}\n\nexport function createTagNode(parentIds: string[], name: string): TTagNode<TTemplateNode> {\n  const tagId = makeNewId(parentIds);\n  const shadowId = makeNewId([...parentIds, tagId]);\n  const slotContent = createEmptySlotContent(shadowId, '100%', '50px');\n  return {id: tagId, type: 'tag', tag: name, style: {}, slots: {children: slotContent}};\n}\n\nexport function createComponentNode(parentIds: string[], component: TComponent): TComponentNode<TTemplateNode> {\n  const componentSlots = filterTree<TSlotNode>(component.template, node => node.type === 'slot');\n\n  const newComponentId = makeNewId(parentIds);\n  const shadowIds = componentSlots.reduce<string[]>((ids, node) => {\n    const newId = makeNewId([newComponentId, ...parentIds, ...ids]);\n    return [...ids, newId];\n  }, []);\n  const slotsEntries = componentSlots.map((slot, i) => [\n    slot.code,\n    createEmptySlotContent(shadowIds[i], slot.width, slot.height)\n  ])\n  const slots: {[key: string]: TSlotContent<TTemplateNode>} = Object.fromEntries(slotsEntries);\n  return {id: newComponentId, type: 'component', component: component.id, props: {}, slots}\n}\n","import {isEqual} from 'lodash';\nimport {TBoxCoords, TPath} from '../types';\nimport {TActivity} from '../store/global';\n\nexport const areValuesEqual: <T>(a: T, b: T) => boolean = isEqual;\n\nexport function areArraysEqual<T>(a1: T[], a2: T[]): boolean {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; ++i) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function areArraysEqualCb<T>(a1: T[], a2: T[], cb: (i1: T, i2: T) => boolean): boolean {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; ++i) {\n    if (!cb(a1[i], a2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function createAreArraysEqual<T>(cb: (i1: T, i2: T) => boolean): (a1: T[], a2: T[]) => boolean {\n  return function (a1, a2) {\n    if (a1.length !== a2.length) {\n      return false;\n    }\n    for (let i = 0; i < a1.length; ++i) {\n      if (!cb(a1[i], a2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport function arePathsEqual(p1: TPath, p2: TPath): boolean {\n  return areArraysEqualCb(p1, p2, areArraysEqual)\n}\n\nexport function splitArrLastEl<T>(arr: T[]): [T[], T] {\n  const lm1 = arr.length - 1;\n  return [arr.slice(0, lm1), arr[lm1]];\n}\n\nexport class MapProxy<K, V> {\n  private map: Map<K, V> = new Map<K, V>();\n  get (k: K): V {\n    return this.map.get(k) as V;\n  }\n  set (k: K, v: V) {\n    this.map.set(k, v);\n    return this;\n  }\n  clear () {\n    this.map.clear();\n  }\n  delete (k: K) {\n    return this.map.delete(k);\n  }\n}\n\nexport function rectToBox(rect: DOMRect): TBoxCoords {\n  return {\n    left: rect.left,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\nexport function isSameActivity(a: TActivity, b: TActivity): boolean {\n  if (a.type === 'editor' && b.type === 'editor') {\n    return areValuesEqual(a.document, b.document);\n  }\n  return areValuesEqual(a, b);\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TBoxCoords, TDocumentIdentifier, TPath} from '../../types';\nimport {MapProxy} from '../../helpers/common';\nimport {TDocumentSliceState} from './documentSlice';\n\nexport type TActiveShadowContent = ['tag', string] | ['component', string] | ['slot'];\n\nexport type THoverNodePath = TPath\n\nexport type TBlinkArea = {\n  uid: string,\n}\n\nexport type TContextMenuState = {\n  left: number;\n  top: number;\n  path: TPath;\n}\n\nexport type TVarsSliceState = {\n  documentId: TDocumentIdentifier;\n  initialDocument?: TDocumentSliceState;\n  activeNodePath?: TPath;\n  activeShadowContent?: TActiveShadowContent;\n  hoverNode?: THoverNodePath;\n  blinkAreas: TBlinkArea[];\n  mainCoords: TBoxCoords;\n  iframeCoords: TBoxCoords;\n  contextMenu?: TContextMenuState;\n  refs: MapProxy<string, HTMLDivElement>;\n  coords: {\n    [key: string]: TBoxCoords;\n  }\n}\n\nexport function createVarsSliceState(state?: Partial<TVarsSliceState>): TVarsSliceState {\n  return {\n    documentId: {type: 'page', id: ''},\n    activeNodePath: undefined,\n    activeShadowContent: undefined,\n    hoverNode: undefined,\n    blinkAreas: [],\n    mainCoords: {left: 0, top: 0, right: 0, bottom: 0, width: 0, height: 0},\n    iframeCoords: {left: 0, top: 0, right: 0, bottom: 0, width: 0, height: 0},\n    contextMenu: undefined,\n    refs: new MapProxy(),\n    coords: {},\n    ...state,\n  };\n}\n\nexport const varsSlice = createSlice({\n  name: 'vars',\n  initialState: createVarsSliceState(),\n  reducers: {\n    merge(state, {payload}: PayloadAction<Partial<TVarsSliceState>>) {\n      Object.assign(state, payload);\n    },\n    setIframeCoords(state, {payload}: PayloadAction<TBoxCoords>) {\n      state.iframeCoords = payload;\n    },\n    setMainCoords(state, {payload}: PayloadAction<TBoxCoords>) {\n      state.mainCoords = payload;\n    },\n    setActiveShadowContent(state, {payload}: PayloadAction<TActiveShadowContent | undefined>) {\n      state.activeShadowContent = payload;\n    },\n    setActiveNode(state, {payload}: PayloadAction<TPath | undefined>) {\n      state.activeNodePath = payload;\n    },\n    setHoverNode(state, {payload}: PayloadAction<THoverNodePath | undefined>) {\n      state.hoverNode = payload;\n    },\n    setContextMenu(state, {payload}: PayloadAction<TContextMenuState | undefined>) {\n      state.contextMenu = payload;\n    },\n    addBlinkArea(state, {payload: [uid, box]}: PayloadAction<[string, TBoxCoords]>) {\n      state.blinkAreas = [{\n        uid\n      }];\n    },\n    removeBlinkArea(state, {payload}: PayloadAction<string>) {\n      const idx = state.blinkAreas.findIndex(b => b.uid === payload)\n      if (idx > -1) {\n        state.blinkAreas.splice(idx, 1);\n      }\n    },\n    removeAllBlinkAreas(state) {\n      state.blinkAreas = [];\n    },\n    setCoords(state, {payload: [id, coords]}: PayloadAction<[string, TBoxCoords]>) {\n      state.coords[id] = coords;\n    },\n    removeCoords(state, {payload}: PayloadAction<string>) {\n      delete state.coords[payload];\n    }\n  },\n});\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TComponentNode, TTagNode, TTemplateNode, TPath, TTextNode, TSlotNode, TPage, TComponent} from '../../types';\nimport {getNodeByPath, makeNewId} from '../../helpers/tree';\nimport {splitArrLastEl} from '../../helpers/common';\n\nexport type TDocumentSliceState = TPage | TComponent;\n\nexport const templateSliceState: TDocumentSliceState = {\n  id: '0',\n  name: 'page',\n  template: {\n    id: '0',\n    type: 'tag',\n    tag: 'div',\n    style: {\n    },\n    slots: {\n      children: [],\n    },\n  }\n};\n\nexport const documentSlice = createSlice({\n  name: 'template',\n  initialState: templateSliceState as TDocumentSliceState,\n  reducers: {\n    replaceDocument(state, {payload}: PayloadAction<TDocumentSliceState>) {\n      return payload;\n    },\n    replaceNode({template}, {payload: [path, node]}: PayloadAction<[TPath, TTemplateNode]>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(path);\n      const parentNode = getNodeByPath(template, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName][index] = node;\n    },\n    insertNode({template}, {payload: [path, node, addIdx]}: PayloadAction<[TPath, TTemplateNode, number]>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(path);\n      const parentNode = getNodeByPath(template, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName].splice(index + addIdx, 0, node);\n    },\n    removeNode({template}, {payload}: PayloadAction<TPath>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(payload);\n      const parentNode = getNodeByPath(template, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName].splice(index, 1);\n    },\n    setStyleProp({template}, {payload: [path, prop, value]}: PayloadAction<[TPath, string, string]>) {\n      const targetNode = getNodeByPath(template, path) as TTagNode<TTemplateNode>;\n      targetNode.style[prop] = value;\n    },\n    setSlotParams({template}, {payload: [path, prop, value]}: PayloadAction<[TPath, string, any]>) {\n      const targetNode = getNodeByPath(template, path) as TSlotNode;\n      (targetNode as any)[prop] = value;\n    },\n    setText({template}, {payload: [path, value]}: PayloadAction<[TPath, string]>) {\n      const targetNode = getNodeByPath(template, path) as TTextNode;\n      targetNode.text = value;\n    },\n    addComponentProp(doc, {payload}: PayloadAction<{path: TPath; name: string; prop: string;}>) {\n      (doc as TComponent).props.push({\n        id: makeNewId((doc as TComponent).props.map(p => p.id), 'prop'),\n        type: 'style',\n        ...payload\n      })\n    },\n    setComponentProp({template}, {payload: [path, prop, value]}: PayloadAction<[TPath, string, string]>) {\n      const targetNode = getNodeByPath(template, path) as TComponentNode<TTemplateNode>;\n      targetNode.props[prop] = value;\n    },\n  }\n});\n\n\n","import {MutableRefObject, useLayoutEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {combineReducers} from '@reduxjs/toolkit';\n\nimport {TGlobalState} from '../store';\nimport {TBoxCoords, TPath, TTemplateNode} from '../../types';\nimport {getNodeByPath} from '../../helpers/tree';\n\nimport {TActiveShadowContent, TBlinkArea, TContextMenuState, TVarsSliceState, varsSlice} from './varsSlice';\nimport {TDocumentSliceState, documentSlice} from './documentSlice';\nimport {rectToBox} from '../../helpers/common';\n\nexport type TEditorSliceState = {\n  document: TDocumentSliceState;\n  vars: TVarsSliceState;\n};\n\nexport const editorSliceReducer = combineReducers<TEditorSliceState>({\n  document: documentSlice.reducer,\n  vars: varsSlice.reducer,\n});\n\nexport const editorSelector = (state: TGlobalState): TEditorSliceState => state.editor;\n\nexport const templateRootSelector = (state: TGlobalState): TTemplateNode => state.editor.document.template;\nexport const useNodeByPath = (path: TPath) => {\n  return useSelector((state: TGlobalState) => getNodeByPath(state.editor.document.template, path));\n}\n\nexport type TActiveNodePathSelectorResult = {path: TPath, node: TTemplateNode} | undefined;\nexport const activeNodePathNodeSelector = (state: TGlobalState): TActiveNodePathSelectorResult => {\n  const path = state.editor.vars.activeNodePath;\n  if (path) {\n    const node = getNodeByPath(state.editor.document.template, path);\n    return {path, node};\n  }\n};\n\nexport const mainCoordsSelector = ({editor}: TGlobalState): TBoxCoords => editor.vars.mainCoords;\nexport const iframeCoordsSelector = ({editor}: TGlobalState): TBoxCoords => editor.vars.iframeCoords;\nexport const blinkAreasSelector = ({editor}: TGlobalState): TBlinkArea[] => editor.vars.blinkAreas;\nexport const contextMenuSelector = ({editor}: TGlobalState): TContextMenuState | undefined => editor.vars.contextMenu;\nexport const refStoreSelector = ({editor}: TGlobalState): TVarsSliceState['refs'] => editor.vars.refs;\nexport const activeNodePathSelector = ({editor}: TGlobalState): TPath | undefined => editor.vars.activeNodePath;\nexport const activeShadowContentSelector = ({editor}: TGlobalState): TActiveShadowContent | undefined => editor.vars.activeShadowContent;\nexport const coordsSelector = ({editor}: TGlobalState): TVarsSliceState['coords'] => editor.vars.coords;\n\nexport function useCoordsById(id: number): TBoxCoords | undefined {\n  return useSelector<TGlobalState, TBoxCoords | undefined>(state => state.editor.vars.coords[id]);\n}\n\nexport function useRefStore(\n  nodeId: string,\n  active: boolean,\n  nodeRef: MutableRefObject<HTMLDivElement | undefined>,\n  dispatch: ReturnType<typeof useDispatch>\n) {\n  const refStore = useSelector(refStoreSelector);\n  useLayoutEffect(() => {\n    if (active) {\n      const element: HTMLDivElement = nodeRef.current as HTMLDivElement\n      const resizeObserver: ResizeObserver = new ResizeObserver(() => {\n        const rect = element.getBoundingClientRect();\n        dispatch(varsSlice.actions.setCoords([nodeId, rectToBox(rect)]))\n      });\n      resizeObserver.observe(element);\n      refStore.set(nodeId, element);\n      return () => {\n        resizeObserver.disconnect();\n        refStore.delete(nodeId);\n        dispatch(varsSlice.actions.removeCoords(nodeId));\n      }\n    }\n  }, [nodeId, active, nodeRef, dispatch, refStore]);\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TComponent} from '../types';\n\nexport type TComponentsSliceState = {\n  components: TComponent[];\n};\n\nconst pagesInitialState: TComponentsSliceState = {\n  components: []\n}\n\nexport const componentsSlice = createSlice({\n  name: 'components',\n  initialState: pagesInitialState,\n  reducers: {\n    setComponents(state, {payload}: PayloadAction<TComponent[]>) {\n      state.components = payload;\n    }\n  }\n});\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TPage} from '../types';\n\nexport type TPagesSliceState = {\n  pages: TPage[];\n};\n\nconst pagesInitialState: TPagesSliceState = {\n  pages: []\n}\n\nexport const pagesSlice = createSlice({\n  name: 'pages',\n  initialState: pagesInitialState,\n  reducers: {\n    setPages(state, {payload}: PayloadAction<TPage[]>) {\n      state.pages = payload;\n    }\n  }\n});\n","import {combineReducers} from 'redux';\nimport {ThunkAction} from 'redux-thunk';\nimport {Action, configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\n\nimport {TGlobalSliceState, globalSlice} from './global';\nimport {TEditorSliceState, editorSliceReducer} from './editor';\nimport {TComponentsSliceState, componentsSlice} from './components';\nimport {TPagesSliceState, pagesSlice} from './pages';\n\nexport type TThunkResult<R = void> = ThunkAction<R, TGlobalState, undefined, Action>;\n\nexport type TGlobalState = {\n  global: TGlobalSliceState;\n  editor: TEditorSliceState;\n  pages: TPagesSliceState;\n  components: TComponentsSliceState;\n};\n\nconst middleware = getDefaultMiddleware<TGlobalState, {serializableCheck: false}>({\n  serializableCheck: false,\n})\n\nexport const store = configureStore<TGlobalState>({\n  reducer: combineReducers({\n    global: globalSlice.reducer,\n    editor: editorSliceReducer,\n    pages: pagesSlice.reducer,\n    components: componentsSlice.reducer,\n  }),\n  middleware: middleware as any,\n});\n\nexport type TStoreType = typeof store;\n","import {TPage} from '../types';\n\nlet id = 10;\nexport const pages: TPage[] = [\n  {\n    id: 'index',\n    name: 'index',\n    template: {\n      id: `id${id++}`,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '5%',\n        backgroundColor: '#0FFFF0',\n      },\n      slots: {\n        children: [\n          {\n            id: `id${id++}`,\n            type: 'shadow',\n            width: '100%',\n            height: '350px'\n          },\n        ],\n      },\n    }\n  },\n  {\n    id: 'about',\n    name: 'about',\n    template: {\n      id: `id${id++}`,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '5%',\n        backgroundColor: '#0FFFF0',\n      },\n      slots: {\n        children: [\n          {\n            id: `id${id++}`,\n            type: 'shadow',\n            width: '100%',\n            height: '350px'\n          },\n        ],\n      },\n    }\n  },\n];\n","import {TComponent} from '../types';\n\nlet id = 0;\nexport const components: TComponent[] = [\n  {\n    id: 'foo',\n    name: 'foo',\n    place: {width: '500px'},\n    template: {\n      id: `id${id++}`,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        display: 'flex',\n      },\n      slots: {\n        children: [\n          {\n            id: `id${id++}`,\n            type: 'tag',\n            tag: 'div',\n            style: {},\n            slots: {\n              children: [\n                {\n                  id: `id${id++}`,\n                  type: 'text',\n                  text: 'hhh',\n                }\n              ]\n            },\n          },\n          {\n            id: `id${id++}`,\n            type: 'tag',\n            tag: 'div',\n            style: {\n              minWidth: '300px',\n            },\n            slots: {\n              children: [\n                {\n                  id: `id${id++}`,\n                  type: 'slot',\n                  code: 'a-slot',\n                  width: '100%',\n                  height: '100px',\n                }\n              ]\n            }\n          }\n        ]\n      }\n    },\n    props: [],\n  },\n  {\n    id: 'bar',\n    name: 'bar',\n    place: {width: '500px'},\n    template: {\n      id: `id${id++}`,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        display: 'flex',\n        borderWidth: '1px',\n        borderStyle: 'dotted',\n        borderColor: 'black'\n      },\n      slots: {\n        children: [\n          {\n            id: `id${id++}`,\n            type: 'tag',\n            tag: 'div',\n            style: {\n              minWidth: '350px',\n            },\n            slots: {\n              children: [\n                {\n                  id: `id${id++}`,\n                  type: 'slot',\n                  code: 'b-slot',\n                  width: '100%',\n                  height: '100px',\n                }\n              ]\n            }\n          },\n          {\n            id: `id${id++}`,\n            type: 'tag',\n            tag: 'div',\n            style: {},\n            slots: {\n              children: [\n                {\n                  id: `id${id++}`,\n                  type: 'text',\n                  text: 'sss efhd ert rete a',\n                }\n              ]\n            },\n          },\n        ]\n      }\n    },\n    props: [],\n  },\n  {\n    id: 'tree',\n    name: 'qwe',\n    place: {width: '500px'},\n    template: {\n      id: `id${id++}`,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '15px',\n        backgroundColor: '#ff0000'\n      },\n      slots: {\n        children: [\n          {\n            id: `id${id++}`,\n            type: 'text',\n            text: 'hoba'\n          }\n        ]\n      }\n    },\n    props: [],\n  }\n];\n","import Dexie from 'dexie';\nimport {TComponent, TDocumentIdentifier, TPage} from '../types';\nimport {pages} from '../data/pages';\nimport {components} from '../data/components';\n\nclass DataStore extends Dexie {\n  pages: Dexie.Table<TPage, string>;\n  components: Dexie.Table<TComponent, string>;\n\n  constructor() {\n    super('DataStore');\n\n    this.version(1).stores({\n      pages: '&id,name,template',\n      components: '&id,name,template,props',\n    });\n\n    this.on('populate', () => {\n      pages.forEach(page => this.pages.add(page));\n      components.forEach(comp => this.components.add(comp));\n    });\n\n    this.pages = this.table('pages');\n    this.components = this.table('components');\n  }\n}\n\nexport const dataStore = new DataStore();\n\nexport async function loadDocument(doc: TDocumentIdentifier): Promise<TPage | TComponent> {\n  if (doc.type === 'page') {\n    const page = await dataStore.pages.get(doc.id) as TPage;\n    return page\n  }\n  else {\n    const component = await dataStore.components.get(doc.id) as TComponent;\n    return component\n  }\n}\n","import {TThunkResult} from '../../store/store';\nimport {batch} from 'react-redux';\nimport {TDocumentSliceState, documentSlice} from '../../store/editor/documentSlice';\nimport {TVarsSliceState, varsSlice} from '../../store/editor/varsSlice';\n\nexport function applyDocument(template: TDocumentSliceState, vars: Partial<TVarsSliceState>): TThunkResult {\n  return (dispatch, getState) => {\n    batch(() => {\n      dispatch(documentSlice.actions.replaceDocument(template));\n      dispatch(varsSlice.actions.merge(vars));\n    })\n  }\n}\n","import {Action} from 'redux';\nimport {batch} from 'react-redux';\nimport {omit} from 'lodash';\n\nimport {dataStore, loadDocument} from '../modules/dataStore';\nimport {isSameActivity} from '../helpers/common';\nimport {TThunkResult} from '../store/store';\nimport {TActivity, globalSlice} from '../store/global';\nimport {pagesSlice} from '../store/pages';\nimport {componentsSlice} from '../store/components';\nimport {createVarsSliceState} from '../store/editor/varsSlice';\nimport {applyDocument} from './editor';\nimport {createTagNode, filterTree, walkTreeDeep} from '../helpers/tree';\nimport {TComponent, TSlotNode} from '../types';\n\nconst {setActivity} = globalSlice.actions;\n\nexport function changeActivity(activity: TActivity): TThunkResult {\n  return async (dispatch, getState) => {\n    const {global: {activity: prevActivity}} = getState();\n    if (isSameActivity(activity, prevActivity)) {\n      return;\n    }\n\n    const actions: Array<Action | TThunkResult> = [];\n\n    if (prevActivity.type === 'editor') {\n      dispatch(saveDocument());\n    }\n\n    if (activity.type === 'editor') {\n      const document = await loadDocument(activity.document);\n      const newVars = createVarsSliceState({\n        documentId: activity.document,\n        initialDocument: document,\n      });\n      actions.push(applyDocument(document, newVars));\n      actions.push(fixSlots());\n    }\n    actions.push(setActivity(activity));\n    batch(() => actions.forEach(dispatch))\n  };\n}\n\nfunction fixSlots(): TThunkResult {\n  return (dispatch, getState) => {\n    const {editor: {document}, components: {components}} = getState();\n    const actions: Array<Action | TThunkResult> = [];\n\n    walkTreeDeep(document.template, (node, path) => {\n      if (node.type === 'component') {\n        const component = components.find(c => c.id === node.component) as TComponent;\n        const componentSlots = filterTree<TSlotNode>(component.template, node => node.type === 'slot');\n        console.log(componentSlots);\n      }\n    });\n\n    batch(() => actions.forEach(dispatch))\n  };\n}\n\nexport function saveDocument(): TThunkResult {\n  return async (dispatch, getState) => {\n    const {vars, document} = getState().editor;\n    if (vars.initialDocument !== document) {\n      if (vars.documentId.type === 'page') {\n        await dataStore.pages.update(vars.documentId.id, omit(document, 'id'))\n        dispatch(loadPages())\n      }\n      if (vars.documentId.type === 'component') {\n        await dataStore.components.update(vars.documentId.id, omit(document, 'id'))\n        dispatch(loadComponents())\n      }\n    }\n  }\n}\n\nexport function loadPages(): TThunkResult {\n  return async (dispatch, getState) => {\n    const pages = await dataStore.pages.toArray();\n    dispatch(pagesSlice.actions.setPages(pages));\n  }\n}\n\nexport function loadComponents(): TThunkResult {\n  return async (dispatch, getState) => {\n    const components = await dataStore.components.toArray();\n    dispatch(componentsSlice.actions.setComponents(components));\n  }\n}\n\nexport function createComponent(name: string): TThunkResult {\n  return async (dispatch) => {\n    if (name.length) {\n      const template = createTagNode([], 'div');\n      const id = `id${Math.round(Math.random() * 100000000)}`;\n      const a = await dataStore.components.add({\n        id,\n        name,\n        template,\n        props: []\n      })\n      console.log(id, template, a)\n      dispatch(changeActivity({\n        type: 'editor',\n        document: {\n          type: 'component',\n          id\n        }\n      }))\n      dispatch(loadComponents())\n    }\n  }\n}\n","import styles from './PropsList.module.css';\nimport React from 'react';\n\ntype TPropsListProps = {\n  children: JSX.Element[];\n};\nexport function PropsList({children}: TPropsListProps) {\n  return (\n    <div className={styles.allProps}>\n      {children}\n    </div>\n  )\n}\n","import {sortBy, keyBy} from 'lodash';\n\nexport type TCssPropValueTypeColor = {type: 'color', defaults: () => string};\nexport type TCssPropValueTypeLength = {type: 'length', defaults: () => string};\nexport type TCssPropValueTypeLengthPercentage = {type: 'length-percentage', defaults: () => string};\nexport type TCssPropValueTypeVariant = {type: 'variant', variants: string[], defaults: () => string};\nexport type TCssPropValueType = {name: string} & (\n  TCssPropValueTypeColor\n  | TCssPropValueTypeLength\n  | TCssPropValueTypeLengthPercentage\n  | TCssPropValueTypeVariant);\n\nexport const allCssProps: TCssPropValueType[] = [\n  {name: 'color', type: 'color', defaults: () => '#000000'},\n  {name: 'backgroundColor', type: 'color', defaults: () => '#FFFFFF'},\n  {name: 'borderColor', type: 'color', defaults: () => '#000000'},\n  {name: 'borderStyle', type: 'variant', variants: ['solid', 'dotted', 'double'], defaults: () => 'solid'},\n  {name: 'borderRadius', type: 'length-percentage', defaults: () => '1px'},\n  {name: 'borderWidth', type: 'length', defaults: () => '1px'},\n  {name: 'width', type: 'length-percentage', defaults: () => '100%'},\n  {name: 'height', type: 'length-percentage', defaults: () => '100px'},\n  {name: 'minWidth', type: 'length-percentage', defaults: () => '100%'},\n  {name: 'minHeight', type: 'length-percentage', defaults: () => '100px'},\n  {name: 'padding', type: 'length-percentage', defaults: () => '0px'},\n  {name: 'margin', type: 'length-percentage', defaults: () => '0px'},\n  {name: 'display', type: 'variant', variants: ['block', 'flex'], defaults: () => 'block'},\n  {name: 'justifyContent', type: 'variant', variants: ['normal', 'center', 'start', 'end', 'space-between', 'space-around'], defaults: () => 'center'}\n];\nexport const allCssPropsKeyed: {[name: string]: TCssPropValueType} = keyBy(allCssProps, 'name');\nexport const allCssPropsNames: string[] = sortBy(Object.keys(allCssPropsKeyed));\nexport const allCssPropsLength: number = allCssPropsNames.length;\n","import React, {useState} from 'react';\nimport {Button, ControlGroup, InputGroup} from '@blueprintjs/core';\n\nexport function SubmitableInput({title, onSubmit}: {title: string; onSubmit: (n: string) => void}) {\n  const [name, setName] = useState('');\n\n  return (\n    <ControlGroup>\n      <InputGroup\n        placeholder={title}\n        autoFocus\n        value={name}\n        onChange={(e: any) => setName(e.target.value)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            onSubmit(name);\n          }\n        }}\n      />\n      <Button icon=\"arrow-right\" onClick={() => onSubmit(name)} />\n    </ControlGroup>\n  )\n}\n","import React from 'react';\nimport {Card, Popover} from '@blueprintjs/core';\nimport {SubmitableInput} from './SubmitableInput';\n\nexport function PopoverInput({title, onSubmit, children}: {title: string; onSubmit: (n: string) => void; children: any}) {\n  return (\n    <Popover\n      content={(\n        <Card>\n          <SubmitableInput title={title} onSubmit={onSubmit} />\n        </Card>\n      )}\n    >\n      {children}\n    </Popover>\n  )\n}\n","import styles from './length.module.css';\nimport React from 'react';\nimport {Button, Menu, MenuItem, NumericInput, Popover, Position} from '@blueprintjs/core';\n\nconst units = ['px'];\n\nexport function LengthBase({value, onChange, units}: {value: string, onChange: any, units: string[]}) {\n  const num = (value.match(/^-?\\d+/) as RegExpMatchArray)[0];\n  const unit = value.substring(num.length);\n  const permissionsMenu = (\n    <Popover\n      content={\n        <Menu className={styles.menu}>\n          {units.map(curUnit => (\n              <MenuItem\n                text={curUnit}\n                key={curUnit}\n                active={curUnit === unit}\n                onClick={() => onChange(`${num}${curUnit}`)}\n              />\n            )\n          )}\n        </Menu>\n      }\n      position={Position.BOTTOM_RIGHT}\n    >\n      <Button minimal rightIcon=\"caret-down\">\n        {unit}\n      </Button>\n    </Popover>\n  );\n\n  return (\n    <NumericInput\n      value={num}\n      onValueChange={newNum => onChange(`${newNum}${unit}`)}\n      rightElement={permissionsMenu}\n    />\n  );\n}\n\nexport function length({value, onChange}: {value: string, onChange: any}) {\n  return <LengthBase value={value} onChange={onChange} units={units} />;\n}\n","import React from 'react';\nimport {LengthBase} from './length';\n\nconst units = ['px', '%'];\n\nexport function lengthPercentage({value, onChange}: {value: string, onChange: any}) {\n  return <LengthBase value={value} onChange={onChange} units={units} />;\n}\n","import React from 'react';\nimport { Select, ItemRenderer } from '@blueprintjs/select';\nimport {Button, MenuItem} from '@blueprintjs/core';\nimport type {TCssPropValueTypeVariant} from '../../../../modules/css/css';\n\nconst VariantSelect = Select.ofType<string>();\n\nconst renderItem: ItemRenderer<string> = (value, { handleClick, modifiers }) => {\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={value}\n      onClick={handleClick}\n      text={value}\n    />\n  );\n};\n\nexport function variant({value, onChange, type}: {value: any, onChange: any, type: TCssPropValueTypeVariant}) {\n  return (\n    <VariantSelect\n      activeItem={value}\n      items={type.variants}\n      itemRenderer={renderItem}\n      onItemSelect={onChange}\n      filterable={false}\n    >\n      <Button\n        text={value}\n        rightIcon=\"caret-down\"\n      />\n    </VariantSelect>\n  )\n}\n","import {color} from './color';\nimport {length} from './length';\nimport {lengthPercentage} from './lengthPercentage';\nimport {variant} from './variant';\n\nexport default {\n  color,\n  length,\n  'length-percentage': lengthPercentage,\n  variant\n}\n","import React from 'react';\n\nexport function color({value, onChange}: {value: any, onChange: any}) {\n  return (\n    <input type=\"color\"\n           value={value}\n           onChange={e => onChange(e.target.value)}\n    />\n  )\n}\n","import styles from './Prop.module.css';\nimport React from 'react';\nimport {allCssPropsKeyed} from '../../../modules/css/css';\nimport editors from './editor';\n\ntype TPropProps = {\n  propName: string;\n  label: string;\n  value: any;\n  onChange: (prop: string, value: any) => void;\n  menuContent?: React.FC<{propName: string}>;\n};\n\nexport function Prop({\n  propName,\n  label,\n  value,\n  onChange,\n  menuContent: MenuContent\n}: TPropProps) {\n  const type = allCssPropsKeyed[propName];\n  return (\n    <>\n      <div className={styles.cell}>{label}</div>\n      <div className={styles.cell}>\n        {React.createElement(((editors as any)[type.type]), {value, onChange, type})}\n      </div>\n      <div className={styles.cell}>\n        {MenuContent && <MenuContent propName={propName} />}\n      </div>\n    </>\n  )\n}\n","import styles from './TagProps.module.css';\nimport React, {useMemo} from 'react';\nimport {difference, sortBy} from 'lodash';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {MenuItem, Button, Card} from '@blueprintjs/core';\nimport {ItemPredicate, ItemRenderer, Select} from '@blueprintjs/select';\nimport {TComponent, TPath, TTagNode, TTemplateNode} from '../../../../types';\nimport {PropsList} from '../../css-props-editor/PropsList';\nimport {allCssPropsKeyed, allCssPropsNames} from '../../../../modules/css/css';\nimport {documentSlice} from '../../../../store/editor/documentSlice';\nimport {TGlobalState} from '../../../../store/store';\nimport {PopoverInput} from '../../elements/PopoverInput';\nimport {areArraysEqual, arePathsEqual} from '../../../../helpers/common';\nimport {Prop} from '../../css-props-editor/Prop';\n\nconst renderItem: ItemRenderer<string> = (propName, { handleClick, modifiers }) => {\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={propName}\n      onClick={handleClick}\n      text={propName}\n    />\n  );\n};\n\nconst filterItem: ItemPredicate<string> = (search, value) => {\n  if (search.length > 0) {\n    return value.startsWith(search);\n  }\n  return true\n};\n\nconst PropSelect = Select.ofType<string>();\n\ntype TTagPropsProps = {node: TTagNode<TTemplateNode>, path: TPath};\nexport function TagProps({node, path}: TTagPropsProps) {\n  const dispatch = useDispatch();\n  const usedProps = useMemo(() => sortBy(Object.keys(node.style)), [node.style]);\n  const propsToAdd = useMemo(() => difference(allCssPropsNames, usedProps), [usedProps])\n\n  const curComponent = useSelector<TGlobalState, [boolean, TComponent['props']]>(\n    state => {\n      return [\n        state.editor.vars.documentId.type === 'component',\n        (state.editor.document as TComponent).props\n      ]\n    },\n    areArraysEqual\n  );\n\n  const menuContent = useMemo(() => {\n    const [isComp, props] = curComponent;\n    if (isComp) {\n      return ({propName: prop}: {propName: string}) => {\n        const propExists = props.some(p => arePathsEqual(p.path, path) && p.prop === prop)\n        if (propExists) return null;\n        return (\n          <PopoverInput\n            title=\"component prop name\"\n            onSubmit={name => dispatch(documentSlice.actions.addComponentProp({path, prop, name}))}\n          >\n            <Button icon=\"menu\" />\n          </PopoverInput>\n        )\n      };\n    }\n  }, [curComponent, path, dispatch]);\n\n  return (\n    <Card>\n      <PropsList>\n        {usedProps.map(propName => (\n          <Prop\n            propName={propName}\n            label={propName}\n            value={node.style[propName]}\n            onChange={newVal => dispatch(documentSlice.actions.setStyleProp([path, propName, newVal]))}\n            menuContent={menuContent}\n            key={propName}\n          />\n        ))}\n      </PropsList>\n\n      {propsToAdd.length > 0 && (\n        <div className={styles.propSelect}>\n          <PropSelect\n            activeItem={null}\n            items={propsToAdd}\n            itemRenderer={renderItem}\n            itemPredicate={filterItem}\n            onItemSelect={propName => {\n              const value = allCssPropsKeyed[propName].defaults()\n              dispatch(documentSlice.actions.setStyleProp([path, propName, value]))\n            }}\n          >\n            <Button text=\"Add new prop\" rightIcon=\"caret-down\" />\n          </PropSelect>\n        </div>\n      )}\n    </Card>\n  )\n}\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TComponent, TComponentNode, TPath, TTemplateNode} from '../../../../types';\nimport {TGlobalState} from '../../../../store/store';\nimport {Card} from '@blueprintjs/core';\nimport {PropsList} from '../../css-props-editor/PropsList';\nimport {Prop} from '../../css-props-editor/Prop';\nimport {documentSlice} from '../../../../store/editor/documentSlice';\n\ntype TComponentPropsProps = {node: TComponentNode<TTemplateNode>, path: TPath};\nexport function ComponentProps({node, path}: TComponentPropsProps) {\n  const dispatch = useDispatch();\n  const component = useSelector<TGlobalState, TComponent>(state => state.components.components.find(c => c.id === node.component) as TComponent);\n  return (\n    <Card>\n      <PropsList>\n        {component.props.map(prop => (\n          <Prop\n            propName={prop.prop}\n            label={prop.name}\n            value={node.props[prop.id]}\n            onChange={newVal => dispatch(documentSlice.actions.setComponentProp([path, prop.id, newVal]))}\n            key={prop.id}\n          />\n        ))}\n      </PropsList>\n    </Card>\n  )\n}\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Card} from '@blueprintjs/core';\nimport {TPath, TSlotNode} from '../../../../types';\nimport {documentSlice} from '../../../../store/editor/documentSlice';\nimport {PropsList} from '../../css-props-editor/PropsList';\nimport {Prop} from '../../css-props-editor/Prop';\n\nconst props: string[] = ['width', 'height'];\n\ntype TSlotPropsProps = {node: TSlotNode, path: TPath};\nexport function SlotProps({node, path}: TSlotPropsProps) {\n  const dispatch = useDispatch();\n  return (\n    <Card>\n      <PropsList>\n        {props.map(propName => (\n          <Prop\n            propName={propName}\n            label={propName}\n            value={(node as any)[propName]}\n            onChange={newVal => dispatch(documentSlice.actions.setSlotParams([path, propName, newVal]))}\n            key={propName}\n          />\n        ))}\n      </PropsList>\n    </Card>\n  )\n}\n","import styles from './RightSpace.module.css';\nimport React from 'react';\nimport {shallowEqual, useSelector} from 'react-redux';\n\nimport {templateRootSelector, activeNodePathNodeSelector} from '../../../../store/editor';\nimport {TagProps} from './TagProps';\nimport {ComponentProps} from './ComponentProps';\nimport {SlotProps} from './SlotProps';\n\nexport function RightSpace() {\n  const np = useSelector(activeNodePathNodeSelector, shallowEqual);\n  const tree = useSelector(templateRootSelector)\n  let children;\n  if (np) {\n    const {node, path} = np;\n    switch (node.type) {\n      case 'shadow':\n        children = <div>shadow</div>;\n        break;\n      case 'slot':\n        children = <SlotProps node={node} path={path} />\n        break;\n      case 'text':\n        children = <div>text &amp;{node.text}&amp;</div>\n        break;\n      case 'tag':\n        children = <TagProps node={node} path={path} />\n        break;\n      case 'component':\n        children = <ComponentProps node={node} path={path} />\n        break;\n      default:\n        children = <div>Select something</div>\n    }\n  }\n\n  return (\n    <div className={styles.rightSpace}>\n      {children}\n      <div style={{height: 300}}>\n        <pre>{JSON.stringify(tree, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\n\n","import React, {useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {map, kebabCase, mapValues} from 'lodash';\nimport {TGlobalState} from '../../store/store';\nimport {TComponent, TComponentPropStyle, TCSSStyle, TTagNode, TTemplateNode} from '../../types';\nimport {walkTreeDeep} from '../../helpers/tree';\nimport {arePathsEqual} from '../../helpers/common';\n\ntype THeadStyle = {\n  id: string | number;\n  style: string;\n}\n\nfunction createCssClass(className: string, styles: any) {\n  return `.${className} {${map(styles, (v, n) => `${kebabCase(n)}: ${v};`).join('\\n')}}`;\n}\n\nfunction getHeadStyle(): THeadStyle[] {\n  const styles: string[] = [];\n  const styleSheets = document.styleSheets;\n  for (let i = 0; i < styleSheets.length; ++i) {\n    const ss: CSSStyleSheet = styleSheets[i] as CSSStyleSheet;\n    for (let j = 0; j < ss.cssRules.length; ++j) {\n      const cssRule = ss.cssRules[j];\n      if (cssRule instanceof CSSStyleRule) {\n        if (cssRule.selectorText.startsWith('._frame')) {\n          styles.push(cssRule.cssText);\n        }\n      }\n      if (cssRule instanceof CSSKeyframesRule) {\n        if (cssRule.name.startsWith('_frame')) {\n          styles.push(cssRule.cssText)\n        }\n      }\n    }\n  }\n\n  return [{\n    id: 'parent',\n    style: styles.join('\\n')\n  }];\n}\n\nconst ArrayStyles = React.memo(({styles}: {styles: THeadStyle[]}) => {\n  return <>{styles.map(s => <style type=\"text/css\" key={s.id}>{s.style}</style>)}</>;\n});\n\nconst filterCb = (node: TTemplateNode): node is TTagNode<TTemplateNode> => node.type === 'tag' && Object.keys(node.style).length > 0;\nconst TreeStyles = React.memo((props: {tree: TTemplateNode; prefix: string; adds: TComponentPropStyle[]}) => {\n  const tags: Array<[string, TCSSStyle]> = []; // = filterTree<TTagNode<TTemplateNode>>(props.tree, filterCb);\n  walkTreeDeep(props.tree, (node, path) => {\n    if (filterCb(node)) {\n      const styles = mapValues(node.style, (v, k) => {\n        const compStyle = props.adds.find(s => s.prop === k && arePathsEqual(path, s.path));\n        if (compStyle) {\n          return `var(--${props.prefix}${compStyle.id}, ${v})`;\n        }\n        return v;\n      });\n      tags.push([node.id, styles])\n    }\n  });\n  const styles: THeadStyle[] = tags.map(tag => ({\n    id: tag[0],\n    style: createCssClass(`${props.prefix}${tag[0]}`, tag[1])\n  }));\n  return <ArrayStyles styles={styles} />;\n});\n\nconst componentsSelector: (x: TGlobalState) => TComponent[] = x => x.components.components;\nconst ComponentsStyles = React.memo(() => {\n  const components = useSelector(componentsSelector);\n  return (\n    <>\n      {components.map(comp => (\n        <TreeStyles\n          tree={comp.template}\n          prefix={`c${comp.id}_`}\n          adds={comp.props.filter((s): s is TComponentPropStyle => s.type === 'style')}\n          key={comp.id}\n        />\n      ))}\n    </>\n  );\n});\n\nconst ea: TComponentPropStyle[] = [];\nexport const HeadStyles: React.FC<{tree: TTemplateNode}> = ({tree}) => {\n  const parentStyles = useMemo(getHeadStyle, []);\n  return (\n    <>\n      <ArrayStyles styles={parentStyles} />\n      <TreeStyles tree={tree} prefix=\"t\" adds={ea} />\n      <ComponentsStyles />\n    </>\n  );\n};\n","import React from 'react';\n\nfunction isDocument(el: any): el is HTMLDocument {\n  const doc = el?.defaultView?.HTMLDocument;\n  if (doc) {\n    return el instanceof doc;\n  }\n  return false;\n}\n\nfunction findDocument({parentNode}: any): HTMLDocument {\n  if (isDocument(parentNode)) {\n    return parentNode;\n  }\n  return findDocument(parentNode);\n}\n\nfunction replaceCaret(el: HTMLElement) {\n  const document = findDocument(el);\n  const target = document.createTextNode('');\n  el.appendChild(target);\n  const isTargetFocused = document.activeElement === el;\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    const sel = document.defaultView?.getSelection();\n    if (sel) {\n      const range = document.createRange();\n      range.setStart(target, target.nodeValue.length);\n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n    if (el instanceof HTMLElement) el.focus();\n  }\n}\n\nexport class ContentEditable extends React.Component<Props> {\n  lastHtml: string = this.props.html;\n\n  getEl = () => this.props.attrs.ref.current\n\n  render() {\n    const { attrs, html, ...props } = this.props;\n\n    return React.createElement(\n      'span',\n      {\n        dangerouslySetInnerHTML: { __html: html },\n        onInput: this.emitChange,\n        onBlur: this.props.onBlur || this.emitChange,\n        onKeyUp: this.props.onKeyUp || this.emitChange,\n        onKeyDown: this.props.onKeyDown || this.emitChange,\n        contentEditable: true,\n        ...props,\n        ...attrs\n      });\n  }\n\n  shouldComponentUpdate(nextProps: Props): boolean {\n    const { props } = this;\n    const el = this.getEl();\n\n    if (!el) return true;\n\n    if (nextProps.html !== el.innerHTML) {\n      return true;\n    }\n\n    return props.className !== nextProps.className || props.attrs !== nextProps.attrs;\n  }\n\n  componentDidUpdate() {\n    const el = this.getEl();\n    if (!el) return;\n\n    if (this.props.html !== el.innerHTML) {\n      el.innerHTML = this.props.html;\n    }\n    this.lastHtml = this.props.html;\n    replaceCaret(el);\n  }\n\n  emitChange = (originalEvt: React.SyntheticEvent<any>) => {\n    const el = this.getEl();\n    if (!el) return;\n\n    const html = el.innerHTML;\n    if (this.props.onChange && html !== this.lastHtml) {\n      this.props.onChange(html);\n    }\n    this.lastHtml = html;\n  }\n}\n\nexport type ContentEditableEvent = string;\ntype Modify<T, R> = Pick<T, Exclude<keyof T, keyof R>> & R;\ntype SpanProps = Modify<JSX.IntrinsicElements[\"span\"], { onChange: ((event: ContentEditableEvent) => void) }>;\n\nexport interface Props extends SpanProps {\n  html: string,\n  className?: string,\n  attrs?: any,\n}\n","import {batch} from 'react-redux';\n\nimport {TComponentNode, TTagNode, TTemplateNode, TPath, TSlotNode, TComponent} from '../../types';\nimport {TThunkResult} from '../../store/store';\nimport {TActiveShadowContent} from '../../store/editor/varsSlice';\nimport {\n  createComponentNode,\n  createShadowNode,\n  createTagNode,\n  createSlotNode,\n  filterTree,\n  getAllIds,\n  getNodeByPath,\n  makeNewId\n} from '../../helpers/tree'\n\nimport {documentSlice} from '../../store/editor/documentSlice';\nimport {varsSlice} from '../../store/editor/varsSlice';\nimport {rectToBox, splitArrLastEl} from '../../helpers/common';\n\nexport function activateNode(path: TPath): TThunkResult  {\n  return (dispatch, getState) => {\n    batch(() => {\n      const {editor: {document}} = getState();\n      const node = getNodeByPath(document.template, path);\n      dispatch(varsSlice.actions.setActiveNode(path));\n      if (node.type === 'shadow') {\n        dispatch(varsSlice.actions.setActiveShadowContent());\n      }\n    })\n  };\n}\n\nexport function activateShadowContent(slotContent: TActiveShadowContent): TThunkResult {\n  return (dispatch, getState) => {\n    dispatch(varsSlice.actions.setActiveShadowContent(slotContent));\n  };\n}\n\nexport function applyShadowContent(): TThunkResult {\n  return (dispatch, getState) => {\n    const {editor: {vars, document}, components} = getState();\n    const activeNodePath = vars.activeNodePath as TPath;\n    const activeShadowContent = vars.activeShadowContent as TActiveShadowContent;\n    const ids = getAllIds(document.template);\n    let newNode: TSlotNode | TTagNode<TTemplateNode> | TComponentNode<TTemplateNode>;\n    if (activeShadowContent[0] === 'slot') {\n      const id = makeNewId(ids);\n      newNode = createSlotNode(id);\n    }\n    if (activeShadowContent[0] === 'tag') {\n      newNode = createTagNode(ids, activeShadowContent[1]);\n    }\n    if (activeShadowContent[0] === 'component') {\n      const comp = components.components.find(c => c.id === activeShadowContent[1]) as TComponent;\n      newNode = createComponentNode(ids, comp)\n    }\n    batch(() => {\n      dispatch(documentSlice.actions.replaceNode([activeNodePath, newNode]));\n      dispatch(varsSlice.actions.setActiveShadowContent());\n    });\n  };\n}\n\nexport function removeNode(path: TPath): TThunkResult {\n  return (dispatch, getState) => {\n    batch(() => {\n      dispatch(varsSlice.actions.setActiveNode());\n      dispatch(documentSlice.actions.removeNode(path));\n    })\n  }\n}\n\nexport function addNewShadow(path: TPath, addIdx: number): TThunkResult {\n  return (dispatch, getState) => {\n    const {editor: {document}, components} = getState();\n    const [parentPath, [slotName]] = splitArrLastEl(path);\n    const parentNode = getNodeByPath(document.template, parentPath);\n    const ids = getAllIds(document.template);\n    const id = makeNewId(ids);\n    let newNode: TTemplateNode;\n    if (parentNode.type === 'tag') {\n      newNode = createShadowNode(id, '100%', '50px');\n    }\n    if (parentNode.type === 'component') {\n      const comp = components.components.find(c => c.id === parentNode.component) as TComponent;\n      const [slot] = filterTree<TSlotNode>(comp.template, node => node.type === 'slot' && node.code === slotName);\n      newNode = createShadowNode(id, slot.width, slot.height);\n    }\n    batch(() => {\n      dispatch(varsSlice.actions.setActiveNode());\n      dispatch(documentSlice.actions.insertNode([path, newNode, addIdx]));\n    })\n  }\n}\n\nexport function blinkNode(path: TPath): TThunkResult {\n  return (dispatch, getState) => {\n    const {editor: {document, vars: {refs}}} = getState();\n    const node = getNodeByPath(document.template, path)\n    const rect = refs.get(node.id).getBoundingClientRect();\n    dispatch(varsSlice.actions.addBlinkArea([node.id, rectToBox(rect)]));\n    setTimeout(() => dispatch(varsSlice.actions.removeBlinkArea(node.id)), 3000);\n  }\n}\n","import React, {MouseEvent, MutableRefObject, useContext, useDebugValue, useMemo, useRef} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  TSlotContent,\n  TComponentNode,\n  TSlotNode,\n  TTagNode,\n  TTemplateNode,\n  TTextNode,\n  TPath,\n  TComponent,\n  TShadowNode,\n} from '../../../types';\nimport {ContentEditable} from '../elements/ContentEditable';\nimport {arePathsEqual} from '../../../helpers/common';\nimport {createComponentNode, createTagNode} from '../../../helpers/tree';\nimport {TGlobalState} from '../../../store/store';\nimport {TVarsSliceState} from '../../../store/editor/varsSlice';\nimport {documentSlice} from '../../../store/editor/documentSlice';\nimport {useRefStore} from '../../../store/editor';\nimport {onNodeClick, onNodeContextMenu, onNodeOut, onNodeOver} from '../../../procedures/nodesHandlers';\n\ntype TAttrs = {\n  ref: MutableRefObject<HTMLDivElement>;\n  onClick: (e: MouseEvent<HTMLDivElement>) => void;\n  onContextMenu: (e: MouseEvent<HTMLDivElement>) => void;\n  onMouseOver: (e: MouseEvent<HTMLDivElement>) => void;\n  onMouseOut: (e: MouseEvent<HTMLDivElement>) => void;\n};\n\ntype TSlotContextType = [\n  {[key: string]: TSlotContent<TTemplateNode>},\n  TPath,\n  boolean,\n  string\n];\n\nconst rootPath: TPath = [];\n\nconst SlotContext = React.createContext<TSlotContextType>([{}, [], false, '']);\nconst SlotActiveContext = React.createContext(true);\nconst TemplateActiveContext = React.createContext(false);\n\ntype TEmptyShadowActivatorProps = {width: string, height: string, selected: boolean, attrs?: TAttrs};\nfunction EmptyShadowActivator({width, height, selected, attrs}: TEmptyShadowActivatorProps) {\n  const slotActive = useContext(SlotActiveContext);\n\n  let className = '_frame_slot';\n  if (slotActive) {\n    className += selected ? ' _frame_slot_waiting' : ' _frame_slot_active';\n  }\n\n  return (\n    <div\n      style={{width, height}}\n      className={className}\n      {...attrs}\n    />\n  );\n}\n\ntype TEmptyShadowTagProps = {name: string, attrs?: TAttrs};\nfunction EmptyShadowTag({name, attrs}: TEmptyShadowTagProps) {\n  const node = useMemo(() => createTagNode(['-100'], name), [name])\n  return (\n    <SlotActiveContext.Provider value={false}>\n      <MKTagBrick node={node}\n                  path={[['_', 0]]}\n                  classPrefix={'tmp'}\n                  attrs={attrs}\n      />\n    </SlotActiveContext.Provider>\n  )\n}\n\ntype TEmptyShadowComponentProps = {componentId: string, attrs?: TAttrs};\nfunction EmptyShadowComponent({componentId, attrs}: TEmptyShadowComponentProps) {\n  const slotActive = useContext(SlotActiveContext);\n  const component = useSelector<TGlobalState, TComponent>(state => state.components.components.find(c => c.id === componentId) as TComponent);\n  const node = useMemo(() => createComponentNode(['-1000'], component), [component]);\n\n  if (!slotActive) {\n    return null;\n  }\n\n  return (\n    <SlotActiveContext.Provider value={false}>\n      <MKComponentBrick node={node}\n                        path={[['_', 0]]}\n                        classPrefix=\"x\"\n                        attrs={attrs}\n      />\n    </SlotActiveContext.Provider>\n  )\n}\n\ntype TSlotContentProps = {path: TPath, content: TTemplateNode[], slotName: string, classPrefix: string};\nfunction SlotContent({path, content, slotName, classPrefix}: TSlotContentProps) {\n  const paths: TPath[] = useMemo(\n    () => content.map((c, idx) => [...path, [slotName, idx]]),\n    [content, path, slotName]\n  );\n  return <>{content.map((sn, idx) => (\n    <MKBrickSelector key={sn.id} node={sn} path={paths[idx]} classPrefix={classPrefix} />\n  ))}</>;\n}\n\ntype TMKTextBrickProps = {node: TTextNode, attrs?: TAttrs, path: TPath};\nfunction MKTextBrick({node, attrs, path}: TMKTextBrickProps) {\n  const dispatch = useDispatch();\n  if (attrs) {\n    return <ContentEditable\n      attrs={attrs}\n      html={node.text}\n      onChange={(txt) => dispatch(documentSlice.actions.setText([path, txt]))}\n    />\n  }\n  return <>{node.text}</>;\n}\n\ntype TMKTagBrickProps = {node: TTagNode<TTemplateNode>, path: TPath, classPrefix: string, attrs?: TAttrs};\nfunction MKTagBrick({node, path, classPrefix, attrs}: TMKTagBrickProps) {\n  const templateActive = useContext(TemplateActiveContext);\n  return React.createElement(\n    node.tag,\n    {\n      className: `${classPrefix}${node.id}`,\n      ...attrs,\n    },\n    <TemplateActiveContext.Provider value={templateActive}>\n      <SlotContent path={path} slotName=\"children\" content={node.slots.children} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  );\n}\n\ntype TMKComponentBrickProps = {node: TComponentNode<TTemplateNode>, path: TPath, classPrefix: string, attrs?: TAttrs};\nfunction MKComponentBrick({node, path, attrs, classPrefix}: TMKComponentBrickProps) {\n  const component = useSelector<TGlobalState, TComponent>(state => state.components.components.find(c => c.id === node.component) as TComponent);\n  const templateActive = useContext(TemplateActiveContext);\n  const ctx: TSlotContextType = useMemo(\n    () => [node.slots, path, templateActive, classPrefix],\n    [node.slots, path, templateActive, classPrefix]\n  );\n  return (\n    <SlotContext.Provider value={ctx}>\n      <MKTemplate\n        node={component.template}\n        active={false}\n        classPrefix={`c${component.id}_`}\n        attrs={attrs}\n        key={`comp_${component.id}`}\n      />\n    </SlotContext.Provider>\n  );\n}\n\ntype TMKSlotBrickProps = {node: TSlotNode; attrs?: TAttrs};\n\nfunction MKSlotBrickActive({node}: TMKSlotBrickProps) {\n  const [slots, path, active, classPrefix] = useContext(SlotContext);\n  const slotName = node.code;\n  const content = slots[slotName];\n  return (\n    <TemplateActiveContext.Provider value={active}>\n      <SlotContent path={path} slotName={slotName} content={content} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  )\n}\n\nfunction MKSlotBrick({node, attrs}: TMKSlotBrickProps) {\n  const templateActive = useContext(TemplateActiveContext);\n  const isComponentMode = useSelector<TGlobalState, boolean>(x => x.editor.vars.documentId.type === 'component');\n  if (isComponentMode && templateActive) {\n    return (\n      <div\n        className=\"_frame_slot_component\"\n        style={{width: node.width, height: node.height}}\n        {...attrs}\n      />\n    );\n  }\n  return <MKSlotBrickActive node={node} />\n}\n\ntype TMKShadowBrickProps = {node: TShadowNode, path: TPath, attrs?: TAttrs};\nfunction MKShadowBrick({node, path, attrs}: TMKShadowBrickProps) {\n  const {activeNodePath, activeShadowContent} = useSelector<TGlobalState, TVarsSliceState>(x => x.editor.vars)\n  const isMyPath = !!activeNodePath && arePathsEqual(activeNodePath, path);\n\n  let children;\n  if (activeShadowContent && isMyPath) {\n    if (activeShadowContent[0] === 'slot') {\n      children = <div\n        className=\"_frame_slot_component\"\n        style={{width: '100px', height: '100px'}}\n      />\n    }\n    if (activeShadowContent[0] === 'tag') {\n      children = <EmptyShadowTag name={activeShadowContent[1]} attrs={attrs} />\n    }\n    if (activeShadowContent[0] === 'component') {\n      children = <EmptyShadowComponent componentId={activeShadowContent[1]} attrs={attrs} />;\n    }\n  } else {\n    children = <EmptyShadowActivator width={node.width} height={node.height} selected={isMyPath} attrs={attrs} />\n  }\n  return (\n    <TemplateActiveContext.Provider value={false}>\n      {children}\n    </TemplateActiveContext.Provider>\n  )\n}\n\nconst bricks: {\n  text: React.FC<TMKTextBrickProps>;\n  tag: React.FC<TMKTagBrickProps>;\n  component: React.FC<TMKComponentBrickProps>;\n  slot: React.FC<TMKSlotBrickProps>;\n  shadow: React.FC<TMKShadowBrickProps>\n} = {\n  text: MKTextBrick,\n  tag: MKTagBrick,\n  component: MKComponentBrick,\n  slot: MKSlotBrick,\n  shadow: MKShadowBrick,\n};\n\ntype TMKBrickSelectorProps = {node: TTemplateNode, path: TPath, attrs?: TAttrs, classPrefix: string};\nconst MKBrickSelector: React.FC<TMKBrickSelectorProps> = React.memo(function MKBrickSelector(\n  {node, path, classPrefix, attrs: parentAttrs}\n) {\n  useDebugValue(node);\n  const dispatch = useDispatch();\n  const nodeRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement>;\n  const templateActive = useContext(TemplateActiveContext);\n  useRefStore(node.id, templateActive, nodeRef, dispatch);\n  const attrs: TAttrs | undefined = useMemo(() => {\n    if (templateActive) {\n      const activeAttrs: any = {\n        ref: nodeRef,\n        onClick(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeClick(e, node, path));\n        },\n        onContextMenu(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeContextMenu(e, node, path))\n        },\n        onMouseOver(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeOver(e, node, path));\n        },\n        onMouseOut(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeOut(e, node, path));\n        },\n      };\n      if (node.type === 'component') {\n        activeAttrs.style = Object.fromEntries(Object.keys(node.props).map(k => [`--c${node.component}_${k}`, node.props[k]]));\n      }\n      return activeAttrs;\n    }\n    return parentAttrs\n  }, [dispatch, templateActive, path, node, nodeRef, parentAttrs]);\n  return React.createElement(bricks[node.type] as any, {node, path, classPrefix, attrs});\n});\n\ntype TMKTemplateProps = {node: TTemplateNode, active: boolean, classPrefix: string, attrs?: any};\nfunction MKTemplate({node, active, classPrefix, attrs}: TMKTemplateProps) {\n  return (\n    <TemplateActiveContext.Provider value={active}>\n      <MKBrickSelector key={`tpl-toot-${node.id}`} node={node} path={rootPath} attrs={attrs} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  );\n}\n\nexport class FrameTree extends React.Component<{tree: TTemplateNode}, any> {\n  componentDidMount() {\n  }\n\n  render() {\n    return <MKTemplate node={this.props.tree} active={true} classPrefix=\"t\" key=\"t-root\" />;\n  }\n}\n","import {MouseEvent} from 'react';\nimport {batch} from 'react-redux';\nimport {TPath, TTemplateNode} from '../types';\nimport {TThunkResult} from '../store/store';\nimport {varsSlice} from '../store/editor/varsSlice';\nimport {activateNode, blinkNode} from './editor/template';\n\nexport function onNodeClick(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    dispatch(activateNode(path))\n  };\n}\n\nexport function onNodeContextMenu(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(varsSlice.actions.setContextMenu({\n      path,\n      left: e.clientX,\n      top: e.clientY\n    }))\n  }\n}\n\nexport function onNodeOver(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    batch(() => {\n      dispatch(varsSlice.actions.setHoverNode(path));\n      dispatch(blinkNode(path));\n    });\n  };\n}\nexport function onNodeOut(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    dispatch(varsSlice.actions.setHoverNode())\n  };\n}\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Menu, MenuItem} from '@blueprintjs/core';\nimport {TPath, TTemplateNode} from '../../../../types';\nimport {activateNode, addNewShadow, removeNode} from '../../../../procedures/editor/template';\nimport {useNodeByPath} from '../../../../store/editor';\n\nfunction slotSubmenu(dispatch: any, title: string, path: TPath, slotName: string, slotChildren: TTemplateNode[]) {\n  return (\n    <MenuItem icon=\"add\" text={title} key={slotName}>\n      <MenuItem\n        icon=\"add-row-top\"\n        text=\"Begin\"\n        onClick={() => dispatch(addNewShadow([...path, [slotName, 0]], 0))}\n      />\n      <MenuItem\n        icon=\"add-row-bottom\"\n        text=\"End\"\n        onClick={() => dispatch(addNewShadow([...path, [slotName, slotChildren.length]], 0))}\n      />\n    </MenuItem>\n  )\n}\n\ntype TNodeContextMenuProps = {path: TPath; useSelect?: boolean}\nexport function NodeContextMenu({path, useSelect}: TNodeContextMenuProps) {\n  const dispatch = useDispatch()\n  const node = useNodeByPath(path);\n\n  if (!node) {\n    return null;\n  }\n\n  return (\n    <Menu>\n      {useSelect && (\n        <MenuItem icon=\"select\" text=\"Select it\" onClick={() => dispatch(activateNode(path))} />\n      )}\n      {path.length > 0 && (\n        <>\n          <MenuItem icon=\"double-chevron-up\" text=\"Add before\" onClick={() => dispatch(addNewShadow(path, 0))} />\n          <MenuItem icon=\"double-chevron-down\" text=\"Add after\" onClick={() => dispatch(addNewShadow(path, 1))} />\n        </>\n      )}\n      {node.type === 'tag' && slotSubmenu(dispatch, 'Add element', path, 'children', node.slots.children)}\n      {node.type === 'component' && (\n        Object.keys(node.slots).map(slotName => slotSubmenu(dispatch, `Add element to ${slotName}`, path, slotName, node.slots[slotName]))\n      )}\n      {path.length > 0 && (\n        <MenuItem icon=\"delete\" text=\"Delete\" >\n          <MenuItem icon=\"thumbs-up\" text=\"Yes\" onClick={() => dispatch(removeNode(path))} />\n        </MenuItem>\n      )}\n    </Menu>\n  );\n}\n","import styles from './Bottom.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Breadcrumbs, IBreadcrumbProps, Breadcrumb, PopoverInteractionKind, Popover } from '@blueprintjs/core';\n\nimport {TPath, TTemplateNode} from '../../../types';\nimport {TGlobalState} from '../../../store/store';\n\nimport {getBranch} from '../../../helpers/tree';\nimport {areArraysEqual} from '../../../helpers/common';\nimport {blinkNode} from '../../../procedures/editor/template';\n\nimport { NodeContextMenu } from './node-context-menu/NodeContextMenu';\n\nconst icons = {\n  shadow: 'new-object',\n  component: 'box',\n  tag: 'double-chevron-left',\n};\n\nfunction nodeToString(node: TTemplateNode): string {\n  if (node.type === 'tag') {\n    return `<${node.tag} />`;\n  }\n  if (node.type === 'component') {\n    return node.component;\n  }\n  return node.type;\n}\n\ninterface IBottomBreadcrumbsProps extends IBreadcrumbProps {\n  path: TPath;\n}\n\nfunction BreadCrumbWrapper({item, path}: {item: IBreadcrumbProps; path: TPath}) {\n  const dispatch = useDispatch();\n  return (\n    <Popover\n      content={<NodeContextMenu path={path} useSelect={true} />}\n      interactionKind={PopoverInteractionKind.CLICK}\n    >\n      <span onMouseOver={() => dispatch(blinkNode(path))}>\n        <Breadcrumb {...item} className={styles.breadCrumb} />\n      </span>\n    </Popover>\n  );\n}\n\nconst renderBreadcrumb = ({path, ...item}: IBottomBreadcrumbsProps) => {\n  return (\n    <BreadCrumbWrapper item={item} path={path} />\n  )\n};\n\n\ntype TSelectorResult = [TTemplateNode, TPath];\nconst emptyPath: TPath = [];\nconst selector = ({editor}: TGlobalState): TSelectorResult => [editor.document.template, editor.vars.activeNodePath || emptyPath];\nexport function Bottom() {\n  const [tree, path] = useSelector<TGlobalState, TSelectorResult>(selector, areArraysEqual);\n\n  const nodes = getBranch(tree, path);\n  const items: IBottomBreadcrumbsProps[] = nodes.map((node, idx) => {\n    const curPath = path.slice(0, idx);\n    return {\n      text: nodeToString(node),\n      icon: (icons as any)[node.type],\n      path: curPath\n    }\n  })\n  return (\n    <div className={styles.bottom}>\n      <Breadcrumbs\n        items={items}\n        breadcrumbRenderer={renderBreadcrumb as any}\n        currentBreadcrumbRenderer={renderBreadcrumb as any}\n      />\n    </div>\n  );\n}\n","import styles from './Floats.module.css';\nimport React from 'react'\nimport {useSelector} from 'react-redux';\n\nimport {areArraysEqual, areValuesEqual, rectToBox} from '../../../helpers/common';\nimport {\n  blinkAreasSelector,\n  iframeCoordsSelector,\n  activeNodePathNodeSelector,\n  refStoreSelector\n} from '../../../store/editor'\n\nfunction FloatBox({uid, className}: {uid: string, className: string}) {\n  const refs = useSelector(refStoreSelector);\n  const iframeCoords = useSelector(iframeCoordsSelector);\n  const el = refs.get(uid);\n  if (el) {\n    const box = rectToBox(el.getBoundingClientRect());\n    return (\n      <div\n        className={className}\n        style={{\n          left: box.left + iframeCoords.left - 1,\n          top: box.top + iframeCoords.top - 1,\n          width: box.width,\n          height: box.height\n        }}\n      />\n    )\n  }\n  return null;\n}\n\nfunction FloatsBlinkAreas({selectedUid}: {selectedUid?: string}): any {\n const areas = useSelector(blinkAreasSelector, areArraysEqual);\n  return areas\n    .filter(area => area.uid !== selectedUid)\n    .map(area => <FloatBox uid={area.uid} className={styles.blinkBox} key={area.uid} />);\n}\n\nexport const Floats = React.memo((): any => {\n  const np = useSelector(activeNodePathNodeSelector, areValuesEqual);\n  return np?.node.type !== 'shadow' && (\n    <>\n      {np && <FloatBox uid={np.node.id}  className={styles.selectedBox} />}\n      <FloatsBlinkAreas selectedUid={np?.node.id} />\n    </>\n  );\n});\n","import React, {useEffect} from 'react'\nimport {useSelector, useStore, Provider} from 'react-redux';\nimport {ContextMenu} from '@blueprintjs/core';\nimport {varsSlice} from '../../../store/editor/varsSlice';\nimport {contextMenuSelector} from '../../../store/editor'\nimport {TGlobalState} from '../../../store/store';\nimport {NodeContextMenu} from './node-context-menu/NodeContextMenu';\n\nexport function ContextMenus() {\n  const store = useStore<TGlobalState>();\n  const contextMenu = useSelector(contextMenuSelector);\n  useEffect(() => {\n    if (contextMenu) {\n      Promise.resolve().then(() => {\n        const {left, top, path} = contextMenu;\n        ContextMenu.show(\n          <Provider store={store}>\n            <NodeContextMenu path={path} />\n          </Provider>,\n          {left, top},\n          () => { store.dispatch(varsSlice.actions.setContextMenu())}\n        );\n      })\n    }\n  }, [contextMenu, store])\n  return null;\n}\n","import styles from './Frame.module.css'\nimport React, {RefObject, PureComponent} from 'react';\nimport ReactDOM from 'react-dom';\nimport cn from \"classnames\";\n\nimport type {Dispatch} from 'redux';\nimport {varsSlice} from '../../../../store/editor/varsSlice';\nimport {rectToBox} from '../../../../helpers/common';\n\nexport type FrameProps = {\n  head: React.ReactNode;\n  content: React.ReactNode;\n  dispatch: Dispatch<any>;\n  className?: string;\n}\n\n// const initialContent = '<!DOCTYPE html><html><head></head><body class=\"_frame_body\"></body></html>';\n\nexport default class Frame extends PureComponent<FrameProps, {}> {\n  private node: RefObject<HTMLIFrameElement> = React.createRef();\n  private resizeObserver: ResizeObserver = new ResizeObserver(() => { this.dispatchCoords(); });\n\n  componentDidMount() {\n    const doc = this.getDoc();\n    if (doc?.readyState === 'complete') {\n      this.handleLoad();\n    } else {\n      this.node.current?.addEventListener('load', this.handleLoad);\n    }\n    this.resizeObserver.observe(this.node.current as HTMLIFrameElement);\n  }\n\n  componentWillUnmount() {\n    this.node.current?.removeEventListener('load', this.handleLoad);\n\n    this.resizeObserver.disconnect();\n  }\n\n  dispatchCoords() {\n    const rect = (this.node.current as HTMLIFrameElement).getBoundingClientRect();\n    this.props.dispatch(varsSlice.actions.setIframeCoords(rectToBox(rect)))\n  }\n\n  getDoc(): Document | null {\n    return this.node.current?.contentDocument || null;\n  }\n\n  handleLoad = () => {\n    this.getDoc()?.body.classList.add('_frame_body');\n    this.forceUpdate();\n  };\n\n  handleMouseLeave = () => {\n    this.props.dispatch(varsSlice.actions.removeAllBlinkAreas())\n  }\n\n  renderFrameContents() {\n    const doc = this.getDoc();\n    if (!doc) {\n      return null;\n    }\n\n    return [\n      ReactDOM.createPortal(this.props.head, doc.head),\n      ReactDOM.createPortal(this.props.content, doc.body)\n    ];\n  }\n\n  render() {\n    return (\n      <iframe\n        ref={this.node}\n        title=\"huitle\"\n        className={cn(styles.frame, this.props.className)}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {this.renderFrameContents()}\n      </iframe>\n    );\n  }\n}\n","import styles from './SelectComponent.module.css';\nimport React, {useMemo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\nimport {Callout, Card, Tooltip} from '@blueprintjs/core';\n\nimport {TBoxCoords, TComponent} from '../../../../types';\nimport {TGlobalState} from '../../../../store/store';\nimport {TActiveShadowContent, TVarsSliceState} from '../../../../store/editor/varsSlice';\n\nimport {areArraysEqual, areValuesEqual} from '../../../../helpers/common';\nimport {activateShadowContent, applyShadowContent} from '../../../../procedures/editor/template';\nimport {mainCoordsSelector, activeNodePathNodeSelector, activeShadowContentSelector} from '../../../../store/editor';\n\nfunction stringifyContent(item: TActiveShadowContent) {\n  return item[0] === 'tag' ? `<${item[1]}` : item.join(':');\n}\n\nfunction Item({item, title}: {item: TActiveShadowContent; title?: string}) {\n  const dispatch = useDispatch();\n  const activeShadowContent = useSelector(activeShadowContentSelector);\n  const isActive = areValuesEqual(activeShadowContent, item);\n  const tooltip = isActive ? 'Click to select' : 'Click to preview';\n\n  return (\n    <Tooltip content={tooltip}>\n      <Card\n        interactive\n        elevation={isActive ? 4 : 0}\n        className={styles.itemCard}\n        onClick={() => {\n          if (isActive) {\n            dispatch(applyShadowContent())\n          } else {\n            dispatch(activateShadowContent(item))\n          }\n        }}\n      >\n        <Callout className={cn(styles.itemInner, isActive && 'bp3-intent-success')}>\n          {title || stringifyContent(item)}\n        </Callout>\n      </Card>\n    </Tooltip>\n  )\n}\n\nconst slots: TActiveShadowContent[] = [['slot']];\nconst tags: TActiveShadowContent[] = [['tag', 'div']];\n\nexport function SelectComponent() {\n  const components = useSelector<TGlobalState, TComponent[]>(state => state.components.components);\n  const vars = useSelector<TGlobalState, TVarsSliceState>(state => state.editor.vars);\n  const isComp = vars.documentId.type === 'component';\n\n  const items: Array<[TActiveShadowContent, string]> = useMemo(() => {\n    const comps = isComp ? components.filter(c => c.id !== vars.documentId.id) : components;\n    return comps.map((c) => ([\n      ['component', c.id],\n      `%${c.name}`\n    ]))\n  }, [isComp, components, vars.documentId]);\n  return (\n    <>\n      <div className={styles.grid}>\n        {isComp && slots.map(i => <Item item={i} key={i.join(':')} />)}\n        {tags.map(i => <Item item={i} key={i.join(':')} />)}\n        {items.map(([item, title]) => <Item item={item} title={title} key={item.join(':')} />)}\n      </div>\n    </>\n  );\n}\n\nconst slidePanelSelector: (state: TGlobalState) => [boolean, TBoxCoords] = (state) => {\n  const np = activeNodePathNodeSelector(state);\n  const active = np?.node.type === 'shadow';\n  const mainCoords = mainCoordsSelector(state);\n  return [active, mainCoords];\n}\nexport function SlidePanel() {\n  const [active, mainCoords] = useSelector(slidePanelSelector, areArraysEqual);\n  return (\n    <div\n      style={{\n        width: mainCoords.width / 3 * 2,\n        height: mainCoords.height,\n        top: mainCoords.top,\n        left: active ? (mainCoords.width / 3) : '100%'\n      }}\n      className={styles.slidePanel}\n    >\n      {active && <SelectComponent />}\n    </div>\n  )\n}\n\n// translateX(calc(-1 * 100%*.3/2)) scale(.70);\n","import styles from './Editor.module.css';\nimport React, {MutableRefObject, useEffect, useMemo, useRef} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\n\nimport {TBoxCoords, TTemplateNode} from '../../../types';\nimport {areArraysEqual, rectToBox} from '../../../helpers/common';\nimport {TGlobalState} from '../../../store/store';\nimport {\n  iframeCoordsSelector,\n  mainCoordsSelector,\n  templateRootSelector,\n  activeShadowContentSelector,\n  activeNodePathNodeSelector\n} from '../../../store/editor';\nimport {varsSlice} from '../../../store/editor/varsSlice';\n\nimport {RightSpace} from './right/RightSpace';\n\nimport {HeadStyles} from '../HeadStyles';\n\nimport {FrameTree} from './EditArea';\nimport {Bottom} from './Bottom';\nimport {Floats} from './Floats';\nimport {ContextMenus} from './ContextMenus';\nimport Frame from './frame/Frame';\nimport {SlidePanel} from './select-component/SelectComponent';\nimport {applyShadowContent} from '../../../procedures/editor/template';\n\nconst editorSelector: (state: TGlobalState) => [TTemplateNode, TBoxCoords, TBoxCoords, boolean, boolean] = (state) => {\n  return [\n    templateRootSelector(state),\n    mainCoordsSelector(state),\n    iframeCoordsSelector(state),\n    activeNodePathNodeSelector(state)?.node.type === 'shadow',\n    !!activeShadowContentSelector(state)\n  ];\n};\nexport function Editor() {\n  const ref = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement>;\n  const dispatch = useDispatch();\n  const [tree, mainCoords, iframeCoords, shadowActive, activeShadowContent] = useSelector(editorSelector, areArraysEqual);\n  const style: any = useMemo(() => {\n    const nw = mainCoords.width / 3 - iframeCoords.left;\n    const scale = nw / iframeCoords.width;\n    return {\n      '--iframe-scale': scale,\n      '--iframe-translate': (scale - 1) / 2\n    }\n  }, [mainCoords, iframeCoords]);\n  useEffect(() => {\n    const resizeObserver: ResizeObserver = new ResizeObserver(() => {\n      const rect = (ref.current as HTMLDivElement).getBoundingClientRect();\n      dispatch(varsSlice.actions.setMainCoords(rectToBox(rect)))\n    });\n    resizeObserver.observe(ref.current as HTMLDivElement);\n    return () => resizeObserver.disconnect();\n  }, [dispatch, ref]);\n  return (\n    <div className={styles.editor} ref={ref}>\n      <div className={styles.left}></div>\n      <div className={styles.center} style={style}>\n        <Frame\n          head={<HeadStyles tree={tree} />}\n          content={<FrameTree tree={tree} />}\n          dispatch={dispatch}\n          className={cn(styles.frame, shadowActive && styles.frameMini)}\n        />\n        <Bottom />\n      </div>\n      {shadowActive && (\n        <div\n          style={{\n            position: 'absolute',\n            cursor: 'pointer',\n            ...iframeCoords\n          }}\n          onClick={() => {\n            if (activeShadowContent) {\n              dispatch(applyShadowContent());\n            } else {\n              dispatch(varsSlice.actions.setActiveNode());\n            }\n          }}\n        />\n      )}\n      <div className={styles.right}>\n        <RightSpace />\n      </div>\n      <Floats/>\n      <ContextMenus/>\n      <SlidePanel />\n    </div>\n  )\n}\n","import styles from './Components.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Card, Icon} from '@blueprintjs/core';\n\nimport {TGlobalState} from '../../store/store';\nimport {TComponent} from '../../types';\nimport {changeActivity, createComponent} from '../../procedures/main';\nimport {PopoverInput} from '../components/elements/PopoverInput';\n\nexport function Components() {\n  const dispatch = useDispatch();\n  const components = useSelector<TGlobalState, TComponent[]>(state => state.components.components);\n  return (\n    <div className={styles.grid}>\n      {components.map(components => (\n        <Card\n          interactive\n          className={styles.itemCard}\n          key={components.id}\n          onClick={() => {\n            dispatch(changeActivity({\n              type: 'editor',\n              document: {\n                type: 'component',\n                id: components.id\n              }\n            }))\n          }}\n        >\n          {components.name}\n        </Card>\n      ))}\n      <PopoverInput\n        title=\"New component name\"\n        onSubmit={(name) => dispatch(createComponent(name))}\n      >\n        <Card interactive className={styles.itemCard}>\n          <Icon icon=\"plus\" iconSize={50} intent=\"primary\" />\n        </Card>\n      </PopoverInput>\n    </div>\n  );\n}\n","import styles from './Pages.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Card} from '@blueprintjs/core';\nimport {TGlobalState} from '../../store/store';\nimport {TPage} from '../../types';\nimport {changeActivity} from '../../procedures/main';\n\nexport function Pages() {\n  const dispatch = useDispatch();\n  const pages = useSelector<TGlobalState, TPage[]>(state => state.pages.pages);\n  return (\n    <div className={styles.grid}>\n      {pages.map(page => (\n        <Card\n          interactive\n          className={styles.itemCard}\n          key={page.id}\n          onClick={() => {\n            dispatch(changeActivity({\n              type: 'editor',\n              document: {\n                type: 'page',\n                id: page.id\n              }\n            }))\n          }}\n        >\n          {page.name}\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import styles from './App.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Navbar, Button} from '@blueprintjs/core';\n\nimport {TActivity, activitySelector} from '../../store/global';\nimport {changeActivity} from '../../procedures/main';\n\nimport {Editor} from '../components/editor/Editor';\nimport {Components} from './Components';\nimport {Pages} from './Pages';\n\nfunction SwitchActivity({activity}: {activity: TActivity}) {\n  switch (activity.type) {\n    case 'components':\n      return <Components />;\n    case 'pages':\n      return <Pages />;\n    case 'editor':\n      return <Editor />;\n  }\n}\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const activity = useSelector(activitySelector);\n  return (\n    <div className={`bp3-dark ${styles.app}`}>\n      <Navbar>\n        <Navbar.Group>\n          <Navbar.Heading>Mastkloot</Navbar.Heading>\n          <Navbar.Divider />\n          <Button\n            active={'pages' === activity.type}\n            minimal\n            icon=\"document\"\n            text=\"Pages\"\n            onClick={() => dispatch(changeActivity({type: 'pages'}))}\n          />\n          <Button\n            active={'components' === activity.type}\n            minimal\n            icon=\"box\"\n            text=\"Components\"\n            onClick={() => dispatch(changeActivity({type: 'components'}))}\n          />\n          <Navbar.Divider />\n          {activity.type === 'editor' && (\n            <Button\n              minimal\n              icon=\"database\"\n              active\n            >\n              {activity.document.id}\n            </Button>\n          )}\n        </Navbar.Group>\n      </Navbar>\n      <SwitchActivity activity={activity} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process.env.PUBLIC_URL as string),\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport './frame.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport {store} from './store/store';\nimport App from './jsx/views/App';\nimport {loadComponents, loadPages} from './procedures/main';\n\nimport * as serviceWorker from './serviceWorker';\n\nstore.dispatch(loadPages());\nstore.dispatch(loadComponents());\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__tTmoQ\",\"frame\":\"Editor_frame__30Iew\",\"frameMini\":\"Editor_frameMini__2yphG\",\"left\":\"Editor_left__1PAZX\",\"center\":\"Editor_center__1ejEu\",\"right\":\"Editor_right__3s0DM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidePanel\":\"SelectComponent_slidePanel__k6Ase\",\"grid\":\"SelectComponent_grid__3S3s-\",\"itemCard\":\"SelectComponent_itemCard__17QvB\",\"itemInner\":\"SelectComponent_itemInner__13IYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Prop_cell__3WLE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Components_grid__3cMou\",\"itemCard\":\"Components_itemCard__Pio8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottom\":\"Bottom_bottom__kAYWa\",\"breadCrumb\":\"Bottom_breadCrumb__b1Wwv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blinkBox\":\"Floats_blinkBox__2surn\",\"BlinkBoxKF\":\"Floats_BlinkBoxKF__2r1aL\",\"selectedBox\":\"Floats_selectedBox__3Ci8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Pages_grid__1wjwN\",\"itemCard\":\"Pages_itemCard__3Cwgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2GKdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightSpace\":\"RightSpace_rightSpace__1jKhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"propSelect\":\"TagProps_propSelect__2YFwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allProps\":\"PropsList_allProps__3a0GU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"length_menu__2eXfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"Frame_frame__wkmfn\"};"],"sourceRoot":""}