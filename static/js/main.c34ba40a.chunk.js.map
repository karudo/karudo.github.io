{"version":3,"sources":["components/App.module.css","components/editor/Floats.module.css","components/frame/Frame.module.css","components/props/RightSpace.module.css","components/css-props-editor/editor/length.module.css","helpers/common.ts","store/global.ts","helpers/tree.ts","store/editor/varsSlice.ts","store/editor/templateSlice.ts","store/editor/index.ts","store/components.ts","store/pages.ts","store/store.ts","data/pages.ts","data/components.ts","modules/dataStore.ts","procedures/editor/index.ts","procedures/main.ts","components/editor/Floats.tsx","procedures/editor/template.ts","components/node-context-menu/NodeContextMenu.tsx","components/ContextMenus.tsx","components/frame/Frame.tsx","components/props/SelectComponent.tsx","modules/css/css.ts","components/css-props-editor/editor/length.tsx","components/css-props-editor/editor/variant.tsx","components/css-props-editor/editor/index.ts","components/css-props-editor/editor/color.tsx","components/css-props-editor/Prop.tsx","components/css-props-editor/CSSPropsEditor.tsx","components/props/TagProps.tsx","components/props/RightSpace.tsx","components/HeadStyles.tsx","components/elements/ContentEditable.tsx","components/editor/EditArea.tsx","procedures/nodesHandlers.ts","components/editor/Bottom.tsx","components/editor/Editor.tsx","components/Components.tsx","components/Pages.tsx","components/App.tsx","serviceWorker.ts","index.tsx","components/editor/Editor.module.css","components/props/SelectComponent.module.css","components/css-props-editor/CSSPropsEditor.module.css","components/css-props-editor/Prop.module.css","components/editor/Bottom.module.css","components/Components.module.css","components/Pages.module.css"],"names":["module","exports","areValuesEqual","a","b","isEqual","areArraysEqual","a1","a2","length","i","splitArrLastEl","arr","lm1","slice","MapProxy","map","Map","k","this","get","v","set","clear","delete","globalSlice","createSlice","name","initialState","activity","type","tabs","reducers","setActivity","state","payload","addNewTab","push","updateTab","doc","update","filter","t","document","forEach","Object","assign","removeTab","activitySelector","global","tabsSelector","StopWalkSymbol","Symbol","walkTreeDeep","node","cb","path","slotName","slots","content","len","filterTree","tree","result","getNodeByPath","pi","getMaxId","ids","mapTree","n","id","max","createShadowNode","width","height","createTagNode","shadow","tag","style","children","createComponentNode","component","slotsEntries","template","slot","code","fromEntries","props","createVarsSliceState","activeNodePath","undefined","activeShadowContent","hoverNode","blinkAreas","iframeCoords","left","top","contextMenu","refs","blinkBoxUid","varsSlice","merge","setIframeCoords","setActiveShadowContent","setActiveNode","setHoverNode","setContextMenu","addBlinkArea","uid","removeBlinkArea","idx","findIndex","splice","templateSliceState","templateSlice","replaceTemplate","replaceNode","parentPath","index","insertNode","addIdx","removeNode","setStyleProp","prop","value","setText","text","editorSliceReducer","combineReducers","reducer","vars","templateRootSelector","editor","blinkAreasSelector","contextMenuSelector","refStoreSelector","componentsSlice","components","setComponents","pagesSlice","pages","setPages","middleware","getDefaultMiddleware","serializableCheck","store","configureStore","padding","backgroundColor","place","display","minWidth","borderWidth","borderStyle","borderColor","dataStore","version","stores","on","page","add","comp","table","Dexie","loadDocument","applyEditor","dispatch","getState","batch","actions","changeActivity","prevActivity","omit","existTab","find","newVars","loadPages","toArray","loadComponents","FloatBox","React","memo","area","useDispatch","className","styles","blinkBox","animationIterationCount","count","box","onAnimationEnd","Floats","useSelector","key","activateNode","addNewShadow","newNode","parentNode","c","blinkNode","rect","getBoundingClientRect","slotSubmenu","title","slotChildren","icon","onClick","NodeContextMenu","useSelect","useNodeByPath","keys","ContextHoc","useStore","useEffect","Promise","resolve","then","ContextMenu","show","Frame","_isMounted","_isFirst","createRef","resizeObserver","ResizeObserver","dispatchCoords","handleLoad","forceUpdate","getDoc","readyState","current","addEventListener","observe","removeEventListener","disconnect","rectToBox","contentDocument","open","write","close","ReactDOM","createPortal","head","body","ref","frame","renderFrameContents","PureComponent","selector","Item","item","isActive","tooltip","interactive","elevation","itemCard","slotContent","createSlotNode","cn","itemInner","tags","SelectComponent","items","useMemo","isComp","comps","grid","join","JSON","stringify","allCssPropsKeyed","keyBy","defaults","variants","allCssPropsNames","sortBy","units","VariantSelect","Select","ofType","renderItem","handleClick","modifiers","active","disabled","color","onChange","e","target","num","match","unit","substring","permissionsMenu","menu","curUnit","position","Position","BOTTOM_RIGHT","minimal","rightIcon","onValueChange","newNum","rightElement","variant","activeItem","itemRenderer","onItemSelect","filterable","Prop","propName","useCallback","newVal","cell","createElement","editors","filterItem","search","startsWith","PropSelect","PropsList","usedProps","propsToAdd","difference","allProps","pn","propSelect","itemPredicate","CSSPropsEditor","TagProps","nodePathSelector","x","RightSpace","shallowEqual","rightSpace","createCssClass","kebabCase","getHeadStyle","styleSheets","ss","j","cssRules","cssRule","CSSStyleRule","selectorText","cssText","CSSKeyframesRule","ArrayStyles","s","filterCb","TreeStyles","prefix","componentsSelector","ComponentsStyles","HeadStyles","parentStyles","replaceCaret","el","findDocument","defaultView","HTMLDocument","isDocument","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","focus","ContentEditable","lastHtml","html","getEl","attrs","emitChange","originalEvt","innerHTML","dangerouslySetInnerHTML","__html","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","nextProps","Component","rootPath","SlotContext","createContext","SlotActiveContext","TemplateActiveContext","EmptyShadowActivator","selected","useContext","EmptyShadowTag","Provider","MKTagBrick","classPrefix","EmptyShadowComponent","componentId","MKComponentBrick","SlotContent","paths","sn","templateActive","ctx","MKTemplate","MKSlotBrickActive","bricks","txt","isMyPath","areArraysEqualCb","MKBrickSelector","parentAttrs","nodeRef","useRef","nodeId","refStore","useLayoutEffect","useRefStore","stopPropagation","onNodeClick","onContextMenu","preventDefault","clientX","clientY","onNodeContextMenu","onMouseOver","onNodeOver","onMouseOut","onNodeOut","icons","nodeToString","BreadCrumbWrapper","interactionKind","PopoverInteractionKind","CLICK","breadCrumb","renderBreadcrumb","emptyPath","Bottom","getBranch","curPath","bottom","breadcrumbRenderer","currentBreadcrumbRenderer","Editor","center","right","Components","Pages","SwitchActivity","App","app","Group","Heading","Divider","dataset","tab","saveDocument","Boolean","window","location","hostname","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c34ba40a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blinkBox\":\"Floats_blinkBox__3QTgp\",\"BlinkBoxKF\":\"Floats_BlinkBoxKF__Mdouj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"Frame_frame__35oTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightSpace\":\"RightSpace_rightSpace__1OYG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"length_menu__1k0_m\"};","import {isEqual} from 'lodash';\nimport {TBoxCoords, TPath} from '../types';\nimport {TActivity} from '../store/global';\n\nexport function areValuesEqual<T>(a: T, b: T): boolean {\n  return isEqual(a, b);\n}\n\nexport function areArraysEqual<T>(a1: T[], a2: T[]): boolean {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; ++i) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function areArraysEqualCb<T>(a1: T[], a2: T[], cb: (i1: T, i2: T) => boolean): boolean {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; ++i) {\n    if (!cb(a1[i], a2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function arePathsEqual(p1: TPath, p2: TPath): boolean {\n return areArraysEqualCb(p1, p2, areArraysEqual)\n}\n\nexport function splitArrLastEl<T>(arr: T[]): [T[], T] {\n  const lm1 = arr.length - 1;\n  return [arr.slice(0, lm1), arr[lm1]];\n}\n\nexport class MapProxy<K, V> {\n  private map: Map<K, V> = new Map<K, V>();\n  get (k: K): V {\n    return this.map.get(k) as V;\n  }\n  set (k: K, v: V) {\n    this.map.set(k, v);\n    return this;\n  }\n  clear () {\n    this.map.clear();\n  }\n  delete (k: K) {\n    return this.map.delete(k);\n  }\n}\n\nexport function rectToBox(rect: DOMRect): TBoxCoords {\n  return {\n    left: rect.left,\n    top: rect.top,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\nexport function isSameActivity(a: TActivity, b: TActivity): boolean {\n  if (a.type === 'editor' && b.type === 'editor') {\n    return areValuesEqual(a.document, b.document);\n  }\n  return areValuesEqual(a, b);\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {TGlobalState} from './store';\nimport {TDocumentIdentifier, TTagNode, TTemplateNode} from '../types';\nimport {TVarsSliceState} from './editor/varsSlice';\nimport {areValuesEqual} from '../helpers/common';\n\nexport type TActivityComponents = {type: 'components'};\nexport type TActivityPages = {type: 'pages'};\nexport type TActivityEditor = {\n  type: 'editor';\n  document: TDocumentIdentifier;\n};\n\nexport type TActivity = TActivityComponents | TActivityPages | TActivityEditor;\n\nexport type TTab = {\n  document: TDocumentIdentifier;\n  vars: Partial<TVarsSliceState>;\n  template: TTagNode<TTemplateNode>;\n};\n\nexport type TGlobalSliceState = {\n  activity: TActivity;\n  tabs: TTab[];\n};\n\nexport const globalSliceState: TGlobalSliceState = {\n  activity: {\n    type: 'components'\n  },\n  tabs: []\n}\n\nexport const globalSlice = createSlice({\n  name: 'global',\n  initialState: globalSliceState,\n  reducers: {\n    setActivity(state, {payload}: PayloadAction<TActivity>) {\n      state.activity = payload;\n    },\n    addNewTab(state, {payload}: PayloadAction<TTab>) {\n      state.tabs.push(payload);\n    },\n    updateTab(state, {payload: [doc, update]}: PayloadAction<[TDocumentIdentifier, Partial<TTab>]>) {\n      state.tabs.filter(t => areValuesEqual(doc, t.document)).forEach(t => {\n        Object.assign(t, update);\n      });\n    },\n    removeTab(state, {payload}: PayloadAction<TDocumentIdentifier>) {\n      state.tabs = state.tabs.filter(t => !areValuesEqual(payload, t.document))\n    }\n  }\n});\n\nexport const activitySelector = (state: TGlobalState): TActivity => state.global.activity;\nexport const tabsSelector = (state: TGlobalState): TTab[] => state.global.tabs;\n","import {max} from 'lodash';\n\nimport {\n  TTemplateNode,\n  TComponentNode,\n  TPath,\n  TSlotContent,\n  TBaseNode,\n  TTagNode,\n  TShadowNode,\n  TComponent, TSlotNode\n} from '../types'\n\nexport const StopWalkSymbol = Symbol();\n\nexport function walkTreeDeep(node: TTemplateNode, cb: (node: TTemplateNode, path?: TPath) => any, path: TPath = []) {\n  if (cb(node, path) === StopWalkSymbol) {\n    return;\n  }\n\n  if (node.type === 'component' || node.type === 'tag') {\n    for (const slotName in node.slots) {\n      const content = (node.slots as {[key: string]: TSlotContent<TTemplateNode>})[slotName];\n      const len = content.length;\n      for (let k = 0; k < len; ++k) {\n        walkTreeDeep(content[k], cb, [...path, [slotName, k]]);\n      }\n    }\n  }\n}\n\nexport function mapTree<T extends TBaseNode = TTemplateNode, R = any>(tree: TTemplateNode, cb: (node: TTemplateNode) => R): R[] {\n  const result: R[] = [];\n  walkTreeDeep(tree, node => result.push(cb(node)));\n  return result\n}\n\nexport function filterTree<T extends TBaseNode = TTemplateNode>(tree: TTemplateNode, cb: (node: TTemplateNode) => boolean): T[] {\n  const result: T[] = [];\n  walkTreeDeep(tree, (node => {\n    if (cb(node)) {\n      result.push(node as any);\n    }\n  }));\n  return result\n}\n\nexport function getNodeByPath(node: TTemplateNode, path: TPath): TTemplateNode {\n  for (let i = 0; i < path.length; ++i) {\n    const pi = path[i];\n    node = (node as TComponentNode<TTemplateNode>).slots[pi[0]][pi[1]];\n  }\n  return node;\n}\n\nexport function getMaxId(node: TTemplateNode): number {\n  const ids = mapTree<TTemplateNode, number>(node, n => n.id);\n  return max(ids) || 0;\n}\n\nexport function getBranch(node: TTemplateNode, path: TPath): TTemplateNode[] {\n  const result = [node];\n  for (let i = 0; i < path.length; ++i) {\n    const pi = path[i];\n    node = (node as TComponentNode<TTemplateNode>).slots[pi[0]][pi[1]];\n    result.push(node);\n  }\n  return result;\n}\n\nexport function createShadowNode(id: number, width: string, height: string): TShadowNode {\n  return {\n    id: id++,\n    type: 'shadow',\n    width,\n    height\n  }\n}\n\nexport function createSlotNode(id: number): TSlotNode {\n  return {\n    id,\n    type: 'slot',\n    code: `code${id}`,\n    width: '100px',\n    height: '100px'\n  };\n}\n\nexport function createTagNode(id: number, name: string): TTagNode<TTemplateNode> {\n  const shadow = createShadowNode(id++, '100%', '50px');\n  return {id: id++, type: 'tag', tag: name, style: {}, slots: {children: [shadow]}};\n}\n\nexport function createComponentNode(id: number, component: TComponent): TComponentNode<TTemplateNode> {\n  const componentSlots = filterTree<TSlotNode>(component.template, node => node.type === 'slot');\n  const slotsEntries = componentSlots.map(slot => [slot.code, [createShadowNode(id++, slot.width, slot.height)]])\n  const slots: {[key: string]: TSlotContent<TTemplateNode>} = Object.fromEntries(slotsEntries);\n  return {id: id++, type: 'component', component: component.id, props: {}, slots}\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TBoxCoords, TDocumentIdentifier, TPath} from '../../types';\nimport {MapProxy} from '../../helpers/common';\n\nexport type TActiveShadowContent = ['tag', string] | ['component', string] | ['slot'];\n\nexport type THoverNodePath = TPath\n\nexport type TBlinkArea = {\n  uid: number,\n  count: number,\n  box: TBoxCoords\n}\n\nexport type TContextMenuState = {\n  left: number;\n  top: number;\n  path: TPath;\n}\n\nexport type TVarsSliceState = {\n  document: TDocumentIdentifier;\n  activeNodePath?: TPath;\n  activeShadowContent?: TActiveShadowContent;\n  hoverNode?: THoverNodePath;\n  blinkAreas: TBlinkArea[];\n  iframeCoords: TBoxCoords;\n  contextMenu?: TContextMenuState;\n  refs: MapProxy<number | string, HTMLDivElement>;\n}\n\nexport function createVarsSliceState(state?: Partial<TVarsSliceState>): TVarsSliceState {\n  return {\n    document: {type: 'component', id: ''},\n    activeNodePath: undefined,\n    activeShadowContent: undefined,\n    hoverNode: undefined,\n    blinkAreas: [],\n    iframeCoords: {left: 0, top: 0, width: 0, height: 0},\n    contextMenu: undefined,\n    refs: new MapProxy(),\n    ...state,\n  };\n}\n\n\nlet blinkBoxUid = 0;\nexport const varsSlice = createSlice({\n  name: 'vars',\n  initialState: createVarsSliceState(),\n  reducers: {\n    merge(state, {payload}: PayloadAction<Partial<TVarsSliceState>>) {\n      Object.assign(state, payload);\n    },\n    setIframeCoords(state, {payload}: PayloadAction<TBoxCoords>) {\n      state.iframeCoords = payload;\n    },\n    setActiveShadowContent(state, {payload}: PayloadAction<TActiveShadowContent | undefined>) {\n      state.activeShadowContent = payload;\n    },\n    setActiveNode(state, {payload}: PayloadAction<TPath | undefined>) {\n      state.activeNodePath = payload;\n    },\n    setHoverNode(state, {payload}: PayloadAction<THoverNodePath | undefined>) {\n      state.hoverNode = payload;\n    },\n    setContextMenu(state, {payload}: PayloadAction<TContextMenuState | undefined>) {\n      state.contextMenu = payload;\n    },\n    addBlinkArea(state, {payload}: PayloadAction<Omit<TBlinkArea, 'uid'>>) {\n      state.blinkAreas = [{\n        uid: blinkBoxUid++,\n        ...payload\n      }];\n    },\n    removeBlinkArea(state, {payload}: PayloadAction<number>) {\n      const idx = state.blinkAreas.findIndex(b => b.uid === payload)\n      if (idx > -1) {\n        state.blinkAreas.splice(idx, 1);\n      }\n    },\n   },\n});\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TComponentNode, TTagNode, TTemplateNode, TPath, TTextNode} from '../../types';\nimport {getNodeByPath} from '../../helpers/tree';\nimport {splitArrLastEl} from '../../helpers/common';\n\nexport type TTemplateSliceState = TTagNode<TTemplateNode>;\n\nlet id = 10;\nexport const templateSliceState: TTemplateSliceState = {\n  id: id++,\n  type: 'tag',\n  tag: 'div',\n  style: {\n  },\n  slots: {\n    children: [],\n  },\n};\n\nexport const templateSlice = createSlice({\n  name: 'template',\n  initialState: templateSliceState,\n  reducers: {\n    replaceTemplate(state, {payload}: PayloadAction<TTemplateSliceState>) {\n      return payload;\n    },\n    replaceNode(state, {payload: [path, node]}: PayloadAction<[TPath, TTemplateNode]>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(path);\n      const parentNode = getNodeByPath(state, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName][index] = node;\n    },\n    insertNode(state, {payload: [path, node, addIdx]}: PayloadAction<[TPath, TTemplateNode, number]>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(path);\n      const parentNode = getNodeByPath(state, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName].splice(index + addIdx, 0, node);\n    },\n    removeNode(state, {payload}: PayloadAction<TPath>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(payload);\n      const parentNode = getNodeByPath(state, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName].splice(index, 1);\n    },\n    setStyleProp(state, {payload: [path, prop, value]}: PayloadAction<[TPath, string, string]>) {\n      const targetNode = getNodeByPath(state, path) as TTagNode<TTemplateNode>;\n      targetNode.style[prop] = value;\n    },\n    setText(state, {payload: [path, value]}: PayloadAction<[TPath, string]>) {\n      const targetNode = getNodeByPath(state, path) as TTextNode;\n      targetNode.text = value;\n    },\n  }\n});\n\n\n","import {MutableRefObject, useLayoutEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {combineReducers} from '@reduxjs/toolkit';\n\nimport {TGlobalState} from '../store';\nimport {TPath, TTemplateNode} from '../../types';\nimport {getNodeByPath} from '../../helpers/tree';\n\nimport {TBlinkArea, TContextMenuState, TVarsSliceState, varsSlice} from './varsSlice';\nimport {TTemplateSliceState, templateSlice} from './templateSlice';\n\nexport type TEditorSliceState = {\n  template: TTemplateSliceState;\n  vars: TVarsSliceState;\n};\n\nexport const editorSliceReducer = combineReducers<TEditorSliceState>({\n  template: templateSlice.reducer,\n  vars: varsSlice.reducer,\n});\n\nexport const editorSelector = (state: TGlobalState): TEditorSliceState => state.editor;\n\nexport const templateRootSelector = (state: TGlobalState): TTemplateNode => state.editor.template;\nexport const useNodeByPath = (path: TPath) => {\n  return useSelector((state: TGlobalState) => getNodeByPath(state.editor.template, path));\n}\n\nexport const blinkAreasSelector = ({editor}: TGlobalState): TBlinkArea[] => editor.vars.blinkAreas;\nexport const contextMenuSelector = ({editor}: TGlobalState): TContextMenuState | undefined => editor.vars.contextMenu;\nexport const refStoreSelector = ({editor}: TGlobalState) => editor.vars.refs;\n\nexport function useRefStore(nodeId: number, active: boolean, nodeRef: MutableRefObject<HTMLDivElement | undefined>) {\n  const refStore = useSelector(refStoreSelector);\n  useLayoutEffect(() => {\n    if (active) {\n      refStore.set(nodeId, nodeRef.current as HTMLDivElement);\n      return () => {\n        refStore.delete(nodeId)\n      }\n    }\n  }, [nodeId, active, nodeRef, refStore]);\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TComponent} from '../types';\n\nexport type TComponentsSliceState = {\n  components: TComponent[];\n};\n\nconst pagesInitialState: TComponentsSliceState = {\n  components: []\n}\n\nexport const componentsSlice = createSlice({\n  name: 'components',\n  initialState: pagesInitialState,\n  reducers: {\n    setComponents(state, {payload}: PayloadAction<TComponent[]>) {\n      state.components = payload;\n    }\n  }\n});\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TPage} from '../types';\n\nexport type TPagesSliceState = {\n  pages: TPage[];\n};\n\nconst pagesInitialState: TPagesSliceState = {\n  pages: []\n}\n\nexport const pagesSlice = createSlice({\n  name: 'pages',\n  initialState: pagesInitialState,\n  reducers: {\n    setPages(state, {payload}: PayloadAction<TPage[]>) {\n      state.pages = payload;\n    }\n  }\n});\n","import {combineReducers} from 'redux';\nimport {ThunkAction} from 'redux-thunk';\nimport {Action, configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\n\nimport {TGlobalSliceState, globalSlice} from './global';\nimport {TEditorSliceState, editorSliceReducer} from './editor';\nimport {TComponentsSliceState, componentsSlice} from './components';\nimport {TPagesSliceState, pagesSlice} from './pages';\n\nexport type TThunkResult<R> = ThunkAction<R, TGlobalState, undefined, Action>;\n\nexport type TGlobalState = {\n  global: TGlobalSliceState;\n  editor: TEditorSliceState;\n  pages: TPagesSliceState;\n  components: TComponentsSliceState;\n};\n\nconst middleware = getDefaultMiddleware<TGlobalState, {serializableCheck: false}>({\n  serializableCheck: false,\n})\n\nexport const store = configureStore<TGlobalState>({\n  reducer: combineReducers({\n    global: globalSlice.reducer,\n    editor: editorSliceReducer,\n    pages: pagesSlice.reducer,\n    components: componentsSlice.reducer,\n  }),\n  middleware: middleware as any,\n});\n","import {TPage} from '../types';\n\nlet id = 10;\nexport const pages: TPage[] = [\n  {\n    id: 'index',\n    name: 'index',\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '5%',\n        backgroundColor: '#0FFFF0',\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'shadow',\n            width: '100%',\n            height: '350px'\n          },\n        ],\n      },\n    }\n  },\n  {\n    id: 'about',\n    name: 'about',\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '5%',\n        backgroundColor: '#0FFFF0',\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'shadow',\n            width: '100%',\n            height: '350px'\n          },\n        ],\n      },\n    }\n  },\n];\n","import {TComponent} from '../types';\n\nlet id = 0;\nexport const components: TComponent[] = [\n  {\n    id: 'foo',\n    name: 'foo',\n    place: {width: '500px'},\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        display: 'flex',\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {},\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'text',\n                  text: 'hhh',\n                }\n              ]\n            },\n          },\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {\n              minWidth: '300px',\n            },\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'slot',\n                  code: 'a-slot',\n                  width: '100%',\n                  height: '100px',\n                }\n              ]\n            }\n          }\n        ]\n      }\n    }\n  },\n  {\n    id: 'bar',\n    name: 'bar',\n    place: {width: '500px'},\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        display: 'flex',\n        borderWidth: '1px',\n        borderStyle: 'dotted',\n        borderColor: 'black'\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {\n              minWidth: '350px',\n            },\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'slot',\n                  code: 'b-slot',\n                  width: '100%',\n                  height: '100px',\n                }\n              ]\n            }\n          },\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {},\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'text',\n                  text: 'sss efhd ert rete a',\n                }\n              ]\n            },\n          },\n        ]\n      }\n    }\n  },\n  {\n    id: 'tree',\n    name: 'qwe',\n    place: {width: '500px'},\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '15px',\n        backgroundColor: '#ff0000'\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'text',\n            text: 'hoba'\n          }\n        ]\n      }\n    }\n  }\n];\n","import Dexie from 'dexie';\nimport {TComponent, TDocumentIdentifier, TPage, TTagNode, TTemplateNode} from '../types';\nimport {pages} from '../data/pages';\nimport {components} from '../data/components';\n\nclass DataStore extends Dexie {\n  pages: Dexie.Table<TPage, string>;\n  components: Dexie.Table<TComponent, string>;\n\n  constructor() {\n    super('DataStore');\n\n    this.version(1).stores({\n      pages: '&id,name,template',\n      components: '&id,name,template',\n    });\n\n    this.on('populate', () => {\n      pages.forEach(page => this.pages.add(page));\n      components.forEach(comp => this.components.add(comp));\n    });\n\n    this.pages = this.table('pages');\n    this.components = this.table('components');\n  }\n}\n\nexport const dataStore = new DataStore();\n\ntype TR = {\n  template: TTagNode<TTemplateNode>\n}\nexport async function loadDocument(doc: TDocumentIdentifier): Promise<TR> {\n  if (doc.type === 'page') {\n    const page = await dataStore.pages.get(doc.id) as TPage;\n    return {\n      template: page.template,\n    }\n  }\n  else {\n    const component = await dataStore.components.get(doc.id) as TComponent;\n    return {\n      template: component.template,\n    }\n  }\n}\n","import {TThunkResult} from '../../store/store';\nimport {batch} from 'react-redux';\nimport {TTemplateSliceState, templateSlice} from '../../store/editor/templateSlice';\nimport {TVarsSliceState, varsSlice} from '../../store/editor/varsSlice';\n\nexport function applyEditor(template: TTemplateSliceState, vars: Partial<TVarsSliceState>): TThunkResult<void> {\n  return (dispatch, getState) => {\n    batch(() => {\n      dispatch(templateSlice.actions.replaceTemplate(template));\n      dispatch(varsSlice.actions.merge(vars));\n    })\n  }\n}\n","import {omit} from 'lodash';\nimport {Action} from 'redux';\nimport {batch} from 'react-redux';\n\nimport {dataStore, loadDocument} from '../modules/dataStore';\nimport {areValuesEqual, isSameActivity} from '../helpers/common';\nimport {TThunkResult} from '../store/store';\nimport {TActivity, globalSlice, TTab} from '../store/global';\nimport {pagesSlice} from '../store/pages';\nimport {componentsSlice} from '../store/components';\nimport {createVarsSliceState} from '../store/editor/varsSlice';\nimport {applyEditor} from './editor';\nimport {TDocumentIdentifier} from '../types';\n\nconst {setActivity, addNewTab, updateTab, removeTab} = globalSlice.actions;\n\nexport function changeActivity(activity: TActivity): TThunkResult<void> {\n  return async (dispatch, getState) => {\n    const {global: {tabs, activity: prevActivity}, editor: {template, vars}} = getState();\n    if (isSameActivity(activity, prevActivity)) {\n      return;\n    }\n\n    const actions: Array<Action | TThunkResult<void>> = [];\n\n    if (prevActivity.type === 'editor') {\n      actions.push(updateTab([prevActivity.document, {\n        template,\n        vars: omit(vars, ['refs', 'blinkAreas'])\n      }]))\n    }\n\n    if (activity.type === 'editor') {\n      const existTab = tabs.find(t => areValuesEqual(t.document, activity.document));\n      if (existTab) {\n        actions.push(applyEditor(existTab.template, existTab.vars));\n      } else {\n        const page = await loadDocument(activity.document);\n        const newVars = createVarsSliceState({document: activity.document});\n        actions.push(applyEditor(page.template, newVars));\n        actions.push(addNewTab({\n          document: activity.document,\n          template: page.template,\n          vars: {}\n        }));\n      }\n    }\n    actions.push(setActivity(activity));\n    batch(() => actions.forEach(dispatch))\n  };\n}\n\nexport function saveDocument(document: TDocumentIdentifier): TThunkResult<void> {\n  return async (dispatch, getState) => {\n    const tab = getState().global.tabs.find(t => areValuesEqual(t.document, document)) as TTab;\n    if (tab.document.type === 'page') {\n      await dataStore.pages.update(tab.document.id, {\n        template: tab.template\n      })\n      await dispatch(loadPages())\n    }\n    if (tab.document.type === 'component') {\n      await dataStore.components.update(tab.document.id, {\n        template: tab.template\n      })\n      await dispatch(loadComponents())\n    }\n    batch(() => {\n      dispatch(setActivity({type: 'pages'}));\n      dispatch(removeTab(tab.document));\n    })\n  }\n}\n\nexport function loadPages() :TThunkResult<void> {\n  return async (dispatch, getState) => {\n    const pages = await dataStore.pages.toArray();\n    dispatch(pagesSlice.actions.setPages(pages));\n  }\n}\n\nexport function loadComponents() :TThunkResult<void> {\n  return async (dispatch, getState) => {\n    const components = await dataStore.components.toArray();\n    dispatch(componentsSlice.actions.setComponents(components));\n  }\n}\n","import styles from './Floats.module.css';\nimport React from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TBlinkArea, varsSlice} from '../../store/editor/varsSlice';\nimport {blinkAreasSelector} from '../../store/editor'\n\nconst FloatBox = React.memo(function ({area}: {area: TBlinkArea}) {\n  const dispatch = useDispatch();\n  return (\n    <div\n      className={styles.blinkBox}\n      style={{\n        animationIterationCount: area.count,\n        left: area.box.left - 1,\n        top: area.box.top - 1,\n        width: area.box.width,\n        height: area.box.height\n      }}\n      onAnimationEnd={() => dispatch(varsSlice.actions.removeBlinkArea(area.uid))}\n    />\n  )\n})\n\nexport const Floats = React.memo(function FloatsBase(): any {\n  const areas = useSelector(blinkAreasSelector);\n  return areas.map(area => <FloatBox area={area} key={area.uid} />)\n});\n","import {batch} from 'react-redux';\n\nimport {TComponentNode, TTagNode, TTemplateNode, TPath, TSlotNode, TComponent} from '../../types';\nimport {TThunkResult} from '../../store/store';\nimport {TActiveShadowContent} from '../../store/editor/varsSlice';\nimport {\n  createComponentNode,\n  createShadowNode,\n  createTagNode,\n  createSlotNode,\n  filterTree,\n  getMaxId,\n  getNodeByPath\n} from '../../helpers/tree'\n\nimport {templateSlice} from '../../store/editor/templateSlice';\nimport {varsSlice} from '../../store/editor/varsSlice';\nimport {splitArrLastEl} from '../../helpers/common';\n\nexport function activateNode(path: TPath): TThunkResult<void>  {\n  return (dispatch, getState) => {\n    batch(() => {\n      const {editor: {template}} = getState();\n      const node = getNodeByPath(template, path);\n      dispatch(varsSlice.actions.setActiveNode(path));\n      if (node.type === 'shadow') {\n        dispatch(varsSlice.actions.setActiveShadowContent());\n      }\n    })\n  };\n}\n\nexport function activateShadowContent(slotContent: TActiveShadowContent): TThunkResult<void> {\n  return (dispatch, getState) => {\n    dispatch(varsSlice.actions.setActiveShadowContent(slotContent));\n  };\n}\n\nexport function applyShadowContent(): TThunkResult<void> {\n  return (dispatch, getState) => {\n    const {editor: {vars, template}, components} = getState();\n    const activeNodePath = vars.activeNodePath as TPath;\n    const activeShadowContent = vars.activeShadowContent as TActiveShadowContent;\n    const id = getMaxId(template) + 1;\n    let newNode: TSlotNode | TTagNode<TTemplateNode> | TComponentNode<TTemplateNode>;\n    if (activeShadowContent[0] === 'slot') {\n      newNode = createSlotNode(id);\n    }\n    if (activeShadowContent[0] === 'tag') {\n      newNode = createTagNode(id, activeShadowContent[1]);\n    }\n    if (activeShadowContent[0] === 'component') {\n      const comp = components.components.find(c => c.id === activeShadowContent[1]) as TComponent;\n      newNode = createComponentNode(id, comp)\n    }\n    batch(() => {\n      dispatch(templateSlice.actions.replaceNode([activeNodePath, newNode]));\n      dispatch(varsSlice.actions.setActiveShadowContent());\n    });\n  };\n}\n\nexport function removeNode(path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    batch(() => {\n      dispatch(varsSlice.actions.setActiveNode());\n      dispatch(templateSlice.actions.removeNode(path));\n    })\n  }\n}\n\nexport function addNewShadow(path: TPath, addIdx: number): TThunkResult<void> {\n  return (dispatch, getState) => {\n    const {editor: {template}, components} = getState();\n    const [parentPath, [slotName]] = splitArrLastEl(path);\n    const parentNode = getNodeByPath(template, parentPath);\n    const id = getMaxId(template) + 1;\n    let newNode;\n    if (parentNode.type === 'tag') {\n      newNode = createShadowNode(id, '100%', '50px');\n    }\n    if (parentNode.type === 'component') {\n      const comp = components.components.find(c => c.id === parentNode.component) as TComponent;\n      const [slot] = filterTree<TSlotNode>(comp.template, node => node.type === 'slot' && node.code === slotName);\n      newNode = createShadowNode(id, slot.width, slot.height);\n    }\n    if (newNode) {\n      dispatch(templateSlice.actions.insertNode([path, newNode, addIdx]));\n    }\n  }\n}\n\nexport function blinkNode(path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    const {editor: {template, vars: {iframeCoords, refs}}} = getState();\n    const node = getNodeByPath(template, path)\n    const rect = refs.get(node.id).getBoundingClientRect();\n    const box = {\n      left: rect.left + iframeCoords.left,\n      top: rect.top + iframeCoords.top,\n      width: rect.width,\n      height: rect.height\n    }\n    dispatch(varsSlice.actions.addBlinkArea({ count: .75, box }))\n  }\n}\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Menu, MenuItem} from '@blueprintjs/core';\nimport {TPath, TTemplateNode} from '../../types';\nimport {activateNode, addNewShadow, removeNode} from '../../procedures/editor/template';\nimport {useNodeByPath} from '../../store/editor';\n\nfunction slotSubmenu(dispatch: any, title: string, path: TPath, slotName: string, slotChildren: TTemplateNode[]) {\n  return (\n    <MenuItem icon=\"add\" text={title} key={slotName}>\n      <MenuItem\n        icon=\"add-row-top\"\n        text=\"Begin\"\n        onClick={() => dispatch(addNewShadow([...path, [slotName, 0]], 0))}\n      />\n      <MenuItem\n        icon=\"add-row-bottom\"\n        text=\"End\"\n        onClick={() => dispatch(addNewShadow([...path, [slotName, slotChildren.length]], 0))}\n      />\n    </MenuItem>\n  )\n}\n\ntype TNodeContextMenuProps = {path: TPath; useSelect?: boolean}\nexport function NodeContextMenu({path, useSelect}: TNodeContextMenuProps) {\n  const dispatch = useDispatch()\n  const node = useNodeByPath(path);\n\n  if (!node) {\n    return null;\n  }\n\n  return (\n    <Menu>\n      {useSelect && (\n        <MenuItem icon=\"select\" text=\"Select it\" onClick={() => dispatch(activateNode(path))} />\n      )}\n      {path.length > 0 && (\n        <>\n          <MenuItem icon=\"double-chevron-up\" text=\"Add before\" onClick={() => dispatch(addNewShadow(path, 0))} />\n          <MenuItem icon=\"double-chevron-down\" text=\"Add after\" onClick={() => dispatch(addNewShadow(path, 1))} />\n        </>\n      )}\n      {node.type === 'tag' && slotSubmenu(dispatch, 'Add element', path, 'children', node.slots.children)}\n      {node.type === 'component' && (\n        Object.keys(node.slots).map(slotName => slotSubmenu(dispatch, `Add element to ${slotName}`, path, slotName, node.slots[slotName]))\n      )}\n      {path.length > 0 && (\n        <MenuItem icon=\"delete\" text=\"Delete\" >\n          <MenuItem icon=\"thumbs-up\" text=\"Yes\" onClick={() => dispatch(removeNode(path))} />\n        </MenuItem>\n      )}\n    </Menu>\n  );\n}\n","import React, {useEffect} from 'react'\nimport {useSelector, useStore, Provider} from 'react-redux';\nimport {ContextMenu} from '@blueprintjs/core';\nimport {varsSlice} from '../store/editor/varsSlice';\nimport {contextMenuSelector} from '../store/editor'\nimport {TGlobalState} from '../store/store';\nimport {NodeContextMenu} from './node-context-menu/NodeContextMenu';\n\n\nexport function ContextHoc() {\n  const store = useStore<TGlobalState>();\n  const contextMenu = useSelector(contextMenuSelector);\n  useEffect(() => {\n    if (contextMenu) {\n      Promise.resolve().then(() => {\n        const {left, top, path} = contextMenu;\n        ContextMenu.show(\n          <Provider store={store}>\n            <NodeContextMenu path={path} />\n          </Provider>,\n          {left, top},\n          () => { store.dispatch(varsSlice.actions.setContextMenu())}\n        );\n      })\n    }\n  }, [contextMenu, store])\n  return null;\n}\n","import styles from './Frame.module.css'\nimport React, {RefObject, PureComponent} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport type {Dispatch} from 'redux';\nimport {varsSlice} from '../../store/editor/varsSlice';\nimport {rectToBox} from '../../helpers/common';\n\nexport type FrameProps = {\n  head: React.ReactNode,\n  content: React.ReactNode,\n  dispatch: Dispatch<any>\n}\n\nconst initialContent = '<!DOCTYPE html><html><head></head><body class=\"_frame_body\"></body></html>';\n\nexport default class Frame extends PureComponent<FrameProps, {}> {\n  private _isMounted: boolean = false;\n  private _isFirst: boolean = true;\n  private node: RefObject<HTMLIFrameElement> = React.createRef();\n  private resizeObserver: ResizeObserver = new ResizeObserver(() => { this.dispatchCoords(); });\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const doc = this.getDoc();\n    if (doc?.readyState === 'complete') {\n      this.handleLoad();\n    } else {\n      this.node.current?.addEventListener('load', this.handleLoad);\n    }\n    this.resizeObserver.observe(this.node.current as HTMLIFrameElement);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n\n    this.node.current?.removeEventListener('load', this.handleLoad);\n\n    this.resizeObserver.disconnect();\n  }\n\n  dispatchCoords() {\n    const rect = (this.node.current as HTMLIFrameElement).getBoundingClientRect();\n    this.props.dispatch(varsSlice.actions.setIframeCoords(rectToBox(rect)))\n  }\n\n  getDoc(): Document | null {\n    return this.node.current?.contentDocument || null;\n  }\n\n  handleLoad = () => {\n    this.forceUpdate();\n  };\n\n  renderFrameContents() {\n    if (!this._isMounted) {\n      return null;\n    }\n\n    const doc = this.getDoc();\n    if (!doc) {\n      return null;\n    }\n\n    if (this._isFirst) {\n      doc.open('text/html', 'replace');\n      doc.write(initialContent);\n      doc.close();\n      this._isFirst = false;\n    }\n\n    return [\n      ReactDOM.createPortal(this.props.head, doc.head),\n      ReactDOM.createPortal(this.props.content, doc.body)\n    ];\n  }\n\n  render() {\n    return (\n      <iframe ref={this.node} title=\"huitle\" className={styles.frame}>\n        {this.renderFrameContents()}\n      </iframe>\n    );\n  }\n}\n","import styles from './SelectComponent.module.css';\nimport React, {useMemo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\nimport {Callout, Card, Tooltip} from '@blueprintjs/core';\n\nimport {TGlobalState} from '../../store/store';\nimport {TComponent, TTemplateNode} from '../../types';\nimport {TActiveShadowContent, TVarsSliceState} from '../../store/editor/varsSlice';\n\nimport {activateShadowContent, applyShadowContent} from '../../procedures/editor/template';\n\nconst selector = ({editor: {vars}}: TGlobalState): TActiveShadowContent | undefined => vars.activeShadowContent\nfunction Item({item}: {item: TActiveShadowContent}) {\n  const dispatch = useDispatch();\n  const activeShadowContent = useSelector(selector);\n  const isActive = activeShadowContent?.[0] === item[0] && activeShadowContent[1] === item[1];\n  const tooltip = isActive ? 'Click to select' : 'Click to preview';\n\n  return (\n    <Tooltip content={tooltip}>\n      <Card\n        interactive\n        elevation={isActive ? 4 : 0}\n        className={styles.itemCard}\n        onClick={() => {\n          if (isActive) {\n            dispatch(applyShadowContent())\n          } else {\n            dispatch(activateShadowContent(item))\n          }\n        }}\n      >\n        <Callout className={cn(styles.itemInner, isActive && 'bp3-intent-success')}>\n          {item[0] === 'tag' ? '<' : '%'}{item[1]}\n        </Callout>\n      </Card>\n    </Tooltip>\n  )\n}\n\nconst slots : Array<TActiveShadowContent> = [['slot']];\nconst tags: Array<TActiveShadowContent> = [['tag', 'div']];\n\ntype TSelectComponentProps = {node: TTemplateNode};\nexport function SelectComponent({ node }: TSelectComponentProps) {\n  const components = useSelector<TGlobalState, TComponent[]>(state => state.components.components);\n  const vars = useSelector<TGlobalState, TVarsSliceState>(state => state.editor.vars);\n\n  const items: Array<TActiveShadowContent> = useMemo(() => {\n    const isComp = vars.document.type === 'component';\n    const comps = isComp ? components.filter(c => c.id !== vars.document.id) : components;\n    return [\n      ...(isComp ? slots : []),\n      ...tags,\n      ...comps.map((c): TActiveShadowContent => (['component', c.id]))\n    ]\n  }, [components, vars.document]);\n  return (\n    <>\n      <div className={styles.grid}>\n        {items.map(i => <Item item={i} key={i.join(':')} />)}\n      </div>\n      <pre>\n        {JSON.stringify(node, null, 2)}\n      </pre>\n    </>\n  );\n}\n","import {sortBy, keyBy} from 'lodash';\n\nexport type TCssPropValueTypeColor = {type: 'color', defaults: () => string};\nexport type TCssPropValueTypeLength = {type: 'length', defaults: () => string};\nexport type TCssPropValueTypeVariant = {type: 'variant', variants: string[], defaults: () => string};\nexport type TCssPropValueType = {name: string} & (\n  TCssPropValueTypeColor\n  | TCssPropValueTypeLength\n  | TCssPropValueTypeVariant);\n\nexport const allCssProps: TCssPropValueType[] = [\n  {name: 'color', type: 'color', defaults: () => '#000000'},\n  {name: 'backgroundColor', type: 'color', defaults: () => '#FFFFFF'},\n  {name: 'borderColor', type: 'color', defaults: () => '#000000'},\n  {name: 'borderStyle', type: 'variant', variants: ['solid', 'dotted', 'double'], defaults: () => 'solid'},\n  {name: 'borderWidth', type: 'length', defaults: () => '1px'},\n  {name: 'minWidth', type: 'length', defaults: () => '100%'},\n  {name: 'padding', type: 'length', defaults: () => '0px'},\n  {name: 'margin', type: 'length', defaults: () => '0px'},\n  {name: 'display', type: 'variant', variants: ['block', 'flex'], defaults: () => 'block'}\n];\nexport const allCssPropsKeyed: {[name: string]: TCssPropValueType} = keyBy(allCssProps, 'name');\nexport const allCssPropsNames: string[] = sortBy(Object.keys(allCssPropsKeyed));\nexport const allCssPropsLength: number = allCssPropsNames.length;\n","import styles from './length.module.css';\nimport React from 'react';\nimport {Button, Menu, MenuItem, NumericInput, Popover, Position} from '@blueprintjs/core';\n\nconst units = ['px', '%'];\n\nexport function length({value, onChange}: {value: string, onChange: any}) {\n  const num = (value.match(/^-?\\d+/) as RegExpMatchArray)[0];\n  const unit = value.substring(num.length);\n  const permissionsMenu = (\n    <Popover\n      content={\n        <Menu className={styles.menu}>\n          {units.map(curUnit => (\n              <MenuItem\n                text={curUnit}\n                key={curUnit}\n                active={curUnit === unit}\n                onClick={() => onChange(`${num}${curUnit}`)}\n              />\n            )\n          )}\n        </Menu>\n      }\n      position={Position.BOTTOM_RIGHT}\n    >\n      <Button minimal={true} rightIcon=\"caret-down\">\n        {unit}\n      </Button>\n    </Popover>\n  );\n\n  return (\n    <NumericInput\n      value={num}\n      onValueChange={newNum => onChange(`${newNum}${unit}`)}\n      rightElement={permissionsMenu}\n    />\n  );\n}\n","import React from 'react';\nimport { Select, ItemRenderer } from '@blueprintjs/select';\nimport {Button, MenuItem} from '@blueprintjs/core';\nimport type {TCssPropValueTypeVariant} from '../../../modules/css/css';\n\nconst VariantSelect = Select.ofType<string>();\n\nconst renderItem: ItemRenderer<string> = (value, { handleClick, modifiers }) => {\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={value}\n      onClick={handleClick}\n      text={value}\n    />\n  );\n};\n\nexport function variant({value, onChange, type}: {value: any, onChange: any, type: TCssPropValueTypeVariant}) {\n  return (\n    <VariantSelect\n      activeItem={value}\n      items={type.variants}\n      itemRenderer={renderItem}\n      onItemSelect={onChange}\n      filterable={false}\n    >\n      <Button\n        text={value}\n        rightIcon=\"caret-down\"\n      />\n    </VariantSelect>\n  )\n}\n","import {color} from './color';\nimport {length} from './length';\nimport {variant} from './variant';\n\nexport default {\n  color,\n  length,\n  variant\n}\n","import React from 'react';\n\nexport function color({value, onChange}: {value: any, onChange: any}) {\n  return (\n    <input type=\"color\"\n           value={value}\n           onChange={e => onChange(e.target.value)}\n    />\n  )\n}\n","import styles from './Prop.module.css';\nimport React, {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {TPath} from '../../types';\nimport {templateSlice} from '../../store/editor/templateSlice';\nimport {allCssPropsKeyed} from '../../modules/css/css';\nimport editors from './editor';\n\ntype TPropProps = {propName: string, value: any, path: TPath};\nexport const Prop: React.FC<TPropProps> = React.memo(function Prop({propName, value, path}: TPropProps) {\n  const dispatch = useDispatch();\n  const onChange = useCallback(\n    (newVal: any) => dispatch(templateSlice.actions.setStyleProp([path, propName, newVal])),\n    [dispatch, path, propName]\n  );\n  const type = allCssPropsKeyed[propName];\n  return (\n    <>\n      <div className={styles.cell}>{propName}</div>\n      <div className={styles.cell}>\n        {React.createElement(((editors as any)[type.type]), {value, onChange, type})}\n      </div>\n    </>\n  )\n});\n","import styles from './CSSPropsEditor.module.css';\nimport React, {useMemo} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {sortBy, difference} from 'lodash';\nimport { MenuItem, Button, Card } from '@blueprintjs/core';\nimport { Select, ItemRenderer, ItemPredicate} from '@blueprintjs/select';\nimport {templateSlice} from '../../store/editor/templateSlice';\nimport type {TPath, TTagNode, TTemplateNode} from '../../types';\nimport {allCssPropsNames, allCssPropsKeyed} from '../../modules/css/css';\nimport {Prop} from './Prop';\n\nconst renderItem: ItemRenderer<string> = (propName, { handleClick, modifiers }) => {\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={propName}\n      onClick={handleClick}\n      text={propName}\n    />\n  );\n};\n\nconst filterItem: ItemPredicate<string> = (search, value) => {\n  if (search.length > 0) {\n    return value.startsWith(search);\n  }\n  return true\n};\n\nconst PropSelect = Select.ofType<string>();\n\ntype TPropsListProps = {tag: TTagNode<TTemplateNode>, path: TPath};\nfunction PropsList({tag, path}: TPropsListProps) {\n  const dispatch = useDispatch();\n  const usedProps = useMemo(() => sortBy(Object.keys(tag.style)), [tag.style]);\n  const propsToAdd = useMemo(() => difference(allCssPropsNames, usedProps), [usedProps])\n  return (\n    <Card>\n      <div className={styles.allProps}>\n        {usedProps.map(pn => <Prop propName={pn} value={tag.style[pn]} path={path} key={pn} />)}\n      </div>\n      {propsToAdd.length > 0 && (\n        <div className={styles.propSelect}>\n          <PropSelect\n            activeItem={null}\n            items={propsToAdd}\n            itemRenderer={renderItem}\n            itemPredicate={filterItem}\n            onItemSelect={propName => {\n              const value = allCssPropsKeyed[propName].defaults()\n              dispatch(templateSlice.actions.setStyleProp([path, propName, value]))\n            }}\n          >\n            <Button text=\"Add new prop\" rightIcon=\"caret-down\" />\n          </PropSelect>\n        </div>\n      )}\n    </Card>\n  )\n}\n\ntype TNodeProps = {node: TTemplateNode, path: TPath};\nexport function CSSPropsEditor({node, path}: TNodeProps) {\n  return (\n    <>\n      {node.type === 'tag' && <PropsList tag={node} path={path} />}\n    </>\n  )\n}\n","import React from 'react';\nimport {TPath, TTemplateNode} from '../../types';\nimport {CSSPropsEditor} from '../css-props-editor/CSSPropsEditor';\n\ntype TTagPropsProps = {node: TTemplateNode, path: TPath};\nexport function TagProps({node, path}: TTagPropsProps) {\n  return (\n    <div>\n      <CSSPropsEditor node={node} path={path} />\n    </div>\n  )\n}\n","import styles from './RightSpace.module.css';\nimport React from 'react';\nimport {shallowEqual, useSelector} from 'react-redux';\n\nimport {TPath, TTemplateNode} from '../../types';\nimport {TGlobalState} from '../../store/store';\nimport {getNodeByPath} from '../../helpers/tree';\nimport {templateRootSelector} from '../../store/editor';\nimport {SelectComponent} from './SelectComponent';\nimport {TagProps} from './TagProps';\n\ntype TNodePathSelectorResult = {path?: TPath, node?: TTemplateNode}\nconst nodePathSelector = (x: TGlobalState): TNodePathSelectorResult => {\n  const path = x.editor.vars.activeNodePath;\n  let node;\n  if (path) {\n    node = getNodeByPath(x.editor.template, path);\n  }\n  return {path, node}\n};\nexport function RightSpace() {\n  const {path, node} = useSelector<TGlobalState, TNodePathSelectorResult>(nodePathSelector, shallowEqual);\n  const tree = useSelector(templateRootSelector)\n  let children;\n  switch (node?.type) {\n    case 'shadow':\n      children = <SelectComponent node={node} />\n      break;\n    case 'slot':\n      children = <div>slot {node.code}</div>\n      break;\n    case 'text':\n      children = <div>text &amp;{node.text}&amp;</div>\n      break;\n    case 'tag':\n      children = <TagProps node={node} path={path as TPath} />\n      break;\n    case 'component':\n      children = <div>component {node.component}</div>\n      break;\n    default:\n      children = <div>Select something</div>\n  }\n\n  return (\n    <div className={styles.rightSpace}>\n      {children}\n      <div style={{height: 300}}>\n        <pre>{JSON.stringify(tree, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\n\n","import React, {useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {map, kebabCase} from 'lodash';\nimport {TGlobalState} from '../store/store';\nimport {TComponent, TTagNode, TTemplateNode} from '../types';\nimport {filterTree} from '../helpers/tree';\n\ntype THeadStyle = {\n  id: string | number;\n  style: string;\n}\n\nfunction createCssClass(className: string, styles: any) {\n  return `.${className} {${map(styles, (v, n) => `${kebabCase(n)}: ${v};`).join('\\n')}}`;\n}\n\nfunction getHeadStyle(): THeadStyle[] {\n  const styles: string[] = [];\n  const styleSheets = document.styleSheets;\n  for (let i = 0; i < styleSheets.length; ++i) {\n    const ss: CSSStyleSheet = styleSheets[i] as CSSStyleSheet;\n    for (let j = 0; j < ss.cssRules.length; ++j) {\n      const cssRule = ss.cssRules[j];\n      if (cssRule instanceof CSSStyleRule) {\n        if (cssRule.selectorText.startsWith('._frame')) {\n          styles.push(cssRule.cssText);\n        }\n      }\n      if (cssRule instanceof CSSKeyframesRule) {\n        if (cssRule.name.startsWith('_frame')) {\n          styles.push(cssRule.cssText)\n        }\n      }\n    }\n  }\n\n  return [{\n    id: 'parent',\n    style: styles.join('\\n')\n  }];\n}\n\nconst ArrayStyles = React.memo(({styles}: {styles: THeadStyle[]}) => {\n  return <>{styles.map(s => <style type=\"text/css\" key={s.id}>{s.style}</style>)}</>;\n});\n\nconst filterCb = (node: TTemplateNode) => node.type === 'tag' && Object.keys(node.style).length > 0;\nconst TreeStyles = React.memo((props: {tree: TTemplateNode, prefix: string}) => {\n  const tags = filterTree<TTagNode<TTemplateNode>>(props.tree, filterCb);\n  const styles: THeadStyle[] = tags.map(tag => ({\n    id: tag.id,\n    style: createCssClass(`${props.prefix}${tag.id}`, tag.style)\n  }));\n  return <ArrayStyles styles={styles} />;\n});\n\nconst componentsSelector: (x: TGlobalState) => TComponent[] = x => x.components.components;\nconst ComponentsStyles = React.memo(() => {\n  const components = useSelector(componentsSelector);\n  return <>{components.map(comp => <TreeStyles tree={comp.template} prefix={`c${comp.id}_`} key={comp.id} />)}</>\n});\n\nexport const HeadStyles: React.FC<{tree: TTemplateNode}> = ({tree}) => {\n  const parentStyles = useMemo(getHeadStyle, []);\n  return (\n    <>\n      <ArrayStyles styles={parentStyles} />\n      <TreeStyles tree={tree} prefix=\"t\" />\n      <ComponentsStyles />\n    </>\n  );\n};\n","import React from 'react';\n\nfunction isDocument(el: any): el is HTMLDocument {\n  const doc = el?.defaultView?.HTMLDocument;\n  if (doc) {\n    return el instanceof doc;\n  }\n  return false;\n}\n\nfunction findDocument({parentNode}: any): HTMLDocument {\n  if (isDocument(parentNode)) {\n    return parentNode;\n  }\n  return findDocument(parentNode);\n}\n\nfunction replaceCaret(el: HTMLElement) {\n  const document = findDocument(el);\n  const target = document.createTextNode('');\n  el.appendChild(target);\n  const isTargetFocused = document.activeElement === el;\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    const sel = document.defaultView?.getSelection();\n    if (sel) {\n      const range = document.createRange();\n      range.setStart(target, target.nodeValue.length);\n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n    if (el instanceof HTMLElement) el.focus();\n  }\n}\n\nexport class ContentEditable extends React.Component<Props> {\n  lastHtml: string = this.props.html;\n\n  getEl = () => this.props.attrs.ref.current\n\n  render() {\n    const { attrs, html, ...props } = this.props;\n\n    return React.createElement(\n      'span',\n      {\n        dangerouslySetInnerHTML: { __html: html },\n        onInput: this.emitChange,\n        onBlur: this.props.onBlur || this.emitChange,\n        onKeyUp: this.props.onKeyUp || this.emitChange,\n        onKeyDown: this.props.onKeyDown || this.emitChange,\n        contentEditable: true,\n        ...props,\n        ...attrs\n      });\n  }\n\n  shouldComponentUpdate(nextProps: Props): boolean {\n    const { props } = this;\n    const el = this.getEl();\n\n    if (!el) return true;\n\n    if (nextProps.html !== el.innerHTML) {\n      return true;\n    }\n\n    return props.className !== nextProps.className || props.attrs !== nextProps.attrs;\n  }\n\n  componentDidUpdate() {\n    const el = this.getEl();\n    if (!el) return;\n\n    if (this.props.html !== el.innerHTML) {\n      el.innerHTML = this.props.html;\n    }\n    this.lastHtml = this.props.html;\n    replaceCaret(el);\n  }\n\n  emitChange = (originalEvt: React.SyntheticEvent<any>) => {\n    const el = this.getEl();\n    if (!el) return;\n\n    const html = el.innerHTML;\n    if (this.props.onChange && html !== this.lastHtml) {\n      this.props.onChange(html);\n    }\n    this.lastHtml = html;\n  }\n}\n\nexport type ContentEditableEvent = string;\ntype Modify<T, R> = Pick<T, Exclude<keyof T, keyof R>> & R;\ntype SpanProps = Modify<JSX.IntrinsicElements[\"span\"], { onChange: ((event: ContentEditableEvent) => void) }>;\n\nexport interface Props extends SpanProps {\n  html: string,\n  className?: string,\n  attrs?: any,\n}\n","import React, {MouseEvent, useContext, useMemo, useRef} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  TSlotContent,\n  TComponentNode,\n  TSlotNode,\n  TTagNode,\n  TTemplateNode,\n  TTextNode,\n  TPath,\n  TComponent,\n  TShadowNode,\n} from '../../types';\nimport {ContentEditable} from '../elements/ContentEditable';\nimport {arePathsEqual} from '../../helpers/common';\nimport {createComponentNode, createTagNode} from '../../helpers/tree';\nimport {TGlobalState} from '../../store/store';\nimport {TVarsSliceState} from '../../store/editor/varsSlice';\nimport {useRefStore} from '../../store/editor';\nimport {onNodeClick, onNodeContextMenu, onNodeOut, onNodeOver} from '../../procedures/nodesHandlers';\nimport {templateSlice} from '../../store/editor/templateSlice';\n\nconst rootPath: TPath = [];\n\ntype TSlotContextType = [\n  {[key: string]: TSlotContent<TTemplateNode>},\n  TPath,\n  boolean,\n  string\n]\nconst SlotContext = React.createContext<TSlotContextType>([{}, [], false, '']);\nconst SlotActiveContext = React.createContext(true);\nconst TemplateActiveContext = React.createContext(false);\n\ntype TEmptyShadowActivatorProps = {width: string, height: string, selected: boolean, attrs?: any};\nfunction EmptyShadowActivator({width, height, selected, attrs}: TEmptyShadowActivatorProps) {\n  const slotActive = useContext(SlotActiveContext);\n\n  let className = '_frame_slot';\n  if (slotActive) {\n    className += selected ? ' _frame_slot_waiting' : ' _frame_slot_active';\n  }\n\n  return (\n    <div\n      style={{width, height}}\n      className={className}\n      {...attrs}\n    />\n  );\n}\n\ntype TEmptyShadowTagProps = {name: string, attrs?: any};\nfunction EmptyShadowTag({name, attrs}: TEmptyShadowTagProps) {\n  const node = createTagNode(-100, name);\n  return (\n    <SlotActiveContext.Provider value={false}>\n      <MKTagBrick node={node}\n                  path={[['_', 0]]}\n                  classPrefix={'tmp'}\n                  attrs={attrs}\n      />\n    </SlotActiveContext.Provider>\n  )\n}\n\ntype TEmptyShadowComponentProps = {componentId: string, attrs?: any};\nfunction EmptyShadowComponent({componentId, attrs}: TEmptyShadowComponentProps) {\n  const component = useSelector<TGlobalState, TComponent>(state => state.components.components.find(c => c.id === componentId) as TComponent);\n  const node = createComponentNode(-1000, component)\n  return (\n    <SlotActiveContext.Provider value={false}>\n      <MKComponentBrick node={node}\n                        path={[['_', 0]]}\n                        classPrefix=\"x\"\n                        attrs={attrs}\n      />\n    </SlotActiveContext.Provider>\n  )\n}\n\ntype TSlotContentProps = {path: TPath, content: TTemplateNode[], slotName: string, classPrefix: string};\nfunction SlotContent({path, content, slotName, classPrefix}: TSlotContentProps) {\n  const paths: TPath[] = useMemo(\n    () => content.map((c, idx) => [...path, [slotName, idx]]),\n    [content, path, slotName]\n  );\n  return <>{content.map((sn, idx) => (\n    <MKBrickSelector key={sn.id} node={sn} path={paths[idx]} classPrefix={classPrefix} />\n  ))}</>;\n}\n\ntype TMKTextBrickProps = {node: TTextNode, attrs?: any, path: TPath};\nfunction MKTextBrick({node, attrs, path}: TMKTextBrickProps) {\n  const dispatch = useDispatch();\n  if (attrs) {\n    return <ContentEditable\n      attrs={attrs}\n      html={node.text}\n      onChange={(txt) => dispatch(templateSlice.actions.setText([path, txt]))}\n    />\n  }\n  return <>{node.text}</>;\n}\n\ntype TMKTagBrickProps = {node: TTagNode<TTemplateNode>, path: TPath, classPrefix: string, attrs?: any};\nfunction MKTagBrick({node, path, classPrefix, attrs}: TMKTagBrickProps) {\n  const templateActive = useContext(TemplateActiveContext);\n  return React.createElement(\n    node.tag,\n    {\n      className: `${classPrefix}${node.id}`,\n      ...attrs,\n    },\n    <TemplateActiveContext.Provider value={templateActive}>\n      <SlotContent path={path} slotName=\"children\" content={node.slots.children} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  );\n}\n\ntype TMKComponentBrickProps = {node: TComponentNode<TTemplateNode>, path: TPath, classPrefix: string, attrs?: any};\nfunction MKComponentBrick({node, path, attrs, classPrefix}: TMKComponentBrickProps) {\n  const component = useSelector<TGlobalState, TComponent>(state => state.components.components.find(c => c.id === node.component) as TComponent);\n  const templateActive = useContext(TemplateActiveContext);\n  const ctx: TSlotContextType = useMemo(\n    () => [node.slots, path, templateActive, classPrefix],\n    [node.slots, path, templateActive, classPrefix]\n  );\n  return (\n    <SlotContext.Provider value={ctx}>\n      <MKTemplate node={component.template} active={false} classPrefix={`c${component.id}_`} attrs={attrs} />\n    </SlotContext.Provider>\n  );\n}\n\ntype TMKSlotBrickProps = {node: TSlotNode; attrs?: any};\n\nfunction MKSlotBrickActive({node}: TMKSlotBrickProps) {\n  const [slots, path, active, classPrefix] = useContext(SlotContext);\n  const slotName = node.code;\n  const content = slots[slotName];\n  return (\n    <TemplateActiveContext.Provider value={active}>\n      <SlotContent path={path} slotName={slotName} content={content} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  )\n}\n\nfunction MKSlotBrick({node, attrs}: TMKSlotBrickProps) {\n  const templateActive = useContext(TemplateActiveContext);\n  const isComponentMode = useSelector<TGlobalState, boolean>(x => x.editor.vars.document.type === 'component');\n  if (isComponentMode && templateActive) {\n    return (\n      <div\n        className=\"_frame_slot_component\"\n        style={{width: node.width, height: node.height}}\n        {...attrs}\n      />\n    );\n  }\n  return <MKSlotBrickActive node={node} />\n}\n\ntype TMKShadowBrickProps = {node: TShadowNode, path: TPath, attrs?: any};\nfunction MKShadowBrick({node, path, attrs}: TMKShadowBrickProps) {\n  const {activeNodePath, activeShadowContent} = useSelector<TGlobalState, TVarsSliceState>(x => x.editor.vars)\n  const isMyPath = !!activeNodePath && arePathsEqual(activeNodePath, path);\n\n  let children;\n  if (activeShadowContent && isMyPath) {\n    if (activeShadowContent[0] === 'slot') {\n      children = <div\n        className=\"_frame_slot_component\"\n        style={{width: '100px', height: '100px'}}\n      />\n    }\n    if (activeShadowContent[0] === 'tag') {\n      children = <EmptyShadowTag name={activeShadowContent[1]} attrs={attrs} />\n    }\n    if (activeShadowContent[0] === 'component') {\n      children = <EmptyShadowComponent componentId={activeShadowContent[1]} attrs={attrs} />;\n    }\n  } else {\n    children = <EmptyShadowActivator width={node.width} height={node.height} selected={isMyPath} attrs={attrs} />\n  }\n  return (\n    <TemplateActiveContext.Provider value={false}>\n      {children}\n    </TemplateActiveContext.Provider>\n  )\n}\n\nconst bricks: {\n  text: React.FC<TMKTextBrickProps>;\n  tag: React.FC<TMKTagBrickProps>;\n  component: React.FC<TMKComponentBrickProps>;\n  slot: React.FC<TMKSlotBrickProps>;\n  shadow: React.FC<TMKShadowBrickProps>\n} = {\n  text: MKTextBrick,\n  tag: MKTagBrick,\n  component: MKComponentBrick,\n  slot: MKSlotBrick,\n  shadow: MKShadowBrick,\n};\n\ntype TMKBrickSelectorProps = {node: TTemplateNode, path: TPath, attrs?: any, classPrefix: string};\nconst MKBrickSelector: React.FC<TMKBrickSelectorProps> = React.memo(function MKBrickSelector(\n  {node, path, classPrefix, attrs: parentAttrs}\n) {\n  const dispatch = useDispatch();\n  const nodeRef = useRef<HTMLDivElement>();\n  const templateActive = useContext(TemplateActiveContext);\n  useRefStore(node.id, templateActive, nodeRef)\n  const attrs = useMemo(() => {\n    if (templateActive) {\n      return {\n        ref: nodeRef,\n        onClick(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeClick(e, node, path));\n        },\n        onContextMenu(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeContextMenu(e, node, path))\n        },\n        onMouseOver(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeOver(e, node, path));\n        },\n        onMouseOut(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeOut(e, node, path));\n        },\n      };\n    }\n    return parentAttrs\n  }, [dispatch, templateActive, path, node, nodeRef, parentAttrs]);\n  return React.createElement(bricks[node.type] as any, {node, path, classPrefix, attrs});\n});\n\ntype TMKTemplateProps = {node: TTemplateNode, active: boolean, classPrefix: string, attrs?: any};\nfunction MKTemplate({node, active, classPrefix, attrs}: TMKTemplateProps) {\n  return (\n    <TemplateActiveContext.Provider value={active}>\n      <MKBrickSelector key=\"t-root\" node={node} path={rootPath} attrs={attrs} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  );\n}\n\nfunction MFrameBase({tree}: {tree: TTemplateNode}) {\n  return <MKTemplate node={tree} active={true} classPrefix=\"t\" />\n}\n\nexport default React.memo<{tree: TTemplateNode}>(MFrameBase);\n","import {MouseEvent} from 'react';\nimport {batch} from 'react-redux';\nimport {TPath, TTemplateNode} from '../types';\nimport {TThunkResult} from '../store/store';\nimport {varsSlice} from '../store/editor/varsSlice';\nimport {activateNode, blinkNode} from './editor/template';\n\nexport function onNodeClick(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    dispatch(activateNode(path))\n  };\n}\n\nexport function onNodeContextMenu(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(varsSlice.actions.setContextMenu({\n      path,\n      left: e.clientX,\n      top: e.clientY\n    }))\n  }\n}\n\nexport function onNodeOver(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    batch(() => {\n      dispatch(varsSlice.actions.setHoverNode(path));\n      dispatch(blinkNode(path));\n    });\n  };\n}\nexport function onNodeOut(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    dispatch(varsSlice.actions.setHoverNode())\n  };\n}\n","import styles from './Bottom.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Breadcrumbs, IBreadcrumbProps, Breadcrumb, PopoverInteractionKind, Popover } from '@blueprintjs/core';\n\nimport {TPath, TTemplateNode} from '../../types';\nimport {TGlobalState} from '../../store/store';\nimport {TTemplateSliceState} from '../../store/editor/templateSlice';\n\nimport {getBranch} from '../../helpers/tree';\nimport {areArraysEqual} from '../../helpers/common';\nimport {blinkNode} from '../../procedures/editor/template';\n\nimport { NodeContextMenu } from '../node-context-menu/NodeContextMenu';\n\nconst icons = {\n  shadow: 'new-object',\n  component: 'box',\n  tag: 'double-chevron-left',\n};\n\nfunction nodeToString(node: TTemplateNode): string {\n  if (node.type === 'tag') {\n    return `<${node.tag} />`;\n  }\n  if (node.type === 'component') {\n    return node.component;\n  }\n  return node.type;\n}\n\ninterface IBottomBreadcrumbsProps extends IBreadcrumbProps {\n  path: TPath;\n}\n\nfunction BreadCrumbWrapper({item, path}: {item: IBreadcrumbProps; path: TPath}) {\n  const dispatch = useDispatch();\n  return (\n    <Popover\n      content={<NodeContextMenu path={path} useSelect={true} />}\n      interactionKind={PopoverInteractionKind.CLICK}\n    >\n      <span onMouseOver={() => dispatch(blinkNode(path))}>\n        <Breadcrumb {...item} className={styles.breadCrumb} />\n      </span>\n    </Popover>\n  );\n}\n\nconst renderBreadcrumb = ({path, ...item}: IBottomBreadcrumbsProps) => {\n  return (\n    <BreadCrumbWrapper item={item} path={path} />\n  )\n};\n\n\ntype TSelectorResult = [TTemplateSliceState, TPath];\nconst emptyPath: TPath = [];\nconst selector = ({editor}: TGlobalState): TSelectorResult => [editor.template, editor.vars.activeNodePath || emptyPath];\nexport function Bottom() {\n  const [tree, path] = useSelector<TGlobalState, TSelectorResult>(selector, areArraysEqual);\n\n  const nodes = getBranch(tree, path);\n  const items: IBottomBreadcrumbsProps[] = nodes.map((node, idx) => {\n    const curPath = path.slice(0, idx);\n    return {\n      text: nodeToString(node),\n      icon: (icons as any)[node.type],\n      path: curPath\n    }\n  })\n  return (\n    <div className={styles.bottom}>\n      <Breadcrumbs\n        items={items}\n        breadcrumbRenderer={renderBreadcrumb as any}\n        currentBreadcrumbRenderer={renderBreadcrumb as any}\n      />\n    </div>\n  );\n}\n","import styles from './Editor.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Frame from '../frame/Frame';\nimport {templateRootSelector} from '../../store/editor';\n\nimport {RightSpace} from '../props/RightSpace';\n\nimport {HeadStyles} from '../HeadStyles';\n\nimport FrameTree from './EditArea';\nimport {Bottom} from './Bottom';\n\nexport function Editor() {\n  const tree = useSelector(templateRootSelector);\n  const dispatch = useDispatch();\n  return (\n    <div className={styles.content}>\n      <div className={styles.center}>\n        <Frame\n          head={<HeadStyles tree={tree} />}\n          content={<FrameTree tree={tree} />}\n          dispatch={dispatch}\n        />\n        <Bottom />\n      </div>\n      <div className={styles.right}>\n        <RightSpace />\n      </div>\n    </div>\n  )\n}\n","import styles from './Components.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TGlobalState} from '../store/store';\nimport {TComponent} from '../types';\nimport {Card} from '@blueprintjs/core';\nimport {changeActivity} from '../procedures/main';\n\nexport function Components() {\n  const dispatch = useDispatch();\n  const components = useSelector<TGlobalState, TComponent[]>(state => state.components.components);\n  return (\n    <div className={styles.grid}>\n      {components.map(components => (\n        <Card\n          interactive\n          className={styles.itemCard}\n          key={components.id}\n          onClick={() => {\n            dispatch(changeActivity({\n              type: 'editor',\n              document: {\n                type: 'component',\n                id: components.id\n              }\n            }))\n          }}\n        >\n          {components.name}\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import styles from './Pages.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Card} from '@blueprintjs/core';\nimport {TGlobalState} from '../store/store';\nimport {TPage} from '../types';\nimport {changeActivity} from '../procedures/main';\n\nexport function Pages() {\n  const dispatch = useDispatch();\n  const pages = useSelector<TGlobalState, TPage[]>(state => state.pages.pages);\n  return (\n    <div className={styles.grid}>\n      {pages.map(page => (\n        <Card\n          interactive\n          className={styles.itemCard}\n          key={page.id}\n          onClick={() => {\n            dispatch(changeActivity({\n              type: 'editor',\n              document: {\n                type: 'page',\n                id: page.id\n              }\n            }))\n          }}\n        >\n          {page.name}\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import styles from './App.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Navbar, Button} from '@blueprintjs/core';\n\nimport {areArraysEqual, areValuesEqual} from '../helpers/common';\nimport {TGlobalState} from '../store/store';\nimport {TActivity, TTab, activitySelector, tabsSelector} from '../store/global';\nimport {changeActivity, saveDocument} from '../procedures/main';\n\nimport {Floats} from './editor/Floats';\nimport {ContextHoc} from './ContextMenus';\n\nimport {Editor} from './editor/Editor';\nimport {Components} from './Components';\nimport {Pages} from './Pages';\n\nfunction SwitchActivity({activity}: {activity: TActivity}) {\n  switch (activity.type) {\n    case 'components':\n      return <Components />;\n    case 'pages':\n      return <Pages />;\n    case 'editor':\n      return <Editor />;\n  }\n}\n\ntype TSelector = (state: TGlobalState) => [TActivity, TTab[]];\nconst selector: TSelector = state => [activitySelector(state), tabsSelector(state)];\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const [activity, tabs] = useSelector(selector, areArraysEqual);\n  return (\n    <>\n      <div className={`bp3-dark ${styles.app}`}>\n        <Navbar>\n          <Navbar.Group>\n            <Navbar.Heading>Mastkloot</Navbar.Heading>\n            <Navbar.Divider />\n            <Button\n              active={'pages' === activity.type}\n              minimal\n              icon=\"document\"\n              text=\"Pages\"\n              onClick={() => dispatch(changeActivity({type: 'pages'}))}\n            />\n            <Button\n              active={'components' === activity.type}\n              minimal\n              icon=\"box\"\n              text=\"Components\"\n              onClick={() => dispatch(changeActivity({type: 'components'}))}\n            />\n            <Navbar.Divider />\n            {tabs.map(({document}) => (\n              <Button\n                minimal\n                icon=\"database\"\n                rightIcon=\"cross\"\n                active={'editor' === activity.type && areValuesEqual(activity.document, document)}\n                onClick={(e: any) => {\n                  if(e.target.parentNode.dataset.icon === 'cross') {\n                    dispatch(saveDocument(document))\n                  } else {\n                    dispatch(changeActivity({\n                      type: 'editor',\n                      document\n                    }));\n                  }\n                }}\n                key={`${document.type}:${document.id}`}\n              >\n                {document.id}\n              </Button>\n            ))}\n          </Navbar.Group>\n        </Navbar>\n        <SwitchActivity activity={activity} />\n      </div>\n      <ContextHoc/>\n      <Floats/>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process.env.PUBLIC_URL as string),\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport './frame.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport {store} from './store/store';\nimport App from './components/App';\nimport {loadComponents, loadPages} from './procedures/main';\n\nimport * as serviceWorker from './serviceWorker';\n\nstore.dispatch(loadPages());\nstore.dispatch(loadComponents());\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Editor_content__1Hy63\",\"center\":\"Editor_center__12CWH\",\"right\":\"Editor_right__2DHew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"SelectComponent_grid__2M5R2\",\"itemCard\":\"SelectComponent_itemCard__29_BG\",\"itemInner\":\"SelectComponent_itemInner__wDi-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allProps\":\"CSSPropsEditor_allProps__304z7\",\"propSelect\":\"CSSPropsEditor_propSelect__3nU8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Prop_cell__381Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottom\":\"Bottom_bottom__3almA\",\"breadCrumb\":\"Bottom_breadCrumb__13MV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Components_grid__2bbJK\",\"itemCard\":\"Components_itemCard__Hy6rg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Pages_grid__2KMC7\",\"itemCard\":\"Pages_itemCard__1xHP8\"};"],"sourceRoot":""}