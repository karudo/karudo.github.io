{"version":3,"sources":["components/App.module.css","components/editor/right/RightSpace.module.css","components/css-props-editor/editor/length.module.css","components/editor/frame/Frame.module.css","helpers/common.ts","store/global.ts","helpers/tree.ts","store/editor/varsSlice.ts","store/editor/templateSlice.ts","store/editor/index.ts","store/components.ts","store/pages.ts","store/store.ts","data/pages.ts","data/components.ts","modules/dataStore.ts","procedures/editor/index.ts","procedures/main.ts","modules/css/css.ts","components/css-props-editor/editor/length.tsx","components/css-props-editor/editor/variant.tsx","components/css-props-editor/editor/index.ts","components/css-props-editor/editor/color.tsx","components/css-props-editor/Prop.tsx","components/css-props-editor/CSSPropsEditor.tsx","components/editor/right/TagProps.tsx","components/editor/right/RightSpace.tsx","components/HeadStyles.tsx","components/elements/ContentEditable.tsx","procedures/editor/template.ts","components/editor/EditArea.tsx","procedures/nodesHandlers.ts","components/editor/node-context-menu/NodeContextMenu.tsx","components/editor/Bottom.tsx","components/editor/Floats.tsx","components/editor/ContextMenus.tsx","components/editor/frame/Frame.tsx","components/editor/select-component/SelectComponent.tsx","components/editor/Editor.tsx","components/Components.tsx","components/Pages.tsx","components/App.tsx","serviceWorker.ts","index.tsx","components/editor/Editor.module.css","components/editor/select-component/SelectComponent.module.css","components/css-props-editor/CSSPropsEditor.module.css","components/css-props-editor/Prop.module.css","components/editor/Bottom.module.css","components/editor/Floats.module.css","components/Components.module.css","components/Pages.module.css"],"names":["module","exports","areValuesEqual","a","b","isEqual","areArraysEqual","a1","a2","length","i","splitArrLastEl","arr","lm1","slice","MapProxy","map","Map","k","this","get","v","set","clear","delete","rectToBox","rect","left","top","right","bottom","width","height","globalSlice","createSlice","name","initialState","activity","type","tabs","reducers","setActivity","state","payload","addNewTab","push","updateTab","doc","update","filter","t","document","forEach","Object","assign","removeTab","activitySelector","global","tabsSelector","StopWalkSymbol","Symbol","walkTreeDeep","node","cb","path","slotName","slots","content","len","filterTree","tree","result","getNodeByPath","pi","getMaxId","ids","mapTree","n","id","max","createShadowNode","createTagNode","shadow","tag","style","children","createComponentNode","component","slotsEntries","template","slot","code","fromEntries","props","createVarsSliceState","activeNodePath","undefined","activeShadowContent","hoverNode","blinkAreas","mainCoords","iframeCoords","contextMenu","refs","varsSlice","merge","setIframeCoords","setMainCoords","setActiveShadowContent","setActiveNode","setHoverNode","setContextMenu","addBlinkArea","uid","box","removeBlinkArea","idx","findIndex","splice","removeAllBlinkAreas","templateSliceState","templateSlice","replaceTemplate","replaceNode","parentPath","index","insertNode","addIdx","removeNode","setStyleProp","prop","value","setText","text","editorSliceReducer","combineReducers","reducer","vars","templateRootSelector","editor","activeNodePathSelector","mainCoordsSelector","iframeCoordsSelector","contextMenuSelector","refStoreSelector","componentsSlice","components","setComponents","pagesSlice","pages","setPages","middleware","getDefaultMiddleware","serializableCheck","store","configureStore","padding","backgroundColor","place","display","minWidth","borderWidth","borderStyle","borderColor","dataStore","version","stores","on","page","add","comp","table","Dexie","loadDocument","applyEditor","dispatch","getState","batch","actions","changeActivity","prevActivity","pick","existTab","find","newVars","loadPages","toArray","loadComponents","allCssPropsKeyed","keyBy","defaults","variants","allCssPropsNames","sortBy","keys","units","VariantSelect","Select","ofType","renderItem","handleClick","modifiers","active","disabled","key","onClick","color","onChange","e","target","num","match","unit","substring","permissionsMenu","className","styles","menu","curUnit","position","Position","BOTTOM_RIGHT","minimal","rightIcon","onValueChange","newNum","rightElement","variant","activeItem","items","itemRenderer","onItemSelect","filterable","Prop","React","memo","propName","useDispatch","useCallback","newVal","cell","createElement","editors","filterItem","search","startsWith","PropSelect","PropsList","usedProps","useMemo","propsToAdd","difference","allProps","pn","propSelect","itemPredicate","CSSPropsEditor","TagProps","RightSpace","np","useSelector","shallowEqual","rightSpace","JSON","stringify","createCssClass","kebabCase","join","getHeadStyle","styleSheets","ss","j","cssRules","cssRule","CSSStyleRule","selectorText","cssText","CSSKeyframesRule","ArrayStyles","s","filterCb","TreeStyles","prefix","componentsSelector","x","ComponentsStyles","HeadStyles","parentStyles","replaceCaret","el","findDocument","parentNode","defaultView","HTMLDocument","isDocument","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","focus","ContentEditable","lastHtml","html","getEl","attrs","ref","current","emitChange","originalEvt","innerHTML","dangerouslySetInnerHTML","__html","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","nextProps","Component","activateNode","addNewShadow","newNode","c","blinkNode","getBoundingClientRect","setTimeout","rootPath","SlotContext","createContext","SlotActiveContext","TemplateActiveContext","EmptyShadowActivator","selected","useContext","EmptyShadowTag","Provider","MKTagBrick","classPrefix","EmptyShadowComponent","componentId","MKComponentBrick","SlotContent","paths","sn","templateActive","ctx","MKTemplate","MKSlotBrickActive","bricks","txt","isMyPath","areArraysEqualCb","MKBrickSelector","parentAttrs","nodeRef","useRef","nodeId","refStore","useLayoutEffect","useRefStore","stopPropagation","onNodeClick","onContextMenu","preventDefault","clientX","clientY","onNodeContextMenu","onMouseOver","onNodeOver","onMouseOut","onNodeOut","FrameTree","console","log","slotSubmenu","title","slotChildren","icon","NodeContextMenu","useSelect","useNodeByPath","icons","nodeToString","BreadCrumbWrapper","item","interactionKind","PopoverInteractionKind","CLICK","breadCrumb","renderBreadcrumb","emptyPath","selector","Bottom","getBranch","curPath","breadcrumbRenderer","currentBreadcrumbRenderer","FloatBox","FloatsBase","areas","selectedBox","element","area","blinkBox","Floats","ContextMenus","useStore","useEffect","Promise","resolve","then","ContextMenu","show","Frame","createRef","resizeObserver","ResizeObserver","dispatchCoords","handleLoad","getDoc","body","classList","forceUpdate","handleMouseLeave","readyState","addEventListener","observe","removeEventListener","disconnect","contentDocument","ReactDOM","createPortal","head","cn","frame","onMouseLeave","renderFrameContents","PureComponent","Item","isActive","tooltip","interactive","elevation","itemCard","slotContent","createSlotNode","itemInner","tags","SelectComponent","isComp","comps","grid","SlidePanel","slidePanel","editorSelector","Editor","shadowActive","scale","center","frameMini","Components","Pages","SwitchActivity","App","app","Group","Heading","Divider","dataset","tab","saveDocument","Boolean","window","location","hostname","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a73b650e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightSpace\":\"RightSpace_rightSpace__1vYAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"length_menu__1k0_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"Frame_frame__7r65g\"};","import {isEqual} from 'lodash';\nimport {TBoxCoords, TPath} from '../types';\nimport {TActivity} from '../store/global';\n\nexport function areValuesEqual<T>(a: T, b: T): boolean {\n  return isEqual(a, b);\n}\n\nexport function areArraysEqual<T>(a1: T[], a2: T[]): boolean {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; ++i) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function areArraysEqualCb<T>(a1: T[], a2: T[], cb: (i1: T, i2: T) => boolean): boolean {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; ++i) {\n    if (!cb(a1[i], a2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function arePathsEqual(p1: TPath, p2: TPath): boolean {\n return areArraysEqualCb(p1, p2, areArraysEqual)\n}\n\nexport function splitArrLastEl<T>(arr: T[]): [T[], T] {\n  const lm1 = arr.length - 1;\n  return [arr.slice(0, lm1), arr[lm1]];\n}\n\nexport class MapProxy<K, V> {\n  private map: Map<K, V> = new Map<K, V>();\n  get (k: K): V {\n    return this.map.get(k) as V;\n  }\n  set (k: K, v: V) {\n    this.map.set(k, v);\n    return this;\n  }\n  clear () {\n    this.map.clear();\n  }\n  delete (k: K) {\n    return this.map.delete(k);\n  }\n}\n\nexport function rectToBox(rect: DOMRect): TBoxCoords {\n  return {\n    left: rect.left,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\nexport function isSameActivity(a: TActivity, b: TActivity): boolean {\n  if (a.type === 'editor' && b.type === 'editor') {\n    return areValuesEqual(a.document, b.document);\n  }\n  return areValuesEqual(a, b);\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {TGlobalState} from './store';\nimport {TDocumentIdentifier, TTemplateNode} from '../types';\nimport {TVarsSliceState} from './editor/varsSlice';\nimport {areValuesEqual} from '../helpers/common';\n\nexport type TActivityComponents = {type: 'components'};\nexport type TActivityPages = {type: 'pages'};\nexport type TActivityEditor = {\n  type: 'editor';\n  document: TDocumentIdentifier;\n};\n\nexport type TActivity = TActivityComponents | TActivityPages | TActivityEditor;\n\nexport type TTab = {\n  document: TDocumentIdentifier;\n  vars: Partial<TVarsSliceState>;\n  template: TTemplateNode;\n};\n\nexport type TGlobalSliceState = {\n  activity: TActivity;\n  tabs: TTab[];\n};\n\nexport const globalSliceState: TGlobalSliceState = {\n  activity: {\n    type: 'components'\n  },\n  tabs: []\n}\n\nexport const globalSlice = createSlice({\n  name: 'global',\n  initialState: globalSliceState,\n  reducers: {\n    setActivity(state, {payload}: PayloadAction<TActivity>) {\n      state.activity = payload;\n    },\n    addNewTab(state, {payload}: PayloadAction<TTab>) {\n      state.tabs.push(payload);\n    },\n    updateTab(state, {payload: [doc, update]}: PayloadAction<[TDocumentIdentifier, Partial<TTab>]>) {\n      state.tabs.filter(t => areValuesEqual(doc, t.document)).forEach(t => {\n        Object.assign(t, update);\n      });\n    },\n    removeTab(state, {payload}: PayloadAction<TDocumentIdentifier>) {\n      state.tabs = state.tabs.filter(t => !areValuesEqual(payload, t.document))\n    }\n  }\n});\n\nexport const activitySelector = (state: TGlobalState): TActivity => state.global.activity;\nexport const tabsSelector = (state: TGlobalState): TTab[] => state.global.tabs;\n","import {max} from 'lodash';\n\nimport {\n  TTemplateNode,\n  TComponentNode,\n  TPath,\n  TSlotContent,\n  TBaseNode,\n  TTagNode,\n  TShadowNode,\n  TComponent, TSlotNode\n} from '../types'\n\nexport const StopWalkSymbol = Symbol();\n\nexport function walkTreeDeep(node: TTemplateNode, cb: (node: TTemplateNode, path?: TPath) => any, path: TPath = []) {\n  if (cb(node, path) === StopWalkSymbol) {\n    return;\n  }\n\n  if (node.type === 'component' || node.type === 'tag') {\n    for (const slotName in node.slots) {\n      const content = (node.slots as {[key: string]: TSlotContent<TTemplateNode>})[slotName];\n      const len = content.length;\n      for (let k = 0; k < len; ++k) {\n        walkTreeDeep(content[k], cb, [...path, [slotName, k]]);\n      }\n    }\n  }\n}\n\nexport function mapTree<T extends TBaseNode = TTemplateNode, R = any>(tree: TTemplateNode, cb: (node: TTemplateNode) => R): R[] {\n  const result: R[] = [];\n  walkTreeDeep(tree, node => result.push(cb(node)));\n  return result\n}\n\nexport function filterTree<T extends TBaseNode = TTemplateNode>(tree: TTemplateNode, cb: (node: TTemplateNode) => boolean): T[] {\n  const result: T[] = [];\n  walkTreeDeep(tree, (node => {\n    if (cb(node)) {\n      result.push(node as any);\n    }\n  }));\n  return result\n}\n\nexport function getNodeByPath(node: TTemplateNode, path: TPath): TTemplateNode {\n  for (let i = 0; i < path.length; ++i) {\n    const pi = path[i];\n    node = (node as TComponentNode<TTemplateNode>).slots[pi[0]][pi[1]];\n  }\n  return node;\n}\n\nexport function getMaxId(node: TTemplateNode): number {\n  const ids = mapTree<TTemplateNode, number>(node, n => n.id);\n  return max(ids) || 0;\n}\n\nexport function getBranch(node: TTemplateNode, path: TPath): TTemplateNode[] {\n  const result = [node];\n  for (let i = 0; i < path.length; ++i) {\n    const pi = path[i];\n    node = (node as TComponentNode<TTemplateNode>).slots[pi[0]][pi[1]];\n    result.push(node);\n  }\n  return result;\n}\n\nexport function createShadowNode(id: number, width: string, height: string): TShadowNode {\n  return {\n    id: id++,\n    type: 'shadow',\n    width,\n    height\n  }\n}\n\nexport function createSlotNode(id: number): TSlotNode {\n  return {\n    id,\n    type: 'slot',\n    code: `code${id}`,\n    width: '100px',\n    height: '100px'\n  };\n}\n\nexport function createTagNode(id: number, name: string): TTagNode<TTemplateNode> {\n  const shadow = createShadowNode(id++, '100%', '50px');\n  return {id: id++, type: 'tag', tag: name, style: {}, slots: {children: [shadow]}};\n}\n\nexport function createComponentNode(id: number, component: TComponent): TComponentNode<TTemplateNode> {\n  const componentSlots = filterTree<TSlotNode>(component.template, node => node.type === 'slot');\n  const slotsEntries = componentSlots.map(slot => [slot.code, [createShadowNode(id++, slot.width, slot.height)]])\n  const slots: {[key: string]: TSlotContent<TTemplateNode>} = Object.fromEntries(slotsEntries);\n  return {id: id++, type: 'component', component: component.id, props: {}, slots}\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TBoxCoords, TDocumentIdentifier, TPath} from '../../types';\nimport {MapProxy} from '../../helpers/common';\n\nexport type TActiveShadowContent = ['tag', string] | ['component', string] | ['slot'];\n\nexport type THoverNodePath = TPath\n\nexport type TBlinkArea = {\n  uid: number,\n  box: TBoxCoords\n}\n\nexport type TContextMenuState = {\n  left: number;\n  top: number;\n  path: TPath;\n}\n\nexport type TVarsSliceState = {\n  document: TDocumentIdentifier;\n  activeNodePath?: TPath;\n  activeShadowContent?: TActiveShadowContent;\n  hoverNode?: THoverNodePath;\n  blinkAreas: TBlinkArea[];\n  mainCoords: TBoxCoords;\n  iframeCoords: TBoxCoords;\n  contextMenu?: TContextMenuState;\n  refs: MapProxy<number | string, HTMLDivElement>;\n}\n\nexport function createVarsSliceState(state?: Partial<TVarsSliceState>): TVarsSliceState {\n  return {\n    document: {type: 'component', id: ''},\n    activeNodePath: undefined,\n    activeShadowContent: undefined,\n    hoverNode: undefined,\n    blinkAreas: [],\n    mainCoords: {left: 0, top: 0, right: 0, bottom: 0, width: 0, height: 0},\n    iframeCoords: {left: 0, top: 0, right: 0, bottom: 0, width: 0, height: 0},\n    contextMenu: undefined,\n    refs: new MapProxy(),\n    ...state,\n  };\n}\n\nexport const varsSlice = createSlice({\n  name: 'vars',\n  initialState: createVarsSliceState(),\n  reducers: {\n    merge(state, {payload}: PayloadAction<Partial<TVarsSliceState>>) {\n      Object.assign(state, payload);\n    },\n    setIframeCoords(state, {payload}: PayloadAction<TBoxCoords>) {\n      state.iframeCoords = payload;\n    },\n    setMainCoords(state, {payload}: PayloadAction<TBoxCoords>) {\n      state.mainCoords = payload;\n    },\n    setActiveShadowContent(state, {payload}: PayloadAction<TActiveShadowContent | undefined>) {\n      state.activeShadowContent = payload;\n    },\n    setActiveNode(state, {payload}: PayloadAction<TPath | undefined>) {\n      state.activeNodePath = payload;\n    },\n    setHoverNode(state, {payload}: PayloadAction<THoverNodePath | undefined>) {\n      state.hoverNode = payload;\n    },\n    setContextMenu(state, {payload}: PayloadAction<TContextMenuState | undefined>) {\n      state.contextMenu = payload;\n    },\n    addBlinkArea(state, {payload: [uid, box]}: PayloadAction<[number, TBoxCoords]>) {\n      state.blinkAreas = [{\n        uid,\n        box\n      }];\n    },\n    removeBlinkArea(state, {payload}: PayloadAction<number>) {\n      const idx = state.blinkAreas.findIndex(b => b.uid === payload)\n      if (idx > -1) {\n        state.blinkAreas.splice(idx, 1);\n      }\n    },\n    removeAllBlinkAreas(state) {\n      state.blinkAreas = [];\n    }\n  },\n});\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TComponentNode, TTagNode, TTemplateNode, TPath, TTextNode} from '../../types';\nimport {getNodeByPath} from '../../helpers/tree';\nimport {splitArrLastEl} from '../../helpers/common';\n\nexport type TTemplateSliceState = TTemplateNode;\n\nlet id = 10;\nexport const templateSliceState: TTemplateSliceState = {\n  id: id++,\n  type: 'tag',\n  tag: 'div',\n  style: {\n  },\n  slots: {\n    children: [],\n  },\n};\n\nexport const templateSlice = createSlice({\n  name: 'template',\n  initialState: templateSliceState as TTemplateNode,\n  reducers: {\n    replaceTemplate(state, {payload}: PayloadAction<TTemplateSliceState>) {\n      return payload;\n    },\n    replaceNode(state, {payload: [path, node]}: PayloadAction<[TPath, TTemplateNode]>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(path);\n      const parentNode = getNodeByPath(state, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName][index] = node;\n    },\n    insertNode(state, {payload: [path, node, addIdx]}: PayloadAction<[TPath, TTemplateNode, number]>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(path);\n      const parentNode = getNodeByPath(state, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName].splice(index + addIdx, 0, node);\n    },\n    removeNode(state, {payload}: PayloadAction<TPath>) {\n      const [parentPath, [slotName, index]] = splitArrLastEl(payload);\n      const parentNode = getNodeByPath(state, parentPath) as TComponentNode<TTemplateNode>;\n      parentNode.slots[slotName].splice(index, 1);\n    },\n    setStyleProp(state, {payload: [path, prop, value]}: PayloadAction<[TPath, string, string]>) {\n      const targetNode = getNodeByPath(state, path) as TTagNode<TTemplateNode>;\n      targetNode.style[prop] = value;\n    },\n    setText(state, {payload: [path, value]}: PayloadAction<[TPath, string]>) {\n      const targetNode = getNodeByPath(state, path) as TTextNode;\n      targetNode.text = value;\n    },\n  }\n});\n\n\n","import {MutableRefObject, useLayoutEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {combineReducers} from '@reduxjs/toolkit';\n\nimport {TGlobalState} from '../store';\nimport {TBoxCoords, TPath, TTemplateNode} from '../../types';\nimport {getNodeByPath} from '../../helpers/tree';\n\nimport {TBlinkArea, TContextMenuState, TVarsSliceState, varsSlice} from './varsSlice';\nimport {TTemplateSliceState, templateSlice} from './templateSlice';\n\nexport type TEditorSliceState = {\n  template: TTemplateSliceState;\n  vars: TVarsSliceState;\n};\n\nexport const editorSliceReducer = combineReducers<TEditorSliceState>({\n  template: templateSlice.reducer,\n  vars: varsSlice.reducer,\n});\n\nexport const editorSelector = (state: TGlobalState): TEditorSliceState => state.editor;\n\nexport const templateRootSelector = (state: TGlobalState): TTemplateNode => state.editor.template;\nexport const useNodeByPath = (path: TPath) => {\n  return useSelector((state: TGlobalState) => getNodeByPath(state.editor.template, path));\n}\n\nexport type TActiveNodePathSelectorResult = {path: TPath, node: TTemplateNode} | undefined;\nexport const activeNodePathSelector = (state: TGlobalState): TActiveNodePathSelectorResult => {\n  const path = state.editor.vars.activeNodePath;\n  if (path) {\n    const node = getNodeByPath(state.editor.template, path);\n    return {path, node};\n  }\n};\n\nexport const mainCoordsSelector = ({editor}: TGlobalState): TBoxCoords => editor.vars.mainCoords;\nexport const iframeCoordsSelector = ({editor}: TGlobalState): TBoxCoords => editor.vars.iframeCoords;\nexport const blinkAreasSelector = ({editor}: TGlobalState): TBlinkArea[] => editor.vars.blinkAreas;\nexport const contextMenuSelector = ({editor}: TGlobalState): TContextMenuState | undefined => editor.vars.contextMenu;\nexport const refStoreSelector = ({editor}: TGlobalState): TVarsSliceState['refs'] => editor.vars.refs;\n\nexport function useRefStore(nodeId: number, active: boolean, nodeRef: MutableRefObject<HTMLDivElement | undefined>) {\n  const refStore = useSelector(refStoreSelector);\n  useLayoutEffect(() => {\n    if (active) {\n      refStore.set(nodeId, nodeRef.current as HTMLDivElement);\n      return () => {\n        refStore.delete(nodeId)\n      }\n    }\n  }, [nodeId, active, nodeRef, refStore]);\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TComponent} from '../types';\n\nexport type TComponentsSliceState = {\n  components: TComponent[];\n};\n\nconst pagesInitialState: TComponentsSliceState = {\n  components: []\n}\n\nexport const componentsSlice = createSlice({\n  name: 'components',\n  initialState: pagesInitialState,\n  reducers: {\n    setComponents(state, {payload}: PayloadAction<TComponent[]>) {\n      state.components = payload;\n    }\n  }\n});\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {TPage} from '../types';\n\nexport type TPagesSliceState = {\n  pages: TPage[];\n};\n\nconst pagesInitialState: TPagesSliceState = {\n  pages: []\n}\n\nexport const pagesSlice = createSlice({\n  name: 'pages',\n  initialState: pagesInitialState,\n  reducers: {\n    setPages(state, {payload}: PayloadAction<TPage[]>) {\n      state.pages = payload;\n    }\n  }\n});\n","import {combineReducers} from 'redux';\nimport {ThunkAction} from 'redux-thunk';\nimport {Action, configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\n\nimport {TGlobalSliceState, globalSlice} from './global';\nimport {TEditorSliceState, editorSliceReducer} from './editor';\nimport {TComponentsSliceState, componentsSlice} from './components';\nimport {TPagesSliceState, pagesSlice} from './pages';\n\nexport type TThunkResult<R = void> = ThunkAction<R, TGlobalState, undefined, Action>;\n\nexport type TGlobalState = {\n  global: TGlobalSliceState;\n  editor: TEditorSliceState;\n  pages: TPagesSliceState;\n  components: TComponentsSliceState;\n};\n\nconst middleware = getDefaultMiddleware<TGlobalState, {serializableCheck: false}>({\n  serializableCheck: false,\n})\n\nexport const store = configureStore<TGlobalState>({\n  reducer: combineReducers({\n    global: globalSlice.reducer,\n    editor: editorSliceReducer,\n    pages: pagesSlice.reducer,\n    components: componentsSlice.reducer,\n  }),\n  middleware: middleware as any,\n});\n","import {TPage} from '../types';\n\nlet id = 10;\nexport const pages: TPage[] = [\n  {\n    id: 'index',\n    name: 'index',\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '5%',\n        backgroundColor: '#0FFFF0',\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'shadow',\n            width: '100%',\n            height: '350px'\n          },\n        ],\n      },\n    }\n  },\n  {\n    id: 'about',\n    name: 'about',\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '5%',\n        backgroundColor: '#0FFFF0',\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'shadow',\n            width: '100%',\n            height: '350px'\n          },\n        ],\n      },\n    }\n  },\n];\n","import {TComponent} from '../types';\n\nlet id = 0;\nexport const components: TComponent[] = [\n  {\n    id: 'foo',\n    name: 'foo',\n    place: {width: '500px'},\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        display: 'flex',\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {},\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'text',\n                  text: 'hhh',\n                }\n              ]\n            },\n          },\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {\n              minWidth: '300px',\n            },\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'slot',\n                  code: 'a-slot',\n                  width: '100%',\n                  height: '100px',\n                }\n              ]\n            }\n          }\n        ]\n      }\n    }\n  },\n  {\n    id: 'bar',\n    name: 'bar',\n    place: {width: '500px'},\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        display: 'flex',\n        borderWidth: '1px',\n        borderStyle: 'dotted',\n        borderColor: 'black'\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {\n              minWidth: '350px',\n            },\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'slot',\n                  code: 'b-slot',\n                  width: '100%',\n                  height: '100px',\n                }\n              ]\n            }\n          },\n          {\n            id: id++,\n            type: 'tag',\n            tag: 'div',\n            style: {},\n            slots: {\n              children: [\n                {\n                  id: id++,\n                  type: 'text',\n                  text: 'sss efhd ert rete a',\n                }\n              ]\n            },\n          },\n        ]\n      }\n    }\n  },\n  {\n    id: 'tree',\n    name: 'qwe',\n    place: {width: '500px'},\n    template: {\n      id: id++,\n      type: 'tag',\n      tag: 'div',\n      style: {\n        padding: '15px',\n        backgroundColor: '#ff0000'\n      },\n      slots: {\n        children: [\n          {\n            id: id++,\n            type: 'text',\n            text: 'hoba'\n          }\n        ]\n      }\n    }\n  }\n];\n","import Dexie from 'dexie';\nimport {TComponent, TDocumentIdentifier, TPage, TTemplateNode} from '../types';\nimport {pages} from '../data/pages';\nimport {components} from '../data/components';\n\nclass DataStore extends Dexie {\n  pages: Dexie.Table<TPage, string>;\n  components: Dexie.Table<TComponent, string>;\n\n  constructor() {\n    super('DataStore');\n\n    this.version(1).stores({\n      pages: '&id,name,template',\n      components: '&id,name,template',\n    });\n\n    this.on('populate', () => {\n      pages.forEach(page => this.pages.add(page));\n      components.forEach(comp => this.components.add(comp));\n    });\n\n    this.pages = this.table('pages');\n    this.components = this.table('components');\n  }\n}\n\nexport const dataStore = new DataStore();\n\ntype TR = {\n  template: TTemplateNode;\n}\nexport async function loadDocument(doc: TDocumentIdentifier): Promise<TR> {\n  if (doc.type === 'page') {\n    const page = await dataStore.pages.get(doc.id) as TPage;\n    return {\n      template: page.template,\n    }\n  }\n  else {\n    const component = await dataStore.components.get(doc.id) as TComponent;\n    return {\n      template: component.template,\n    }\n  }\n}\n","import {TThunkResult} from '../../store/store';\nimport {batch} from 'react-redux';\nimport {TTemplateSliceState, templateSlice} from '../../store/editor/templateSlice';\nimport {TVarsSliceState, varsSlice} from '../../store/editor/varsSlice';\n\nexport function applyEditor(template: TTemplateSliceState, vars: Partial<TVarsSliceState>): TThunkResult {\n  return (dispatch, getState) => {\n    batch(() => {\n      dispatch(templateSlice.actions.replaceTemplate(template));\n      dispatch(varsSlice.actions.merge(vars));\n    })\n  }\n}\n","import {pick} from 'lodash';\nimport {Action} from 'redux';\nimport {batch} from 'react-redux';\n\nimport {dataStore, loadDocument} from '../modules/dataStore';\nimport {areValuesEqual, isSameActivity} from '../helpers/common';\nimport {TThunkResult} from '../store/store';\nimport {TActivity, globalSlice, TTab} from '../store/global';\nimport {pagesSlice} from '../store/pages';\nimport {componentsSlice} from '../store/components';\nimport {createVarsSliceState} from '../store/editor/varsSlice';\nimport {applyEditor} from './editor';\nimport {TDocumentIdentifier} from '../types';\n\nconst {setActivity, addNewTab, updateTab, removeTab} = globalSlice.actions;\n\nexport function changeActivity(activity: TActivity): TThunkResult {\n  return async (dispatch, getState) => {\n    const {global: {tabs, activity: prevActivity}, editor: {template, vars}} = getState();\n    if (isSameActivity(activity, prevActivity)) {\n      return;\n    }\n\n    const actions: Array<Action | TThunkResult> = [];\n\n    if (prevActivity.type === 'editor') {\n      actions.push(updateTab([prevActivity.document, {\n        template,\n        vars: pick(vars, ['document'])\n      }]))\n    }\n\n    if (activity.type === 'editor') {\n      const existTab = tabs.find(t => areValuesEqual(t.document, activity.document));\n      if (existTab) {\n        actions.push(applyEditor(existTab.template, createVarsSliceState(existTab.vars)));\n      } else {\n        const page = await loadDocument(activity.document);\n        const newVars = createVarsSliceState({document: activity.document});\n        actions.push(applyEditor(page.template, newVars));\n        actions.push(addNewTab({\n          document: activity.document,\n          template: page.template,\n          vars: {}\n        }));\n      }\n    }\n    actions.push(setActivity(activity));\n    batch(() => actions.forEach(dispatch))\n  };\n}\n\nexport function saveDocument(document: TDocumentIdentifier): TThunkResult {\n  return async (dispatch, getState) => {\n    const tab = getState().global.tabs.find(t => areValuesEqual(t.document, document)) as TTab;\n    if (tab.document.type === 'page') {\n      await dataStore.pages.update(tab.document.id, {\n        template: tab.template\n      })\n      await dispatch(loadPages())\n    }\n    if (tab.document.type === 'component') {\n      await dataStore.components.update(tab.document.id, {\n        template: tab.template\n      })\n      await dispatch(loadComponents())\n    }\n    batch(() => {\n      dispatch(setActivity({type: 'pages'}));\n      dispatch(removeTab(tab.document));\n    })\n  }\n}\n\nexport function loadPages(): TThunkResult {\n  return async (dispatch, getState) => {\n    const pages = await dataStore.pages.toArray();\n    dispatch(pagesSlice.actions.setPages(pages));\n  }\n}\n\nexport function loadComponents(): TThunkResult {\n  return async (dispatch, getState) => {\n    const components = await dataStore.components.toArray();\n    dispatch(componentsSlice.actions.setComponents(components));\n  }\n}\n","import {sortBy, keyBy} from 'lodash';\n\nexport type TCssPropValueTypeColor = {type: 'color', defaults: () => string};\nexport type TCssPropValueTypeLength = {type: 'length', defaults: () => string};\nexport type TCssPropValueTypeVariant = {type: 'variant', variants: string[], defaults: () => string};\nexport type TCssPropValueType = {name: string} & (\n  TCssPropValueTypeColor\n  | TCssPropValueTypeLength\n  | TCssPropValueTypeVariant);\n\nexport const allCssProps: TCssPropValueType[] = [\n  {name: 'color', type: 'color', defaults: () => '#000000'},\n  {name: 'backgroundColor', type: 'color', defaults: () => '#FFFFFF'},\n  {name: 'borderColor', type: 'color', defaults: () => '#000000'},\n  {name: 'borderStyle', type: 'variant', variants: ['solid', 'dotted', 'double'], defaults: () => 'solid'},\n  {name: 'borderWidth', type: 'length', defaults: () => '1px'},\n  {name: 'minWidth', type: 'length', defaults: () => '100%'},\n  {name: 'padding', type: 'length', defaults: () => '0px'},\n  {name: 'margin', type: 'length', defaults: () => '0px'},\n  {name: 'display', type: 'variant', variants: ['block', 'flex'], defaults: () => 'block'}\n];\nexport const allCssPropsKeyed: {[name: string]: TCssPropValueType} = keyBy(allCssProps, 'name');\nexport const allCssPropsNames: string[] = sortBy(Object.keys(allCssPropsKeyed));\nexport const allCssPropsLength: number = allCssPropsNames.length;\n","import styles from './length.module.css';\nimport React from 'react';\nimport {Button, Menu, MenuItem, NumericInput, Popover, Position} from '@blueprintjs/core';\n\nconst units = ['px', '%'];\n\nexport function length({value, onChange}: {value: string, onChange: any}) {\n  const num = (value.match(/^-?\\d+/) as RegExpMatchArray)[0];\n  const unit = value.substring(num.length);\n  const permissionsMenu = (\n    <Popover\n      content={\n        <Menu className={styles.menu}>\n          {units.map(curUnit => (\n              <MenuItem\n                text={curUnit}\n                key={curUnit}\n                active={curUnit === unit}\n                onClick={() => onChange(`${num}${curUnit}`)}\n              />\n            )\n          )}\n        </Menu>\n      }\n      position={Position.BOTTOM_RIGHT}\n    >\n      <Button minimal={true} rightIcon=\"caret-down\">\n        {unit}\n      </Button>\n    </Popover>\n  );\n\n  return (\n    <NumericInput\n      value={num}\n      onValueChange={newNum => onChange(`${newNum}${unit}`)}\n      rightElement={permissionsMenu}\n    />\n  );\n}\n","import React from 'react';\nimport { Select, ItemRenderer } from '@blueprintjs/select';\nimport {Button, MenuItem} from '@blueprintjs/core';\nimport type {TCssPropValueTypeVariant} from '../../../modules/css/css';\n\nconst VariantSelect = Select.ofType<string>();\n\nconst renderItem: ItemRenderer<string> = (value, { handleClick, modifiers }) => {\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={value}\n      onClick={handleClick}\n      text={value}\n    />\n  );\n};\n\nexport function variant({value, onChange, type}: {value: any, onChange: any, type: TCssPropValueTypeVariant}) {\n  return (\n    <VariantSelect\n      activeItem={value}\n      items={type.variants}\n      itemRenderer={renderItem}\n      onItemSelect={onChange}\n      filterable={false}\n    >\n      <Button\n        text={value}\n        rightIcon=\"caret-down\"\n      />\n    </VariantSelect>\n  )\n}\n","import {color} from './color';\nimport {length} from './length';\nimport {variant} from './variant';\n\nexport default {\n  color,\n  length,\n  variant\n}\n","import React from 'react';\n\nexport function color({value, onChange}: {value: any, onChange: any}) {\n  return (\n    <input type=\"color\"\n           value={value}\n           onChange={e => onChange(e.target.value)}\n    />\n  )\n}\n","import styles from './Prop.module.css';\nimport React, {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {TPath} from '../../types';\nimport {templateSlice} from '../../store/editor/templateSlice';\nimport {allCssPropsKeyed} from '../../modules/css/css';\nimport editors from './editor';\n\ntype TPropProps = {propName: string, value: any, path: TPath};\nexport const Prop: React.FC<TPropProps> = React.memo(function Prop({propName, value, path}: TPropProps) {\n  const dispatch = useDispatch();\n  const onChange = useCallback(\n    (newVal: any) => dispatch(templateSlice.actions.setStyleProp([path, propName, newVal])),\n    [dispatch, path, propName]\n  );\n  const type = allCssPropsKeyed[propName];\n  return (\n    <>\n      <div className={styles.cell}>{propName}</div>\n      <div className={styles.cell}>\n        {React.createElement(((editors as any)[type.type]), {value, onChange, type})}\n      </div>\n    </>\n  )\n});\n","import styles from './CSSPropsEditor.module.css';\nimport React, {useMemo} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {sortBy, difference} from 'lodash';\nimport { MenuItem, Button, Card } from '@blueprintjs/core';\nimport { Select, ItemRenderer, ItemPredicate} from '@blueprintjs/select';\nimport {templateSlice} from '../../store/editor/templateSlice';\nimport type {TPath, TTagNode, TTemplateNode} from '../../types';\nimport {allCssPropsNames, allCssPropsKeyed} from '../../modules/css/css';\nimport {Prop} from './Prop';\n\nconst renderItem: ItemRenderer<string> = (propName, { handleClick, modifiers }) => {\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={propName}\n      onClick={handleClick}\n      text={propName}\n    />\n  );\n};\n\nconst filterItem: ItemPredicate<string> = (search, value) => {\n  if (search.length > 0) {\n    return value.startsWith(search);\n  }\n  return true\n};\n\nconst PropSelect = Select.ofType<string>();\n\ntype TPropsListProps = {tag: TTagNode<TTemplateNode>, path: TPath};\nfunction PropsList({tag, path}: TPropsListProps) {\n  const dispatch = useDispatch();\n  const usedProps = useMemo(() => sortBy(Object.keys(tag.style)), [tag.style]);\n  const propsToAdd = useMemo(() => difference(allCssPropsNames, usedProps), [usedProps])\n  return (\n    <Card>\n      <div className={styles.allProps}>\n        {usedProps.map(pn => <Prop propName={pn} value={tag.style[pn]} path={path} key={pn} />)}\n      </div>\n      {propsToAdd.length > 0 && (\n        <div className={styles.propSelect}>\n          <PropSelect\n            activeItem={null}\n            items={propsToAdd}\n            itemRenderer={renderItem}\n            itemPredicate={filterItem}\n            onItemSelect={propName => {\n              const value = allCssPropsKeyed[propName].defaults()\n              dispatch(templateSlice.actions.setStyleProp([path, propName, value]))\n            }}\n          >\n            <Button text=\"Add new prop\" rightIcon=\"caret-down\" />\n          </PropSelect>\n        </div>\n      )}\n    </Card>\n  )\n}\n\ntype TNodeProps = {node: TTemplateNode, path: TPath};\nexport function CSSPropsEditor({node, path}: TNodeProps) {\n  return (\n    <>\n      {node.type === 'tag' && <PropsList tag={node} path={path} />}\n    </>\n  )\n}\n","import React from 'react';\nimport {TPath, TTemplateNode} from '../../../types';\nimport {CSSPropsEditor} from '../../css-props-editor/CSSPropsEditor';\n\ntype TTagPropsProps = {node: TTemplateNode, path: TPath};\nexport function TagProps({node, path}: TTagPropsProps) {\n  return (\n    <div>\n      <CSSPropsEditor node={node} path={path} />\n    </div>\n  )\n}\n","import styles from './RightSpace.module.css';\nimport React from 'react';\nimport {shallowEqual, useSelector} from 'react-redux';\n\nimport {templateRootSelector, activeNodePathSelector} from '../../../store/editor';\nimport {TagProps} from './TagProps';\n\nexport function RightSpace() {\n  const np = useSelector(activeNodePathSelector, shallowEqual);\n  const tree = useSelector(templateRootSelector)\n  let children;\n  if (np) {\n    const {node, path} = np;\n    switch (node.type) {\n      case 'shadow':\n        children = <div>shadow</div>;\n        break;\n      case 'slot':\n        children = <div>slot {node.code}</div>\n        break;\n      case 'text':\n        children = <div>text &amp;{node.text}&amp;</div>\n        break;\n      case 'tag':\n        children = <TagProps node={node} path={path} />\n        break;\n      case 'component':\n        children = <div>component {node.component}</div>\n        break;\n      default:\n        children = <div>Select something</div>\n    }\n  }\n\n  return (\n    <div className={styles.rightSpace}>\n      {children}\n      <div style={{height: 300}}>\n        <pre>{JSON.stringify(tree, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\n\n","import React, {useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {map, kebabCase} from 'lodash';\nimport {TGlobalState} from '../store/store';\nimport {TComponent, TTagNode, TTemplateNode} from '../types';\nimport {filterTree} from '../helpers/tree';\n\ntype THeadStyle = {\n  id: string | number;\n  style: string;\n}\n\nfunction createCssClass(className: string, styles: any) {\n  return `.${className} {${map(styles, (v, n) => `${kebabCase(n)}: ${v};`).join('\\n')}}`;\n}\n\nfunction getHeadStyle(): THeadStyle[] {\n  const styles: string[] = [];\n  const styleSheets = document.styleSheets;\n  for (let i = 0; i < styleSheets.length; ++i) {\n    const ss: CSSStyleSheet = styleSheets[i] as CSSStyleSheet;\n    for (let j = 0; j < ss.cssRules.length; ++j) {\n      const cssRule = ss.cssRules[j];\n      if (cssRule instanceof CSSStyleRule) {\n        if (cssRule.selectorText.startsWith('._frame')) {\n          styles.push(cssRule.cssText);\n        }\n      }\n      if (cssRule instanceof CSSKeyframesRule) {\n        if (cssRule.name.startsWith('_frame')) {\n          styles.push(cssRule.cssText)\n        }\n      }\n    }\n  }\n\n  return [{\n    id: 'parent',\n    style: styles.join('\\n')\n  }];\n}\n\nconst ArrayStyles = React.memo(({styles}: {styles: THeadStyle[]}) => {\n  return <>{styles.map(s => <style type=\"text/css\" key={s.id}>{s.style}</style>)}</>;\n});\n\nconst filterCb = (node: TTemplateNode) => node.type === 'tag' && Object.keys(node.style).length > 0;\nconst TreeStyles = React.memo((props: {tree: TTemplateNode, prefix: string}) => {\n  const tags = filterTree<TTagNode<TTemplateNode>>(props.tree, filterCb);\n  const styles: THeadStyle[] = tags.map(tag => ({\n    id: tag.id,\n    style: createCssClass(`${props.prefix}${tag.id}`, tag.style)\n  }));\n  return <ArrayStyles styles={styles} />;\n});\n\nconst componentsSelector: (x: TGlobalState) => TComponent[] = x => x.components.components;\nconst ComponentsStyles = React.memo(() => {\n  const components = useSelector(componentsSelector);\n  return <>{components.map(comp => <TreeStyles tree={comp.template} prefix={`c${comp.id}_`} key={comp.id} />)}</>\n});\n\nexport const HeadStyles: React.FC<{tree: TTemplateNode}> = ({tree}) => {\n  const parentStyles = useMemo(getHeadStyle, []);\n  return (\n    <>\n      <ArrayStyles styles={parentStyles} />\n      <TreeStyles tree={tree} prefix=\"t\" />\n      <ComponentsStyles />\n    </>\n  );\n};\n","import React from 'react';\n\nfunction isDocument(el: any): el is HTMLDocument {\n  const doc = el?.defaultView?.HTMLDocument;\n  if (doc) {\n    return el instanceof doc;\n  }\n  return false;\n}\n\nfunction findDocument({parentNode}: any): HTMLDocument {\n  if (isDocument(parentNode)) {\n    return parentNode;\n  }\n  return findDocument(parentNode);\n}\n\nfunction replaceCaret(el: HTMLElement) {\n  const document = findDocument(el);\n  const target = document.createTextNode('');\n  el.appendChild(target);\n  const isTargetFocused = document.activeElement === el;\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    const sel = document.defaultView?.getSelection();\n    if (sel) {\n      const range = document.createRange();\n      range.setStart(target, target.nodeValue.length);\n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n    if (el instanceof HTMLElement) el.focus();\n  }\n}\n\nexport class ContentEditable extends React.Component<Props> {\n  lastHtml: string = this.props.html;\n\n  getEl = () => this.props.attrs.ref.current\n\n  render() {\n    const { attrs, html, ...props } = this.props;\n\n    return React.createElement(\n      'span',\n      {\n        dangerouslySetInnerHTML: { __html: html },\n        onInput: this.emitChange,\n        onBlur: this.props.onBlur || this.emitChange,\n        onKeyUp: this.props.onKeyUp || this.emitChange,\n        onKeyDown: this.props.onKeyDown || this.emitChange,\n        contentEditable: true,\n        ...props,\n        ...attrs\n      });\n  }\n\n  shouldComponentUpdate(nextProps: Props): boolean {\n    const { props } = this;\n    const el = this.getEl();\n\n    if (!el) return true;\n\n    if (nextProps.html !== el.innerHTML) {\n      return true;\n    }\n\n    return props.className !== nextProps.className || props.attrs !== nextProps.attrs;\n  }\n\n  componentDidUpdate() {\n    const el = this.getEl();\n    if (!el) return;\n\n    if (this.props.html !== el.innerHTML) {\n      el.innerHTML = this.props.html;\n    }\n    this.lastHtml = this.props.html;\n    replaceCaret(el);\n  }\n\n  emitChange = (originalEvt: React.SyntheticEvent<any>) => {\n    const el = this.getEl();\n    if (!el) return;\n\n    const html = el.innerHTML;\n    if (this.props.onChange && html !== this.lastHtml) {\n      this.props.onChange(html);\n    }\n    this.lastHtml = html;\n  }\n}\n\nexport type ContentEditableEvent = string;\ntype Modify<T, R> = Pick<T, Exclude<keyof T, keyof R>> & R;\ntype SpanProps = Modify<JSX.IntrinsicElements[\"span\"], { onChange: ((event: ContentEditableEvent) => void) }>;\n\nexport interface Props extends SpanProps {\n  html: string,\n  className?: string,\n  attrs?: any,\n}\n","import {batch} from 'react-redux';\n\nimport {TComponentNode, TTagNode, TTemplateNode, TPath, TSlotNode, TComponent} from '../../types';\nimport {TThunkResult} from '../../store/store';\nimport {TActiveShadowContent} from '../../store/editor/varsSlice';\nimport {\n  createComponentNode,\n  createShadowNode,\n  createTagNode,\n  createSlotNode,\n  filterTree,\n  getMaxId,\n  getNodeByPath\n} from '../../helpers/tree'\n\nimport {templateSlice} from '../../store/editor/templateSlice';\nimport {varsSlice} from '../../store/editor/varsSlice';\nimport {rectToBox, splitArrLastEl} from '../../helpers/common';\n\nexport function activateNode(path: TPath): TThunkResult  {\n  return (dispatch, getState) => {\n    batch(() => {\n      const {editor: {template}} = getState();\n      const node = getNodeByPath(template, path);\n      dispatch(varsSlice.actions.setActiveNode(path));\n      if (node.type === 'shadow') {\n        dispatch(varsSlice.actions.setActiveShadowContent());\n      }\n    })\n  };\n}\n\nexport function activateShadowContent(slotContent: TActiveShadowContent): TThunkResult {\n  return (dispatch, getState) => {\n    dispatch(varsSlice.actions.setActiveShadowContent(slotContent));\n  };\n}\n\nexport function applyShadowContent(): TThunkResult {\n  return (dispatch, getState) => {\n    const {editor: {vars, template}, components} = getState();\n    const activeNodePath = vars.activeNodePath as TPath;\n    const activeShadowContent = vars.activeShadowContent as TActiveShadowContent;\n    const id = getMaxId(template) + 1;\n    let newNode: TSlotNode | TTagNode<TTemplateNode> | TComponentNode<TTemplateNode>;\n    if (activeShadowContent[0] === 'slot') {\n      newNode = createSlotNode(id);\n    }\n    if (activeShadowContent[0] === 'tag') {\n      newNode = createTagNode(id, activeShadowContent[1]);\n    }\n    if (activeShadowContent[0] === 'component') {\n      const comp = components.components.find(c => c.id === activeShadowContent[1]) as TComponent;\n      newNode = createComponentNode(id, comp)\n    }\n    batch(() => {\n      dispatch(templateSlice.actions.replaceNode([activeNodePath, newNode]));\n      dispatch(varsSlice.actions.setActiveShadowContent());\n    });\n  };\n}\n\nexport function removeNode(path: TPath): TThunkResult {\n  return (dispatch, getState) => {\n    batch(() => {\n      dispatch(varsSlice.actions.setActiveNode());\n      dispatch(templateSlice.actions.removeNode(path));\n    })\n  }\n}\n\nexport function addNewShadow(path: TPath, addIdx: number): TThunkResult {\n  return (dispatch, getState) => {\n    const {editor: {template}, components} = getState();\n    const [parentPath, [slotName]] = splitArrLastEl(path);\n    const parentNode = getNodeByPath(template, parentPath);\n    const id = getMaxId(template) + 1;\n    let newNode;\n    if (parentNode.type === 'tag') {\n      newNode = createShadowNode(id, '100%', '50px');\n    }\n    if (parentNode.type === 'component') {\n      const comp = components.components.find(c => c.id === parentNode.component) as TComponent;\n      const [slot] = filterTree<TSlotNode>(comp.template, node => node.type === 'slot' && node.code === slotName);\n      newNode = createShadowNode(id, slot.width, slot.height);\n    }\n    if (newNode) {\n      dispatch(templateSlice.actions.insertNode([path, newNode, addIdx]));\n    }\n  }\n}\n\nexport function blinkNode(path: TPath): TThunkResult {\n  return (dispatch, getState) => {\n    const {editor: {template, vars: {refs}}} = getState();\n    const node = getNodeByPath(template, path)\n    const rect = refs.get(node.id).getBoundingClientRect();\n    dispatch(varsSlice.actions.addBlinkArea([node.id, rectToBox(rect)]));\n    setTimeout(() => dispatch(varsSlice.actions.removeBlinkArea(node.id)), 3000);\n  }\n}\n","import React, {MouseEvent, MutableRefObject, useContext, useMemo, useRef} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  TSlotContent,\n  TComponentNode,\n  TSlotNode,\n  TTagNode,\n  TTemplateNode,\n  TTextNode,\n  TPath,\n  TComponent,\n  TShadowNode,\n} from '../../types';\nimport {ContentEditable} from '../elements/ContentEditable';\nimport {arePathsEqual} from '../../helpers/common';\nimport {createComponentNode, createTagNode} from '../../helpers/tree';\nimport {TGlobalState} from '../../store/store';\nimport {TVarsSliceState} from '../../store/editor/varsSlice';\nimport {useRefStore} from '../../store/editor';\nimport {onNodeClick, onNodeContextMenu, onNodeOut, onNodeOver} from '../../procedures/nodesHandlers';\nimport {templateSlice} from '../../store/editor/templateSlice';\n\ntype TAttrs = {\n  ref: MutableRefObject<HTMLDivElement>;\n  onClick: (e: MouseEvent<HTMLDivElement>) => void;\n  onContextMenu: (e: MouseEvent<HTMLDivElement>) => void;\n  onMouseOver: (e: MouseEvent<HTMLDivElement>) => void;\n  onMouseOut: (e: MouseEvent<HTMLDivElement>) => void;\n};\n\ntype TSlotContextType = [\n  {[key: string]: TSlotContent<TTemplateNode>},\n  TPath,\n  boolean,\n  string\n];\n\nconst rootPath: TPath = [];\n\nconst SlotContext = React.createContext<TSlotContextType>([{}, [], false, '']);\nconst SlotActiveContext = React.createContext(true);\nconst TemplateActiveContext = React.createContext(false);\n\ntype TEmptyShadowActivatorProps = {width: string, height: string, selected: boolean, attrs?: TAttrs};\nfunction EmptyShadowActivator({width, height, selected, attrs}: TEmptyShadowActivatorProps) {\n  const slotActive = useContext(SlotActiveContext);\n\n  let className = '_frame_slot';\n  if (slotActive) {\n    className += selected ? ' _frame_slot_waiting' : ' _frame_slot_active';\n  }\n\n  return (\n    <div\n      style={{width, height}}\n      className={className}\n      {...attrs}\n    />\n  );\n}\n\ntype TEmptyShadowTagProps = {name: string, attrs?: TAttrs};\nfunction EmptyShadowTag({name, attrs}: TEmptyShadowTagProps) {\n  const node = createTagNode(-100, name);\n  return (\n    <SlotActiveContext.Provider value={false}>\n      <MKTagBrick node={node}\n                  path={[['_', 0]]}\n                  classPrefix={'tmp'}\n                  attrs={attrs}\n      />\n    </SlotActiveContext.Provider>\n  )\n}\n\ntype TEmptyShadowComponentProps = {componentId: string, attrs?: TAttrs};\nfunction EmptyShadowComponent({componentId, attrs}: TEmptyShadowComponentProps) {\n  const component = useSelector<TGlobalState, TComponent>(state => state.components.components.find(c => c.id === componentId) as TComponent);\n  const node = createComponentNode(-1000, component)\n  return (\n    <SlotActiveContext.Provider value={false}>\n      <MKComponentBrick node={node}\n                        path={[['_', 0]]}\n                        classPrefix=\"x\"\n                        attrs={attrs}\n      />\n    </SlotActiveContext.Provider>\n  )\n}\n\ntype TSlotContentProps = {path: TPath, content: TTemplateNode[], slotName: string, classPrefix: string};\nfunction SlotContent({path, content, slotName, classPrefix}: TSlotContentProps) {\n  const paths: TPath[] = useMemo(\n    () => content.map((c, idx) => [...path, [slotName, idx]]),\n    [content, path, slotName]\n  );\n  return <>{content.map((sn, idx) => (\n    <MKBrickSelector key={sn.id} node={sn} path={paths[idx]} classPrefix={classPrefix} />\n  ))}</>;\n}\n\ntype TMKTextBrickProps = {node: TTextNode, attrs?: TAttrs, path: TPath};\nfunction MKTextBrick({node, attrs, path}: TMKTextBrickProps) {\n  const dispatch = useDispatch();\n  if (attrs) {\n    return <ContentEditable\n      attrs={attrs}\n      html={node.text}\n      onChange={(txt) => dispatch(templateSlice.actions.setText([path, txt]))}\n    />\n  }\n  return <>{node.text}</>;\n}\n\ntype TMKTagBrickProps = {node: TTagNode<TTemplateNode>, path: TPath, classPrefix: string, attrs?: TAttrs};\nfunction MKTagBrick({node, path, classPrefix, attrs}: TMKTagBrickProps) {\n  const templateActive = useContext(TemplateActiveContext);\n  return React.createElement(\n    node.tag,\n    {\n      className: `${classPrefix}${node.id}`,\n      ...attrs,\n    },\n    <TemplateActiveContext.Provider value={templateActive}>\n      <SlotContent path={path} slotName=\"children\" content={node.slots.children} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  );\n}\n\ntype TMKComponentBrickProps = {node: TComponentNode<TTemplateNode>, path: TPath, classPrefix: string, attrs?: TAttrs};\nfunction MKComponentBrick({node, path, attrs, classPrefix}: TMKComponentBrickProps) {\n  const component = useSelector<TGlobalState, TComponent>(state => state.components.components.find(c => c.id === node.component) as TComponent);\n  const templateActive = useContext(TemplateActiveContext);\n  const ctx: TSlotContextType = useMemo(\n    () => [node.slots, path, templateActive, classPrefix],\n    [node.slots, path, templateActive, classPrefix]\n  );\n  return (\n    <SlotContext.Provider value={ctx}>\n      <MKTemplate node={component.template} active={false} classPrefix={`c${component.id}_`} attrs={attrs} />\n    </SlotContext.Provider>\n  );\n}\n\ntype TMKSlotBrickProps = {node: TSlotNode; attrs?: TAttrs};\n\nfunction MKSlotBrickActive({node}: TMKSlotBrickProps) {\n  const [slots, path, active, classPrefix] = useContext(SlotContext);\n  const slotName = node.code;\n  const content = slots[slotName];\n  return (\n    <TemplateActiveContext.Provider value={active}>\n      <SlotContent path={path} slotName={slotName} content={content} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  )\n}\n\nfunction MKSlotBrick({node, attrs}: TMKSlotBrickProps) {\n  const templateActive = useContext(TemplateActiveContext);\n  const isComponentMode = useSelector<TGlobalState, boolean>(x => x.editor.vars.document.type === 'component');\n  if (isComponentMode && templateActive) {\n    return (\n      <div\n        className=\"_frame_slot_component\"\n        style={{width: node.width, height: node.height}}\n        {...attrs}\n      />\n    );\n  }\n  return <MKSlotBrickActive node={node} />\n}\n\ntype TMKShadowBrickProps = {node: TShadowNode, path: TPath, attrs?: TAttrs};\nfunction MKShadowBrick({node, path, attrs}: TMKShadowBrickProps) {\n  const {activeNodePath, activeShadowContent} = useSelector<TGlobalState, TVarsSliceState>(x => x.editor.vars)\n  const isMyPath = !!activeNodePath && arePathsEqual(activeNodePath, path);\n\n  let children;\n  if (activeShadowContent && isMyPath) {\n    if (activeShadowContent[0] === 'slot') {\n      children = <div\n        className=\"_frame_slot_component\"\n        style={{width: '100px', height: '100px'}}\n      />\n    }\n    if (activeShadowContent[0] === 'tag') {\n      children = <EmptyShadowTag name={activeShadowContent[1]} attrs={attrs} />\n    }\n    if (activeShadowContent[0] === 'component') {\n      children = <EmptyShadowComponent componentId={activeShadowContent[1]} attrs={attrs} />;\n    }\n  } else {\n    children = <EmptyShadowActivator width={node.width} height={node.height} selected={isMyPath} attrs={attrs} />\n  }\n  return (\n    <TemplateActiveContext.Provider value={false}>\n      {children}\n    </TemplateActiveContext.Provider>\n  )\n}\n\nconst bricks: {\n  text: React.FC<TMKTextBrickProps>;\n  tag: React.FC<TMKTagBrickProps>;\n  component: React.FC<TMKComponentBrickProps>;\n  slot: React.FC<TMKSlotBrickProps>;\n  shadow: React.FC<TMKShadowBrickProps>\n} = {\n  text: MKTextBrick,\n  tag: MKTagBrick,\n  component: MKComponentBrick,\n  slot: MKSlotBrick,\n  shadow: MKShadowBrick,\n};\n\ntype TMKBrickSelectorProps = {node: TTemplateNode, path: TPath, attrs?: TAttrs, classPrefix: string};\nconst MKBrickSelector: React.FC<TMKBrickSelectorProps> = React.memo(function MKBrickSelector(\n  {node, path, classPrefix, attrs: parentAttrs}\n) {\n  const dispatch = useDispatch();\n  const nodeRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement>;\n  const templateActive = useContext(TemplateActiveContext);\n  useRefStore(node.id, templateActive, nodeRef)\n  const attrs: TAttrs | undefined = useMemo(() => {\n    if (templateActive) {\n      return {\n        ref: nodeRef,\n        onClick(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeClick(e, node, path));\n        },\n        onContextMenu(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeContextMenu(e, node, path))\n        },\n        onMouseOver(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeOver(e, node, path));\n        },\n        onMouseOut(e: MouseEvent<HTMLDivElement>) {\n          dispatch(onNodeOut(e, node, path));\n        },\n      };\n    }\n    return parentAttrs\n  }, [dispatch, templateActive, path, node, nodeRef, parentAttrs]);\n  return React.createElement(bricks[node.type] as any, {node, path, classPrefix, attrs});\n});\n\ntype TMKTemplateProps = {node: TTemplateNode, active: boolean, classPrefix: string, attrs?: any};\nfunction MKTemplate({node, active, classPrefix, attrs}: TMKTemplateProps) {\n  return (\n    <TemplateActiveContext.Provider value={active}>\n      <MKBrickSelector key=\"t-root\" node={node} path={rootPath} attrs={attrs} classPrefix={classPrefix} />\n    </TemplateActiveContext.Provider>\n  );\n}\n\nexport class FrameTree extends React.Component<{tree: TTemplateNode}, any> {\n  componentDidMount() {\n    console.log(111);\n  }\n\n  render() {\n    return <MKTemplate node={this.props.tree} active={true} classPrefix=\"t\" />;\n  }\n}\n","import {MouseEvent} from 'react';\nimport {batch} from 'react-redux';\nimport {TPath, TTemplateNode} from '../types';\nimport {TThunkResult} from '../store/store';\nimport {varsSlice} from '../store/editor/varsSlice';\nimport {activateNode, blinkNode} from './editor/template';\n\nexport function onNodeClick(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    dispatch(activateNode(path))\n  };\n}\n\nexport function onNodeContextMenu(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(varsSlice.actions.setContextMenu({\n      path,\n      left: e.clientX,\n      top: e.clientY\n    }))\n  }\n}\n\nexport function onNodeOver(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    batch(() => {\n      dispatch(varsSlice.actions.setHoverNode(path));\n      dispatch(blinkNode(path));\n    });\n  };\n}\nexport function onNodeOut(e: MouseEvent<HTMLDivElement>, node: TTemplateNode, path: TPath): TThunkResult<void> {\n  return (dispatch, getState) => {\n    e.stopPropagation();\n    dispatch(varsSlice.actions.setHoverNode())\n  };\n}\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Menu, MenuItem} from '@blueprintjs/core';\nimport {TPath, TTemplateNode} from '../../../types';\nimport {activateNode, addNewShadow, removeNode} from '../../../procedures/editor/template';\nimport {useNodeByPath} from '../../../store/editor';\n\nfunction slotSubmenu(dispatch: any, title: string, path: TPath, slotName: string, slotChildren: TTemplateNode[]) {\n  return (\n    <MenuItem icon=\"add\" text={title} key={slotName}>\n      <MenuItem\n        icon=\"add-row-top\"\n        text=\"Begin\"\n        onClick={() => dispatch(addNewShadow([...path, [slotName, 0]], 0))}\n      />\n      <MenuItem\n        icon=\"add-row-bottom\"\n        text=\"End\"\n        onClick={() => dispatch(addNewShadow([...path, [slotName, slotChildren.length]], 0))}\n      />\n    </MenuItem>\n  )\n}\n\ntype TNodeContextMenuProps = {path: TPath; useSelect?: boolean}\nexport function NodeContextMenu({path, useSelect}: TNodeContextMenuProps) {\n  const dispatch = useDispatch()\n  const node = useNodeByPath(path);\n\n  if (!node) {\n    return null;\n  }\n\n  return (\n    <Menu>\n      {useSelect && (\n        <MenuItem icon=\"select\" text=\"Select it\" onClick={() => dispatch(activateNode(path))} />\n      )}\n      {path.length > 0 && (\n        <>\n          <MenuItem icon=\"double-chevron-up\" text=\"Add before\" onClick={() => dispatch(addNewShadow(path, 0))} />\n          <MenuItem icon=\"double-chevron-down\" text=\"Add after\" onClick={() => dispatch(addNewShadow(path, 1))} />\n        </>\n      )}\n      {node.type === 'tag' && slotSubmenu(dispatch, 'Add element', path, 'children', node.slots.children)}\n      {node.type === 'component' && (\n        Object.keys(node.slots).map(slotName => slotSubmenu(dispatch, `Add element to ${slotName}`, path, slotName, node.slots[slotName]))\n      )}\n      {path.length > 0 && (\n        <MenuItem icon=\"delete\" text=\"Delete\" >\n          <MenuItem icon=\"thumbs-up\" text=\"Yes\" onClick={() => dispatch(removeNode(path))} />\n        </MenuItem>\n      )}\n    </Menu>\n  );\n}\n","import styles from './Bottom.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Breadcrumbs, IBreadcrumbProps, Breadcrumb, PopoverInteractionKind, Popover } from '@blueprintjs/core';\n\nimport {TPath, TTemplateNode} from '../../types';\nimport {TGlobalState} from '../../store/store';\n\nimport {getBranch} from '../../helpers/tree';\nimport {areArraysEqual} from '../../helpers/common';\nimport {blinkNode} from '../../procedures/editor/template';\n\nimport { NodeContextMenu } from './node-context-menu/NodeContextMenu';\n\nconst icons = {\n  shadow: 'new-object',\n  component: 'box',\n  tag: 'double-chevron-left',\n};\n\nfunction nodeToString(node: TTemplateNode): string {\n  if (node.type === 'tag') {\n    return `<${node.tag} />`;\n  }\n  if (node.type === 'component') {\n    return node.component;\n  }\n  return node.type;\n}\n\ninterface IBottomBreadcrumbsProps extends IBreadcrumbProps {\n  path: TPath;\n}\n\nfunction BreadCrumbWrapper({item, path}: {item: IBreadcrumbProps; path: TPath}) {\n  const dispatch = useDispatch();\n  return (\n    <Popover\n      content={<NodeContextMenu path={path} useSelect={true} />}\n      interactionKind={PopoverInteractionKind.CLICK}\n    >\n      <span onMouseOver={() => dispatch(blinkNode(path))}>\n        <Breadcrumb {...item} className={styles.breadCrumb} />\n      </span>\n    </Popover>\n  );\n}\n\nconst renderBreadcrumb = ({path, ...item}: IBottomBreadcrumbsProps) => {\n  return (\n    <BreadCrumbWrapper item={item} path={path} />\n  )\n};\n\n\ntype TSelectorResult = [TTemplateNode, TPath];\nconst emptyPath: TPath = [];\nconst selector = ({editor}: TGlobalState): TSelectorResult => [editor.template, editor.vars.activeNodePath || emptyPath];\nexport function Bottom() {\n  const [tree, path] = useSelector<TGlobalState, TSelectorResult>(selector, areArraysEqual);\n\n  const nodes = getBranch(tree, path);\n  const items: IBottomBreadcrumbsProps[] = nodes.map((node, idx) => {\n    const curPath = path.slice(0, idx);\n    return {\n      text: nodeToString(node),\n      icon: (icons as any)[node.type],\n      path: curPath\n    }\n  })\n  return (\n    <div className={styles.bottom}>\n      <Breadcrumbs\n        items={items}\n        breadcrumbRenderer={renderBreadcrumb as any}\n        currentBreadcrumbRenderer={renderBreadcrumb as any}\n      />\n    </div>\n  );\n}\n","import styles from './Floats.module.css';\nimport React, {useMemo} from 'react'\nimport {useSelector} from 'react-redux';\n\nimport {TBoxCoords} from '../../types';\nimport {areArraysEqual, rectToBox} from '../../helpers/common';\nimport {TGlobalState} from '../../store/store';\nimport {TBlinkArea, TVarsSliceState} from '../../store/editor/varsSlice';\nimport {\n  TActiveNodePathSelectorResult,\n  blinkAreasSelector, iframeCoordsSelector, activeNodePathSelector, refStoreSelector\n} from '../../store/editor'\n\nfunction FloatBox({box, className}: {box: TBoxCoords, className: string}) {\n  const iframeCoords = useSelector(iframeCoordsSelector);\n  return (\n    <div\n      className={className}\n      style={{\n        left: box.left + iframeCoords.left - 1,\n        top: box.top + iframeCoords.top - 1,\n        width: box.width,\n        height: box.height\n      }}\n    />\n  )\n}\n\nfunction FloatsBase({areas, np, refs}: {areas: TBlinkArea[], np: TActiveNodePathSelectorResult, refs: TVarsSliceState['refs']}) {\n  const iframeCoords = useSelector(iframeCoordsSelector);\n  const selectedBox = useMemo(() => {\n    if (np?.node) {\n      const element = refs.get(np.node.id);\n      console.log(np.node, element)\n      if (element) {\n        return rectToBox(element.getBoundingClientRect());\n      }\n    }\n  }, [np, refs, iframeCoords]);\n  return (\n    <>\n      {selectedBox && <FloatBox box={selectedBox} className={styles.selectedBox} />}\n      {areas.map(area => <FloatBox box={area.box} className={styles.blinkBox} key={area.uid} />)}\n    </>\n  )\n}\n\nconst selector: (state: TGlobalState) => [TBlinkArea[], TActiveNodePathSelectorResult, TVarsSliceState['refs']] = (state) => [\n  blinkAreasSelector(state),\n  activeNodePathSelector(state),\n  refStoreSelector(state)\n];\nexport const Floats = React.memo((): any => {\n  const [areas, np, refs] = useSelector(selector, areArraysEqual);\n  return np?.node.type !== 'shadow' && <FloatsBase areas={areas} np={np} refs={refs} />;\n});\n","import React, {useEffect} from 'react'\nimport {useSelector, useStore, Provider} from 'react-redux';\nimport {ContextMenu} from '@blueprintjs/core';\nimport {varsSlice} from '../../store/editor/varsSlice';\nimport {contextMenuSelector} from '../../store/editor'\nimport {TGlobalState} from '../../store/store';\nimport {NodeContextMenu} from './node-context-menu/NodeContextMenu';\n\nexport function ContextMenus() {\n  const store = useStore<TGlobalState>();\n  const contextMenu = useSelector(contextMenuSelector);\n  useEffect(() => {\n    if (contextMenu) {\n      Promise.resolve().then(() => {\n        const {left, top, path} = contextMenu;\n        ContextMenu.show(\n          <Provider store={store}>\n            <NodeContextMenu path={path} />\n          </Provider>,\n          {left, top},\n          () => { store.dispatch(varsSlice.actions.setContextMenu())}\n        );\n      })\n    }\n  }, [contextMenu, store])\n  return null;\n}\n","import styles from './Frame.module.css'\nimport React, {RefObject, PureComponent} from 'react';\nimport ReactDOM from 'react-dom';\nimport cn from \"classnames\";\n\nimport type {Dispatch} from 'redux';\nimport {varsSlice} from '../../../store/editor/varsSlice';\nimport {rectToBox} from '../../../helpers/common';\n\nexport type FrameProps = {\n  head: React.ReactNode;\n  content: React.ReactNode;\n  dispatch: Dispatch<any>;\n  className?: string;\n}\n\n// const initialContent = '<!DOCTYPE html><html><head></head><body class=\"_frame_body\"></body></html>';\n\nexport default class Frame extends PureComponent<FrameProps, {}> {\n  private node: RefObject<HTMLIFrameElement> = React.createRef();\n  private resizeObserver: ResizeObserver = new ResizeObserver(() => { this.dispatchCoords(); });\n\n  componentDidMount() {\n    const doc = this.getDoc();\n    if (doc?.readyState === 'complete') {\n      this.handleLoad();\n    } else {\n      this.node.current?.addEventListener('load', this.handleLoad);\n    }\n    this.resizeObserver.observe(this.node.current as HTMLIFrameElement);\n  }\n\n  componentWillUnmount() {\n    this.node.current?.removeEventListener('load', this.handleLoad);\n\n    this.resizeObserver.disconnect();\n  }\n\n  dispatchCoords() {\n    const rect = (this.node.current as HTMLIFrameElement).getBoundingClientRect();\n    this.props.dispatch(varsSlice.actions.setIframeCoords(rectToBox(rect)))\n  }\n\n  getDoc(): Document | null {\n    return this.node.current?.contentDocument || null;\n  }\n\n  handleLoad = () => {\n    this.getDoc()?.body.classList.add('_frame_body');\n    this.forceUpdate();\n  };\n\n  handleMouseLeave = () => {\n    this.props.dispatch(varsSlice.actions.removeAllBlinkAreas())\n  }\n\n  renderFrameContents() {\n    const doc = this.getDoc();\n    if (!doc) {\n      return null;\n    }\n\n    return [\n      ReactDOM.createPortal(this.props.head, doc.head),\n      ReactDOM.createPortal(this.props.content, doc.body)\n    ];\n  }\n\n  render() {\n    return (\n      <iframe\n        ref={this.node}\n        title=\"huitle\"\n        className={cn(styles.frame, this.props.className)}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {this.renderFrameContents()}\n      </iframe>\n    );\n  }\n}\n","import styles from './SelectComponent.module.css';\nimport React, {useMemo} from 'react';\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\nimport {Callout, Card, Tooltip} from '@blueprintjs/core';\n\nimport {TGlobalState} from '../../../store/store';\nimport {TComponent} from '../../../types';\nimport {TActiveShadowContent, TVarsSliceState} from '../../../store/editor/varsSlice';\n\nimport {activateShadowContent, applyShadowContent} from '../../../procedures/editor/template';\nimport {mainCoordsSelector, activeNodePathSelector} from \"../../../store/editor\";\n\nconst selector = ({editor: {vars}}: TGlobalState): TActiveShadowContent | undefined => vars.activeShadowContent\nfunction Item({item}: {item: TActiveShadowContent}) {\n  const dispatch = useDispatch();\n  const activeShadowContent = useSelector(selector);\n  const isActive = activeShadowContent?.[0] === item[0] && activeShadowContent[1] === item[1];\n  const tooltip = isActive ? 'Click to select' : 'Click to preview';\n\n  return (\n    <Tooltip content={tooltip}>\n      <Card\n        interactive\n        elevation={isActive ? 4 : 0}\n        className={styles.itemCard}\n        onClick={() => {\n          if (isActive) {\n            dispatch(applyShadowContent())\n          } else {\n            dispatch(activateShadowContent(item))\n          }\n        }}\n      >\n        <Callout className={cn(styles.itemInner, isActive && 'bp3-intent-success')}>\n          {item[0] === 'tag' ? '<' : '%'}{item[1]}\n        </Callout>\n      </Card>\n    </Tooltip>\n  )\n}\n\nconst slots : Array<TActiveShadowContent> = [['slot']];\nconst tags: Array<TActiveShadowContent> = [['tag', 'div']];\n\nexport function SelectComponent() {\n  const components = useSelector<TGlobalState, TComponent[]>(state => state.components.components);\n  const vars = useSelector<TGlobalState, TVarsSliceState>(state => state.editor.vars);\n\n  const items: Array<TActiveShadowContent> = useMemo(() => {\n    const isComp = vars.document.type === 'component';\n    const comps = isComp ? components.filter(c => c.id !== vars.document.id) : components;\n    return [\n      ...(isComp ? slots : []),\n      ...tags,\n      ...comps.map((c): TActiveShadowContent => (['component', c.id]))\n    ]\n  }, [components, vars.document]);\n  return (\n    <>\n      <div className={styles.grid}>\n        {items.map(i => <Item item={i} key={i.join(':')} />)}\n      </div>\n    </>\n  );\n}\n\nexport function SlidePanel() {\n  const mainCoords = useSelector(mainCoordsSelector);\n  const np = useSelector(activeNodePathSelector, shallowEqual);\n  const active = np?.node.type === 'shadow';\n  return (\n    <div\n      style={{\n        width: mainCoords.width / 3 * 2,\n        height: mainCoords.height\n      }}\n      className={cn(styles.slidePanel, active && styles.active)}\n    >\n      {active && <SelectComponent  />}\n    </div>\n  )\n}\n\n// translateX(calc(-1 * 100%*.3/2)) scale(.70);\n","import styles from './Editor.module.css';\nimport React, {MutableRefObject, useEffect, useMemo, useRef} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\n\nimport {TBoxCoords, TTemplateNode} from '../../types';\nimport {rectToBox} from '../../helpers/common';\nimport {TGlobalState} from '../../store/store';\nimport {iframeCoordsSelector, mainCoordsSelector, activeNodePathSelector, templateRootSelector} from '../../store/editor';\nimport {varsSlice} from '../../store/editor/varsSlice';\n\nimport {RightSpace} from './right/RightSpace';\n\nimport {HeadStyles} from '../HeadStyles';\n\nimport {FrameTree} from './EditArea';\nimport {Bottom} from './Bottom';\nimport {Floats} from './Floats';\nimport {ContextMenus} from './ContextMenus';\nimport Frame from './frame/Frame';\nimport {SlidePanel} from './select-component/SelectComponent';\n\nconst editorSelector: (state: TGlobalState) => [TTemplateNode, TBoxCoords, TBoxCoords, boolean] = (state) => {\n  return [\n    templateRootSelector(state),\n    mainCoordsSelector(state),\n    iframeCoordsSelector(state),\n    activeNodePathSelector(state)?.node.type === 'shadow'\n  ];\n};\nexport function Editor() {\n  const ref = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement>;\n  const dispatch = useDispatch();\n  const [tree, mainCoords, iframeCoords, shadowActive] = useSelector(editorSelector);\n  const style: any = useMemo(() => {\n    const nw = mainCoords.width / 3;\n    const scale = nw / iframeCoords.width;\n    return {\n      '--iframe-scale': scale,\n      '--iframe-translate': -1 * (1 - scale) / 2\n    }\n  }, [mainCoords, iframeCoords]);\n  useEffect(() => {\n    const resizeObserver: ResizeObserver = new ResizeObserver(() => {\n      const rect = (ref.current as HTMLDivElement).getBoundingClientRect();\n      dispatch(varsSlice.actions.setMainCoords(rectToBox(rect)))\n    });\n    resizeObserver.observe(ref.current as HTMLDivElement);\n    return () => resizeObserver.disconnect();\n  }, [dispatch, ref]);\n  return (\n    <div className={styles.content} ref={ref}>\n      <div className={styles.center} style={style}>\n        <Frame\n          head={<HeadStyles tree={tree} />}\n          content={<FrameTree tree={tree} />}\n          dispatch={dispatch}\n          className={cn(styles.frame, shadowActive && styles.frameMini)}\n        />\n        <Bottom />\n      </div>\n      <div className={styles.right}>\n        <RightSpace />\n      </div>\n      <Floats/>\n      <ContextMenus/>\n      <SlidePanel />\n    </div>\n  )\n}\n","import styles from './Components.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TGlobalState} from '../store/store';\nimport {TComponent} from '../types';\nimport {Card} from '@blueprintjs/core';\nimport {changeActivity} from '../procedures/main';\n\nexport function Components() {\n  const dispatch = useDispatch();\n  const components = useSelector<TGlobalState, TComponent[]>(state => state.components.components);\n  return (\n    <div className={styles.grid}>\n      {components.map(components => (\n        <Card\n          interactive\n          className={styles.itemCard}\n          key={components.id}\n          onClick={() => {\n            dispatch(changeActivity({\n              type: 'editor',\n              document: {\n                type: 'component',\n                id: components.id\n              }\n            }))\n          }}\n        >\n          {components.name}\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import styles from './Pages.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Card} from '@blueprintjs/core';\nimport {TGlobalState} from '../store/store';\nimport {TPage} from '../types';\nimport {changeActivity} from '../procedures/main';\n\nexport function Pages() {\n  const dispatch = useDispatch();\n  const pages = useSelector<TGlobalState, TPage[]>(state => state.pages.pages);\n  return (\n    <div className={styles.grid}>\n      {pages.map(page => (\n        <Card\n          interactive\n          className={styles.itemCard}\n          key={page.id}\n          onClick={() => {\n            dispatch(changeActivity({\n              type: 'editor',\n              document: {\n                type: 'page',\n                id: page.id\n              }\n            }))\n          }}\n        >\n          {page.name}\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import styles from './App.module.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Navbar, Button} from '@blueprintjs/core';\n\nimport {areArraysEqual, areValuesEqual} from '../helpers/common';\nimport {TGlobalState} from '../store/store';\nimport {TActivity, TTab, activitySelector, tabsSelector} from '../store/global';\nimport {changeActivity, saveDocument} from '../procedures/main';\n\nimport {Editor} from './editor/Editor';\nimport {Components} from './Components';\nimport {Pages} from './Pages';\n\nfunction SwitchActivity({activity}: {activity: TActivity}) {\n  switch (activity.type) {\n    case 'components':\n      return <Components />;\n    case 'pages':\n      return <Pages />;\n    case 'editor':\n      return <Editor />;\n  }\n}\n\ntype TSelector = (state: TGlobalState) => [TActivity, TTab[]];\nconst selector: TSelector = state => [activitySelector(state), tabsSelector(state)];\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const [activity, tabs] = useSelector(selector, areArraysEqual);\n  return (\n    <div className={`bp3-dark ${styles.app}`}>\n      <Navbar>\n        <Navbar.Group>\n          <Navbar.Heading>Mastkloot</Navbar.Heading>\n          <Navbar.Divider />\n          <Button\n            active={'pages' === activity.type}\n            minimal\n            icon=\"document\"\n            text=\"Pages\"\n            onClick={() => dispatch(changeActivity({type: 'pages'}))}\n          />\n          <Button\n            active={'components' === activity.type}\n            minimal\n            icon=\"box\"\n            text=\"Components\"\n            onClick={() => dispatch(changeActivity({type: 'components'}))}\n          />\n          <Navbar.Divider />\n          {tabs.map(({document}) => (\n            <Button\n              minimal\n              icon=\"database\"\n              rightIcon=\"cross\"\n              active={'editor' === activity.type && areValuesEqual(activity.document, document)}\n              onClick={(e: any) => {\n                if(e.target.parentNode.dataset.icon === 'cross') {\n                  dispatch(saveDocument(document))\n                } else {\n                  dispatch(changeActivity({\n                    type: 'editor',\n                    document\n                  }));\n                }\n              }}\n              key={`${document.type}:${document.id}`}\n            >\n              {document.id}\n            </Button>\n          ))}\n        </Navbar.Group>\n      </Navbar>\n      <SwitchActivity activity={activity} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process.env.PUBLIC_URL as string),\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport './frame.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport {store} from './store/store';\nimport App from './components/App';\nimport {loadComponents, loadPages} from './procedures/main';\n\nimport * as serviceWorker from './serviceWorker';\n\nstore.dispatch(loadPages());\nstore.dispatch(loadComponents());\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Editor_content__1Hy63\",\"frame\":\"Editor_frame__1YmpD\",\"frameMini\":\"Editor_frameMini__3Fpft\",\"center\":\"Editor_center__12CWH\",\"right\":\"Editor_right__2DHew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidePanel\":\"SelectComponent_slidePanel__ilGC5\",\"active\":\"SelectComponent_active__HMmtd\",\"grid\":\"SelectComponent_grid__axNLB\",\"itemCard\":\"SelectComponent_itemCard__3Lj1S\",\"itemInner\":\"SelectComponent_itemInner__2lMob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allProps\":\"CSSPropsEditor_allProps__304z7\",\"propSelect\":\"CSSPropsEditor_propSelect__3nU8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Prop_cell__381Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottom\":\"Bottom_bottom__3almA\",\"breadCrumb\":\"Bottom_breadCrumb__13MV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blinkBox\":\"Floats_blinkBox__3QTgp\",\"BlinkBoxKF\":\"Floats_BlinkBoxKF__Mdouj\",\"selectedBox\":\"Floats_selectedBox__Ery_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Components_grid__2bbJK\",\"itemCard\":\"Components_itemCard__Hy6rg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Pages_grid__2KMC7\",\"itemCard\":\"Pages_itemCard__1xHP8\"};"],"sourceRoot":""}